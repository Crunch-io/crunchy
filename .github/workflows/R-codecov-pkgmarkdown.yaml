# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-check:
    runs-on: ubuntu-18.04
    name: ubuntu-18.04 - R - ${{ matrix.config.r }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {r: 'release'}
          - {r: 'oldrel'}
          - {r: 'devel'}
    env:
      GITHUB_ACTION: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.TA_DA_ACCESS }}
      _R_CHECK_LENGTH_LOGIC2_: true
      _R_CHECK_TESTS_NLINES_: 0
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "18.04"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          install.packages(c("remotes"))
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Install dependencies for coverage and lintr
        if: matrix.config.r == 'release'
        run: |
          remotes::install_cran("covr")
          remotes::install_cran("lintr")
        shell: Rscript {0}

      - name: Test coverage and lintr
        if: matrix.config.r == 'release'
        run: | 
          covr::codecov()
          lintr::lint_package()
        shell: Rscript {0}

      - name: Set release version env var
        if: matrix.config.r == 'release' && github.event_name == 'push'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install dependencies for pkgdown
        if: matrix.config.r == 'release'
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("pkgdown")
        shell: Rscript {0}

      - name: Install package and run script
        if: matrix.config.r == 'release'
        run: |
          R CMD INSTALL .
          Rscript -e 'pkgdown::build_site()'

      - uses: actions/checkout@v2
        if: matrix.config.r == 'release'
        with:
          repository: 'Crunch-io/ta-da'
          token: ${GH_TOKEN}
          path: 'ta-da'
          fetch-depth: 2
          ref: 'src'

      - name: Run prep tasks
        if: matrix.config.r == 'release'
        working-directory: ./ta-da
        run: |
          rm -rf static/r/crunchy
          pwd
          ls -lrt
          cp -r ../docs/. static/r/crunchy
          ls -lrt static/r/crunchy/


      - name: Commit and Push
        if: matrix.config.r == 'release' && github.event_name == 'push'
        working-directory: ./ta-da
        uses: github-actions-x/commit@v2.7
        with:
          commit-message: 'Updating crunchy pkgdown site (release ${RELEASE_VERSION})'
          push-branch: 'src'
          github-token: ${GH_TOKEN}
