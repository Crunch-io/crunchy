<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>general on Modern survey data analysis</title>
    <link>//crunch-io.github.io/crunchy/newsite/categories/general/</link>
    <description>Recent content in general on Modern survey data analysis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Aug 2018 12:12:10 -0700</lastBuildDate><atom:link href="//crunch-io.github.io/crunchy/newsite/categories/general/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Making Graphs Look Easy with ggplot2 and Tidy Evaluation</title>
      <link>//crunch-io.github.io/crunchy/newsite/dev/blog/autoplot-with-tidyeval/</link>
      <pubDate>Fri, 03 Aug 2018 12:12:10 -0700</pubDate>
      
      <guid>//crunch-io.github.io/crunchy/newsite/dev/blog/autoplot-with-tidyeval/</guid>
      <description>At Crunch, one of the ways we try to make data exploration simple is by providing sensible default views that take into account the properties of your data and metadata. We&amp;rsquo;re in the process of releasing some plotting methods in our crplyr R package that define methods for ggplot2&amp;rsquo;s autoplot() function. autoplot() was the ideal approach for us to encapsulate the logic of how to &amp;ldquo;just do the right thing.&amp;rdquo; You can do the analysis you want, and it will make smart choices about how to display it with no additional input&amp;ndash;all of which you can control or override with additional ggplot2 layers, if you want.</description>
    </item>
    
    <item>
      <title>Using Selenium with Docker for Consistent Testing</title>
      <link>//crunch-io.github.io/crunchy/newsite/dev/blog/nightwatch-selenium-docker/</link>
      <pubDate>Tue, 10 Oct 2017 09:00:00 -0700</pubDate>
      
      <guid>//crunch-io.github.io/crunchy/newsite/dev/blog/nightwatch-selenium-docker/</guid>
      <description>At Crunch we greatly value tests. We have unit tests, functional tests, and the stack wouldn&amp;rsquo;t be complete without end-to-end tests. Good tests allow us to update code quickly and confidently.
For our end-to-end testing we use Nightwatch.js, a JavaScript testing tool that uses Selenium to drive a browser to perform tests. Our goal is to be able to test our Python backend, our REST APIs, and the behavior of our JavaScript single-page application, using a real browser, running real code.</description>
    </item>
    
    <item>
      <title>Developers As Users</title>
      <link>//crunch-io.github.io/crunchy/newsite/dev/blog/devs-as-users/</link>
      <pubDate>Tue, 12 Sep 2017 12:12:10 -0700</pubDate>
      
      <guid>//crunch-io.github.io/crunchy/newsite/dev/blog/devs-as-users/</guid>
      <description>Crunch is designed to make it easy to manage and explore data, and it is particularly optimized for survey data. We natively support data types that are common in survey research, and it is also simple to do things like generate population weights and apply them automatically to all calculations. And the kinds of analyses and reports that are standard among researchers are easily selected and exported.
These features are great if you work at a research company, or in a marketing department, or otherwise work with surveys professionally.</description>
    </item>
    
    <item>
      <title>Using Travis-CI to Build Static Sites</title>
      <link>//crunch-io.github.io/crunchy/newsite/dev/blog/building-the-blog-on-travis/</link>
      <pubDate>Thu, 18 May 2017 21:12:10 -0700</pubDate>
      
      <guid>//crunch-io.github.io/crunchy/newsite/dev/blog/building-the-blog-on-travis/</guid>
      <description>At Crunch.io, we&amp;rsquo;re fervent believers in automation. If something requires a human to remember to do an extra manual step, it won&amp;rsquo;t happen consistently. We automate test running so that we don&amp;rsquo;t have to fix the same bug twice. We write code to do tedious tasks so that we can devote our mental energy to harder problems. We automate processes and policies so that developers don&amp;rsquo;t have remember the right things to doâ€”the build and continuous-integration systems guide us.</description>
    </item>
    
  </channel>
</rss>
