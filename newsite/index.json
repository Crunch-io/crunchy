[{"categories":null,"contents":"A collaboration between professors from three universities set out to deliver a series of reports entitled, “The State of the Nation: A 50-State COVID-19 Survey”. Survey data was collected from over 20,000 individuals, who responded to questions about reopening, mitigation, health guidelines, and more, with the survey running every two weeks.\nThe Director of Polling at one of the universities involved with the project reached out to Crunch.io for an easy-to-use survey tool that could integrate data from multiple sources, including national and state databases. With Crunch.io’s intuitive, simple interface, the team quickly learned how to navigate the platform and run analysis, create crosstabs and visualizations, export analyzes to editable PowerPoint objects, and provide key insights for the informative reports. The analysis has been shared with, and available from, multiple media outlets, including Business Insider, Washington Post, and USA Today.\n","permalink":"//crunch-io.github.io/crunchy/newsite/case-studies/universities/","tags":null,"title":"Universities"},{"categories":null,"contents":"A video game company uses survey data from players to showcase audience insights and sell sponsorships to its advertisers. They chose Crunch.io because of the increased efficiency and time saved analyzing data with the drag-and-drop platform. They work with Crunch.io to analyze tracker data across multiple countries.\nIn preparation for a partner event, the company analysts built and presented interactive dashboards customized for each of their partners with Crunch.io’s no-coding, drag-and-drop dashboard builder.\n","permalink":"//crunch-io.github.io/crunchy/newsite/case-studies/gaming/","tags":null,"title":"Gaming"},{"categories":null,"contents":"Gojek is the leading on-demand multi-service app platform and digital payment technology group in Southeast Asia. The company uses a call center to connect consumers to courier delivery and ride-hailing services. As of mid-2019, Gojek was a “Decacorn” valued at over $10 billion dollars with over 3,000 employees.\nGojek values Crunch.io for its ability to handle large-scale surveys. The company analyzes multiple tracker waves of data across a dozen countries and several customer satisfaction surveys across their rewards programs and multiple product lines in Crunch.io. They are committed to “democratizing survey data” with Crunch.io, inviting more users each year to utilize the platform.\n","permalink":"//crunch-io.github.io/crunchy/newsite/case-studies/gojek/","tags":null,"title":"Gojek"},{"categories":null,"contents":"When COVID-19 hit, a leading live entertainment and ticketing company didn’t panic. Instead, they launched a large gen-pop survey of almost 10,000 people across 8 countries to research how the pandemic is affecting their customers’ willingness to go to live events in the future.\nThe insights team analyzed key results within 48 hours of field completion with Crunch’s easy-to-use online platform. They prepared, analyzed data, built dashboards and delivered PowerPoint slides all within a few days.\nThe team continues to leverage Crunch.io to gain new insights and position for future growth through the COVID-19 tracker studies, running monthly, as well as analyze ad hoc studies.\n","permalink":"//crunch-io.github.io/crunchy/newsite/case-studies/entertainment/","tags":null,"title":"Entertainment"},{"categories":null,"contents":"Prodege is a leading provider of data and insights fueled by their global proprietary panel of 120 million members in over 125 countries. They leverage their innovative Prodege On-Demand platform (POD) to create and launch surveys for over 1,000 clients worldwide and chose to integrate Crunch.io within the POD platform so that their clients have access to data in exportable charts as well as online dashboards.\nProdege specializes in delivering fast, whether clients leverage Prodege’s managed services team of research experts or utilize their DIY version of POD. Integrating with Crunch enables Prodege to quickly provide data analysis and visualization to clients immediately after data collection is complete.\nData is automatically uploaded from POD to Crunch.io using the Crunch API. Then Prodege’s team or their DIY client-users may quickly create crosstabs and visualizations with an easy-to-use, drag-and-drop approach. Prodege also builds custom dashboards for each client utilizing each client\u0026rsquo;s branding by applying custom color palettes.\nThrough integrating Crunch.io and by utilizing scripts to automate workflows, the Prodege team is able to provide clients a unified experience with a consistent look-and-feel, enable drag-and-drop analysis, and deliver interactive dashboards.\n","permalink":"//crunch-io.github.io/crunchy/newsite/case-studies/prodege/","tags":null,"title":"Prodege"},{"categories":null,"contents":"The Chicago Council on Global Affairs is an independent, nonpartisan organization that provides insight into global issues and policy.\nThe Chicago Council Survey team, part of the Lester Crown Center on US Foreign Policy, uses Crunch.io to analyze data from its annual survey on American public opinion and US foreign policy.\nThey have appended over 45 years of public opinion datasets into one dataset, previously only available in separate files, to enable simple and intuitive analysis of historical data.\n","permalink":"//crunch-io.github.io/crunchy/newsite/case-studies/chicago-council/","tags":null,"title":"The Chicago Council on Global Affairs"},{"categories":null,"contents":"YouGov, whose current brand slogan is “the best panel - the best data - the best tools”, has one of the world’s largest research networks with a proprietary panel of over 17 million individuals in 50 markets. Researchers at YouGov use Crunch.io to perform analysis and deliver data and insights to clients via the Crunch.io web application, CrunchBoxes, and dashboards.\nYouGov uses Crunch.io enterprise-wide for both custom research and Data Products, such as YouGov Profiles, which provides syndicated segmentation and product data for agencies and brands. Over 14,000 YouGov Profiles users enjoy sub-second query response times, building on-the-fly crosstabs on a survey database, containing over 309,000 rows (respondents) and 300,000 columns (variables).\nYouGov will continue to use Crunch.io to process data quickly and efficiently and give its growing customer base the power to explore the data easily and find insights on their own.\n","permalink":"//crunch-io.github.io/crunchy/newsite/case-studies/yougov/","tags":null,"title":"YouGov"},{"categories":["feature"],"contents":"With this update, our Grouped Bar Plots will enhance the way you visualize and interpret your survey data. They have been redesigned with a cleaner layout, more easily readable text, and now feature the display of confidence intervals.\nWhy This Matters Understanding your survey data is crucial to making informed decisions. While Crunch has always been at the forefront of providing survey analytics tools, we believe that data visualization can play a more prominent role in the research process. That’s why we\u0026rsquo;ve revamped our grouped bar plots to bring you an even more intuitive and insightful experience, bringing them in line with the enhancements already brought to univariate bar plots.\nWhat\u0026rsquo;s New? Confidence Intervals: Make better-informed decisions by viewing the confidence intervals directly on the bar plots. This helps to immediately gauge the reliability of your data. See below for how to interpret these new displays. Cleaner Layout: Enjoy a more aesthetically pleasing layout that no longer tries to create huge bars that fill the whole area and instead focuses attention on the data. In particular, our horizontal bar plots make great use of the space and have smart handling for labels. Improved Text Readability: No more squinting or zooming in to read plot labels and data points. We’ve refined the text elements to make them easier to read at a glance. These changes will also affect existing visualizations saved to dashboards. In some cases, you may find that slightly more or fewer categories will be visible in a dashboard tile than before due to the new use of space.\nHow to interpret the confidence intervals Look at the Range: Each bar will have a black vertical line (the point estimate), which sits at the center of the 95% confidence interval. This range is where, given the data at hand, the actual value in the population is expected to fall in 19 out of 20 samples if the survey were repeated. Check for Overlap: If the confidence intervals of two bars overlap, it approximately means there’s not a statistically significant difference between the two groups or values you\u0026rsquo;re comparing. You can see this overlap happening between Brand A in Segment A and Brand A in Segment B in the example above. Note, though, that statistical best practice is to not treat this significance distinction as binary. The size of the intervals and the degree of overlap are relevant (don’t hold a ruler up to the screen; that defeats the purpose of showing the whole interval). Consider the Width: The width of the confidence interval (the total range of the plus-or-minus values) can tell you a lot. A narrower interval (±2%, for example) means you can be more confident in the accuracy of the survey result than if the interval is wider (±10%). How to Access the New Features The upgraded bar plots are now live and available to all users. Simply log in to your Crunch account and view or create any grouped bar plot. You\u0026rsquo;ll find the new bar plots are already enabled, ready to make your data storytelling even more compelling. Confidence intervals can be turned on using the same asterisk icon in the display controller that you already use for seeing hypothesis test colors on tables.\nExporting confidence interval graphs to PowerPoint When exporting a dashboard, graphs with confidence intervals enabled will use PowerPoint\u0026rsquo;s native \u0026ldquo;Error bars\u0026rdquo; functionality to represent the confidence interval range. They don\u0026rsquo;t look as nice as the Crunch ones but we want to ensure that exported visualizations remain editable, native objects, rather than static images. Exports from decks, for now, will not include the error bars. This will be addressed in a future product update. This completes the set We’ve now finished upgrading our line graphs, univariate bar graphs, stacked bar graphs, grouped bar graphs and donut graphs to use this new structure and functionality. We’re always looking to enhance our visualization capabilities, so watch this space!\nFor full details of this new feature, see the help center.\nYour Feedback Matters As always, we\u0026rsquo;re eager to hear what you think about these enhancements. Please share your thoughts via support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/new-grouped-bar-plots/","tags":["graphs","analyses","confidence intervals","barplot"],"title":"Bringing the Enhanced Bar Plot capabilities to Grouped Bar plots"},{"categories":["feature"],"contents":"We\u0026rsquo;re excited to announce an update that brings added control to your dashboard designs. Our new feature allows you to specify minimum and maximum widths for your dashboards, enabling a more consistent and visually appealing experience across various screen sizes.\nThis update is a direct response to your feedback. Many of you have expressed the need for more control over how your dashboards appear to end-users, and we listened.\nBy specifying the minimum and maximum dashboard size to be the same value, you can create a fixed-width dashboard, ensuring that your view of the dashboard when designing it will be exactly the same as your users’ view when consuming it.\nWhen creating a new dashboard, you’ll now have the option to choose between “Auto” and “Constrained”. Auto remains the default, where Crunch will dynamically resize the dashboard to maximize the use of the user’s screen, but if you want to prioritize a guaranteed layout over maximum use of space, you’ll want to switch to “Constrained” and specify min and max dashboard widths (in pixels).\nAlternatively, by giving different values for the min and max, you can set your own bounds for how big or small your dashboard can be.\nEven better, these controls are now also available for existing dashboards, allowing you to apply constrained or fixed sizing to dashboards you’ve already delivered.\nTry It Out Today This new constrained and fixed width dashboards setting is available now on all Crunch scriptable dashboards. To use it, go to the “New dashboard…” panel for creating a new dashboard or go to dashboard Properties for an existing dashboard.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/min-max-width-dashboard/","tags":["dashboards","analyses","layout"],"title":"Design with Confidence: Achieve design consistency in dashboards with this new feature"},{"categories":["feature"],"contents":"We\u0026rsquo;re excited to announce a new feature that will help you gain more value from your KPI dashboard tiles - KPI comparisons.\nWith KPI comparisons, you can now display the difference between your current KPI value and a different value of interest from the same table. This could be vs. the previous wave, the last year, a key competitor - whichever comparison provides the most meaningful context.\nFor example, your brand awareness may be 73%, which seems okay on its own. But when you see it\u0026rsquo;s increased 5% vs. last wave, you realize it\u0026rsquo;s great news.\nThis simple comparison gives your KPIs much-needed context, transforming them from just a number into an actionable metric.\nEffortless Set-Up Adding a KPI comparison is easy and takes just a few clicks in the dashboard tile edit mode:\nSelect your KPI value cell Toggle on “Comparison” in the new Options tab Pick your comparison cell - it can be the previous wave, a particular historical wave, a competitor row, or some other cell of interest. Choose whether you want the comparison to be a fixed reference or a dynamic one that is relative to the KPI value (e.g. prior wave) [Optional] Update the “Subtitle” field to describe your comparison. Labels like “vs previous wave” work well because they don’t need updating each wave.\nThat\u0026rsquo;s it! The comparison value will then show below your KPI, automatically calculating the difference.\nAs new waves are added, the comparison updates intelligently based on your selection - no manual editing needed.\nDynamic KPI Values For trackers, now specify your KPI value as \u0026ldquo;Most recent\u0026rdquo; rather than a fixed cell. As new waves are added, the value automatically updates.\nNo more manually editing KPIs each wave!\nTry It Out Today KPI comparisons are available now for users on all Crunch scriptable dashboards (though not yet on decks). To start enhancing your KPIs, head to the Options tab in dashboard edit tile screen.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/kpi-comparisons/","tags":["analyses","kpi","comparisons","most recent"],"title":"Introducing KPI Comparisons: Gain Deeper Insights from Your Dashboards"},{"categories":["feature"],"contents":"Today we\u0026rsquo;re adding an interface enhancement that brings the existing functionality of toggling between subtotals, categories, or both in tables and graphs, right at your fingertips. Although not new, our user testing revealed that many users were unaware of this feature, and we believe this more visible placement will make it more obvious and easier to use.\nYou can now choose from these options via dedicated icons in the main Display Controller panel, making your data viewing and analysis more straightforward and intuitive.\nClick on the desired icon to switch between \u0026ldquo;Subtotals only\u0026rdquo;, \u0026ldquo;Categories only\u0026rdquo;, or \u0026ldquo;Categories and subtotals\u0026rdquo;.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/subtotals-toggle/","tags":["subtotals","analyses","tables","graphs"],"title":"Easily Toggle Between Subtotals, Categories, or Both"},{"categories":["feature"],"contents":"We’re thrilled to announce a significant update that will enhance the way you visualize and interpret your survey data. Our Upgraded Bar Plots have been redesigned with a cleaner layout, more easily readable text, and now feature the display of confidence intervals.\nWhy This Matters Understanding your survey data is crucial to making informed decisions. While Crunch has always been at the forefront of providing survey analytics tools, we believe that data visualization can play a more prominent role in the research process. That’s why we\u0026rsquo;ve revamped our univariate bar plots to bring you an even more intuitive and insightful experience.\nWhat\u0026rsquo;s New? Confidence Intervals: Make better-informed decisions by viewing the confidence intervals directly on the bar plots. This helps to immediately gauge the reliability of your data. See below for how to interpret these new displays. Cleaner Layout: Enjoy a more aesthetically pleasing layout that no longer tries to create huge bars that fill the whole area and instead focuses attention on the data. In particular, our horizontal bar plots make great use of the space and have smart handling for labels. Improved Text Readability: No more squinting or zooming in to read plot labels and data points. We’ve refined the text elements to make them easier to read at a glance. Intelligent overflow: Initially, only the categories that can sensibly fit on a category axis will be displayed and if there are more they can be revealed by clicking the “+x more” button. This will then allow you to scroll to see the rest. These changes will also affect existing visualizations saved to dashboards. In some cases, you may find that slightly more or fewer categories will be visible in a dashboard tile than before due to the new use of space.\nHow to interpret the confidence intervals Look at the Range: Each bar will have a black vertical line (the point estimate), which sits at the center of the 95% confidence interval. This range is where, given the data at hand, the actual value in the population is expected to fall in 19 out of 20 samples if the survey were repeated. Check for Overlap: If the confidence intervals of two bars overlap, it approximately means there’s not a statistically significant difference between the two groups or values you\u0026rsquo;re comparing. You can see this overlap happening between Brand C and Brand D in the example above. Note, though, that statistical best practice is to not treat this significance distinction as binary. The size of the intervals and the degree of overlap are relevant (don’t hold a ruler up to the screen; that defeats the purpose of showing the whole interval). Consider the Width: The width of the confidence interval (the total range of the plus-or-minus values) can tell you a lot. A narrower interval (±2%, for example) means you can be more confident in the accuracy of the survey result than if the interval is wider (±10%). How to Access the New Features The upgraded bar plots are now live and available to all users. Simply log in to your Crunch account and view or create any univariate bar plot. You\u0026rsquo;ll find the new bar plots are already enabled, ready to make your data storytelling even more compelling. Confidence intervals can be turned on using the same asterisk icon in the display controller that you already use for seeing hypothesis test colors on tables.\nExporting confidence interval graphs to PowerPoint When exporting a dashboard, graphs with confidence intervals enabled will use PowerPoint\u0026rsquo;s native \u0026ldquo;Error bars\u0026rdquo; functionality to represent the confidence interval range. They don\u0026rsquo;t look as nice as the Crunch ones but we want to ensure that exported visualizations remain editable, native objects, rather than static images. Exports from decks, for now, will not include the error bars. This will be addressed in a future product update. What’s Next? We’re moving on to bringing these same advantages to both grouped and stacked bar plots, including being able to make targeted comparisons using click to compare, so watch this space for further announcements.\nFor full details of this new feature, see the help center.\nYour Feedback Matters As always, we\u0026rsquo;re eager to hear what you think about these enhancements. Please share your thoughts via support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/new-bar-plots/","tags":["graphs","analyses","confidence intervals"],"title":"Introducing Enhanced Bar Plots in Crunch – Best Practice in Survey Data Visualization"},{"categories":["feature"],"contents":"Now dataset editors can access most dataset actions directly from the dataset menu. Additionally, we’ve redesigned our dataset properties page.\nNew dataset menu\nWhen you click the dataset name from within a dataset, you may notice some changes to the dropdown menu:\nMany of the actions that used to be accessed through Dataset properties can now be performed directly from this menu. Specifically Export dataset, Append, Join, Organize variables, Exclude cases, and (under Advanced), Create draft and View dataset history. The interface for these actions has largely remained unchanged - only the way you select them has changed.\nUpdated dataset properties panel for editors\nThe other change we’ve made is to make the dataset properties panel nicer looking and more expandable.\nThe properties are largely unchanged, but they are now in a panel with two expandable sections. The General tab contains the options that were already in the dataset properties page, while View permissions contain options that were previously in the Permissions tab of the legacy dataset properties page.\nThese changes bring dataset properties more in-line with other parts of the application and should make working with the dataset easier for editors.\nViewers will see a read-only version of properties similar to the legacy About this dataset panel.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/updated-dataset-properties/","tags":["datasets","menu","properties"],"title":"Updated dataset menu and dataset properties"},{"categories":["feature"],"contents":"We understand that when creating analyses for export or dashboards, certain answer categories carry different significance. \u0026ldquo;Don\u0026rsquo;t know\u0026rdquo;, “Other” and \u0026ldquo;None of these\u0026rdquo; are three such examples that often require special handling. With Crunch\u0026rsquo;s latest feature, you can now effortlessly fix these categories, or any others of your choosing, to the end of your lists when sorting, ensuring that they are sensibly placed at the end and not merged in amongst your brand lists, attitude statements, etc. making it more intuitive and efficient for your users to glean insights from your data.\nAs an added bonus feature, you’ll now find that the sort options have two new choices - sorting alphabetically ascending and alphabetically descending - and the choices are now offered in an easy-to-use dropdown menu.\nHere\u0026rsquo;s how the Category Anchoring feature works:\nSort your analysis, either by clicking on a column header of a table in Tables \u0026amp; Graphs mode or by choosing a sort option from the Edit \u0026gt; Categories panel for a saved analysis (deck or dashboard). Sorting after an analysis has been saved is currently only available for univariate analyses. Likewise, anchoring categories is currently only available for univariate analyses. Save your analysis to a deck or dashboard, if it isn’t already.\nIn the Edit \u0026gt; Categories panel for that saved analysis, you’ll find a new “Fixed to bottom” area at the bottom of the categories list. Simply drag any category you want to fix and as you do so, you’ll find that a “Fix to bottom” drop-zone appears. Drop the category into this drop-zone and it is now going to remain at the bottom of the list, independently of any sorting.\nRepeat step 3 for any additional categories you would like to fix to the bottom. Note that you are able to position additional categories above or below existing ones, allowing you to specify “Other” as a penultimate category and “None of these” as a final category, for example.\nIf you change your mind about wanting to fix any categories, simply drag them back into the main category list.\nThis feature is currently available to Early Access users.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/fix-categories-when-sorting/","tags":["datasets","categories","sort"],"title":"Fix categories to the bottom of lists when sorting"},{"categories":["feature"],"contents":"We’re excited to share the newest update to dataset folder navigation. We’ve added a tree view of the folders shared with you to the left side of the “all datasets” page, so you can browse and move more easily between subfolders.\nEditors and administrators can use the sidebar to organize folders and subfolders by dragging and dropping. Viewers can see the organization of any folder trees shared with them and navigate between different folders and subfolders they have access to.\nBenefits of Using Project Folders:\nTransparency. Administrators have complete visibility into who has access to which data. Everyone in a folder can see all the contents, on down through subfolders. To restrict access, you can create subfolders where only certain users and data reside. Scaling. Folders position your organization to grow in a manageable way. Organization. A strong system for organizing data and dashboards in a predictable place will facilitate discovery by others on your team. Curated delivery. Folder homepages let you give clients a custom landing page and give them a running start to dive into data. Ease. For ongoing projects, new datasets will no longer require explicit sharing — the new datasets added to the folder are accessible to everyone with access. Future enhancements. In future releases, dashboards, filters, variables, and other artifacts will be sharable at the folder level, taking collaboration to the next level. For full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/project-folder-sidebar/","tags":["datasets","folders","organize"],"title":"Navigate, locate, and organize datasets more easily"},{"categories":["feature"],"contents":"Dataset Views: Quickly Create, Deliver, and Share Data Subsets\nIt’s increasingly common to collect data for multiple clients or multiple groups of stakeholders in one single survey. Whether for an Omnibus product, a syndicated data product or simply different regional groupings, it can be challenging to meet the different data needs of these client and stakeholder groups with a single dataset. To meet this need, Crunch has developed Dataset Views.\nIn a nutshell:\nDataset Views contain a subset of variables and/or respondents from a dataset Dataset Views automatically update whenever the source dataset is updated You can give multiple stakeholders or clients access to the same dataset while ensuring that they only see the Dataset View specifically shared with them. This is particularly helpful for omnibus surveys, syndicated data, and segmented data, e.g., geography or industry.\nExamples of Use Cases\nRespondent (Row)-Restricted View: A dataset with responses from respondents from different countries, e.g., US and UK. It’s now possible to create two views so that one user group can only see responses from the US and another group can only see responses from the UK. Variable-Restricted View: A syndicated dataset with 20 questions covering entertainment and 20 covering travel. It’s now possible to create two views - one for entertainment questions and one for travel. An \u0026ldquo;Omnibus\u0026rdquo; style survey that contains questions belonging to multiple clients. It’s possible to give each client a View containing just the variables they have commissioned along with the demographics variables. This feature is currently available to Early Access users.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dataset-views/","tags":["datasets","views","analyze"],"title":"Easily create and share subsets of your datasets with different user groups"},{"categories":["feature"],"contents":"Crunch’s folders give you the power to organize your datasets and control access. Now folders can also be a great landing page for new and existing data consumers.\nFolder Homepages can contain images, formatted text, embedded videos and links to other resources to provide Crunch customization, as well as to aide in navigation to other resources such as terms and conditions. You can tailor the experience for your teammates and clients when they arrive into Crunch.\nExamples of usage Expected use cases for these homepages include\u0026hellip;\nA welcome message for analysts accessing your data An opportunity to add your branding and logos Privacy notices and other terms \u0026amp; conditions, including external links Guidance on how to navigate folders and sub-folders, including shortcuts to particular resources Promotional text, images and/or videos for other products and services that you offer (an opportunity for cross-selling) including links to further information Hints and tips for using Crunch - \u0026ldquo;Did you know\u0026hellip;?\u0026rdquo; - style feature reminders, or even training videos Fieldwork information - perhaps talking about the periodicity of a tracker and when the next update is due Who to reach out to for help and advice - main research contacts at your organization, perhaps including direct mailto: links Instructions to internal users for how to manage the contents - dos and don\u0026rsquo;ts - as specified by DP departments for example Folder Homepages are customizations of Crunch’s existing folder listings pages. A regular folder listing can become a Folder Homepage by the addition of one or more Rich-text tiles and/or video tiles. When a Folder Homepage is added, the top area of the screen is made available for placing these tiles, and the regular folder listing will then appear directly below. Adding content to these tiles, resizing them and laying them out is done via an Edit mode very similar to editing a dashboard. See the help page for this feature for full details.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/folder-homepage/","tags":["folder","homepage","datasets"],"title":"Give a great welcome to your customers by branding and customizing the appearance of folders"},{"categories":["feature"],"contents":"Subtotals have been a feature of Crunch for years, and calculated differences were added to the feature set in May 2021. They\u0026rsquo;ve been popular features in tables and thanks to this latest release, they\u0026rsquo;re now available in graphs too. Both subtotals and differences can now be displayed in graphs in Tables \u0026amp; Graphs mode, as well as on dashboards and in PPTX exports, giving you the flexibility to display, save and report these summary statistics just like any other variable.\nGraphing subtotals Take as an example the following Region variable. An editor has created three subtotals for the different regions for a marketing strategy analysis. You can see them in bold at the top of this Variable Summaries card:\nPreviously, a graph of this variable would just show the categories, but now you can customize the display. By default, you will see both the subtotals and the categories displayed in a graph, like this:\nBut by triggering the additional Display Settings panel (via the three-dots icon), you can choose whether to show just Categories, just Subtotals, or both:\nThis would allow you to have a simpler graph of just the region subtotals, like this:\nLine graphs will allow you to choose from the categories and the subtotals via the existing \u0026ldquo;Edit\u0026rdquo; popup menu.\nGraphing calculated differences Displaying calculated differences on graphs works slightly differently to subtotals. Take as an example this categorical variable that has had a calculated difference added:\nThe \u0026ldquo;Net Meets expectations\u0026rdquo; value is the result of \u0026ldquo;\u0026hellip; exceeds my expectations\u0026rdquo; minus \u0026ldquo;\u0026hellip; falls well short of my expectations\u0026rdquo;. It can therefore be a useful single-value summary of how this brand is being perceived.\nBy default, only the variable\u0026rsquo;s categories (and/or subtotals where applicable) will be displayed in a graph, like this:\nBut by clicking on the new \u0026lsquo;delta\u0026rsquo; icon in the display controller\u0026hellip;\n\u0026hellip; you can switch to viewing the calculated difference(s) instead.\nThis can be a particularly useful feature when you then want to show this summary over time, like this:\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/graphing-subtotals-and-differences/","tags":["analyses","nets","subtotals","differences"],"title":"Subtotals and calculated differences can now be shown on graphs"},{"categories":["feature"],"contents":"Crunch gives you the best of all worlds — you analyze all your survey data in Crunch, and now you can export those results into your other reporting tools (such as Tableau, Google Data Studio, PowerBI) so that you can see your survey results alongside your other business metrics.\nYour tables (tab books) can now be exported in a specialized output format. This format contains a row for each cell of the table you see in the Crunch app. For example, this table from Crunch would generate 40 rows. There will be a row for the “All” category for “I am making more sustainable choices….” response, one for males and more sustainable choices, females and more sustainable choices, etc. all the way down to the 55+ age group and “Don’t know”.\nThe output format is a delimited text file of results that is ready to put into other analysis and presentation tools. Below is an excerpt of the file generated from the table above:\nYou have a few options to customize your file (noted below).\nTo generate your file, navigate to your multitable. In the upper right hand corner, click Export and select Export settings from the dropdown menu.\nThis screen will appear:\nYou can customize the format and contents of the export. Column headings (the first row of the exported file) can be compact, single-word labels or space-separated labels. Columns can be separated by commas or semicolons; and decimals by a period or comma. After making your customizations, click Save to persist them.\nTo export, click Export again in the upper-right and select Export tab book from the dropdown menu. Select the CSV option from the Format menu, choose which variables to export, and then click Export to download your results.\nOnce you’ve downloaded your tabulated results file, consult the documentation on the tool of your choice for guidance on how to upload. Below we show you how our sustainability results look in Google Data Studio.\nDetails regarding this new feature can be found in the help center.\nQuestions or feedback on this feature? Please contact support@crunch.io and use “Tabulated results export” in the subject line.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/export-tabulated-data/","tags":["tabulated data","export","csv"],"title":"Export Crunch survey results in a BI-ready format"},{"categories":["feature"],"contents":"Numeric Arrays enable you to work efficiently with groups of numeric variables that are related. For example, you might have asked your respondents for the number of times they have engaged with each of a list of activities, or asked for how many times they\u0026rsquo;ve purchased each of a list of products, or asked for a numeric rating for how much they agree with a list of statements. In each case, the data collected consist of a set of numeric values. With Numeric Arrays, you now have a convenient way of combining these numeric variables into a single \u0026lsquo;parent\u0026rsquo; variable. This is similar to the existing Categorical Arrays type which combine categorical variables into a single \u0026lsquo;parent\u0026rsquo; variable for easy analysis.\nNumeric Arrays appear in Variable Summaries mode like this\u0026hellip;\nThe dot represents the mean value (x̄) while the extending lines (known as whiskers) show +/-1 standard deviation each side of the mean. Hovering over each point will show a tool-tip with the mean, the standard deviation, and the sample size for that variable.\nIn Tables and Graphs mode, Numeric Arrays can be displayed as tables, as bar graphs or as line graphs (when combined with a time-series variable). They can also be exported to PowerPoint or Excel as well as used in a dashboard.\nAs well as displaying means, Crunch can switch to showing two other measures - Sum and Percentage Share. You can read more about these in the documentation linked at the end of this page, where you will also find information on how to create Numeric Arrays and more.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/numeric-arrays/","tags":["analyses","numeric","arrays"],"title":"Create a grouping (array) of numeric variables for easy comparison"},{"categories":["feature"],"contents":"Dataset editors have been able to add subtotals (a.k.a. “nets”) to categorical and categorical array variables for a long time, but this hasn’t been the case for multiple response variables. There are many applications for subtotals on multiple response variables — a common one is a group of products or sub-brands within a brand, or a grouping of statements into themes. Previously, users had to define new variables with often complex logic to describe each combination, and then hide the input variable. Now, Crunch provides a way to specify combinations of items directly on multiple response variables. And even better, these subtotal categories will appear on graphs in Crunch, including on time-series graphs.\nThe method of creating multiple response variable subtotals is the same as the method for creating categorical variable subtotals.\nOpen the Properties panel for a variable and choose the new Subtotals button. In the screen that appears, click Create subtotal. Drag the categories that you want to combine into the dropzone and give the subtotal a name. Click save. You can then reposition the subtotal to somewhere other than the top if you wish. If you choose to position the subtotal at the top or the bottom then it will stay in this position, but if you move the subtotal to somewhere else in the list then this will attach it to the category immediately above it and the subtotal will then be kept immediately below that anchor category as the list is sorted. From this screen, you can also delete the subtotal or click edit to make changes to the subtotal’s definition or its name.\nOnce you’ve saved your subtotals, you will see them added in bold to the variable. Note that this is a change made to the original variable, and therefore will be visible to all users of the dataset. That\u0026rsquo;s why it\u0026rsquo;s only available to dataset editors.\nFor full details of this new feature, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/subtotals-mr/","tags":["analyses","nets","subtotals","differences"],"title":"Add subtotals to multiple response variables"},{"categories":["feature"],"contents":"Back in April this year, we announced that a great new visualization was available for time series analyses that used the new \u0026ldquo;Categorical Date\u0026rdquo; variable type. Existing time plots that used the older Date/Time variable type were unaffected and continued to use the previous line graph component. Since then, we\u0026rsquo;ve worked to extend the new line graph functionality to those original Date/Time variables so that everyone can benefit from their better design and functionality, and we can now announce that all time plots will be using the new visualization. Below you will find a summary of what you can expect from your new time plots in Crunch.\nCategory selection\nLine graphs become really hard to read when there are lots of lines shown simultaneously, so Crunch now defaults to showing just the top 5 for newly created analyses, but you can pick whichever combination of lines (including showing more or fewer than 5) from the new \u0026ldquo;Select categories\u0026rdquo; interface. This allows you to show just the lines that tell your chosen data story. And your selection is then reflected in PowerPoint exports and dashboards.\nExisting line graphs, saved to decks or used in dashboards, will have their current set of lines preserved so you won\u0026rsquo;t see any changes to the lines shown.\nConfidence bands\nCrunch\u0026rsquo;s line graphs now support the display of confidence bands, calculated at 95% confidence, and you can turn these on or off with a click of the * asterisk button.\nDraggable bar\nAs well as being able to hover over points to see their values, there\u0026rsquo;s a vertical bar that you can drag to any point in the time-series to see all the values and ranking at that point in time.\nNote that there are two benefits not available for Date/Time analyses because they rely on the new Categorical Date variable type: Smoothing (a.k.a. \u0026ldquo;Rolling averages\u0026rdquo;) and editable time-axis labels. There is therefore still good motivation for using Categorical Date variables in your projects. You can read more about the smoothing feature here and about the editable labels here.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/date-time-variables/","tags":["analyses","graphs","time series"],"title":"Crunch's new visualizations for time-series analyses and trackers are now extended to Date/Time variables"},{"categories":["feature"],"contents":"You’ve been able to sort categories in tables in Crunch for a long time, but previously when you switched to a graph, that sorting was lost and the graph would show the categories in their original variable order. Now, the sorting you apply in a table will be carried through into a graph when you switch visualization type, as well as being made part of the analysis definition when you save a graph to the deck. That means that the sorted order will show in dashboards, including when you apply a filter, and in PowerPoint exports.\nSorting a table works as it always has - by clicking on the column header (once for descending, again for ascending and again to return to original variable order). Crunch will show a small chevron to indicate sort direction. Once you\u0026rsquo;ve sorted your table, simply switch to another visualization type to see that sort order reflected in the categories. The analysis will remain sorted in this way, even if you apply filters (i.e. the categories will change order, as applicable, to retain the largest-to-smallest sequence).\nSingle-dimension analyses (i.e. those that show just one variable) can also be sorted after they\u0026rsquo;ve been saved to the deck. In the edit panel for a saved analysis there will be a \u0026ldquo;Categories\u0026rdquo; tab and we\u0026rsquo;ve added a new toggle option here for switching between Manual, Descending and Ascending.\nDragging-and-dropping any category into a new position will automatically revert an analysis to being manually sorted.\nThe known limitation of this first version is that we’re not offering the ability to ‘anchor’ a category to a position – most commonly used to keep “Other” or “None” etc. categories at the bottom. For now, the only way to achieve this is the previous method of manual dragging-and-dropping. We intend to offer category anchoring in the future.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/sort-by-value/","tags":["analyses","graphs","dashboards"],"title":"Sort your graph categories automatically"},{"categories":["feature"],"contents":"You’ve been able to create subtotals in Crunch for a long time, and they’re great for quickly seeing what proportion of respondents hold similar views, such as any level of agreement with a statement or any level of liking of a brand etc. But sometimes you also need to take into account the strength of opposing views — those who disagree or those who dislike, and for that you want to sum those who agree and take away the sum of those who disagree, leaving you with an overall measure you can use for simple comparisons. The well-known Net Promoter Score™ measure works in this way. For dataset editors, Crunch now supports these calculated differences and you create them in a very similar way to how you create regular subtotals:\nEnter the Properties panel for a categorical variable you are allowed to edit and choose the new option called “Subtotals and differences”.\nIn the next screen, you can choose between creating a subtotal (which works as it did before although it has an easier to use interface), or creating a difference. If you choose “Create difference”, you\u0026rsquo;ll be presented with a screen that has the list of categories in your variable and two areas to drag categories onto.\nSimply drag any of those categories into the “positive” and “negative” areas, give your new subtotal difference a name, and click “Done”. You will now be returned to the previous screen which allows you to drag and drop the new subtotal difference to any position if you wish (the default being anchored to the top of the list). Click “Save” to commit that new subtotal difference to the variable.\nThis new subtotal difference will appear in bold to distinguish it from the input categories.\nTo make any changes to the subtotal difference, return to that same Subtotals and differences panel and choose “edit” when hovering over the entry.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/subtotal-differences/","tags":["analyses","nets","subtotals","differences"],"title":"Show calculated differences between categories"},{"categories":["feature"],"contents":"Line graphs are great at showing how values are changing over time and therefore ideal for tracking studies. Crunch\u0026rsquo;s line graphs have been completely redesigned to offer some great new features as well as improved usability and flexibility.\nCategory selection\nLine graphs become really hard to read when there are lots of lines shown simultaneously, so Crunch now defaults to showing just the top 5, but you can pick whichever combination of lines (including showing more or fewer than 5) from the new \u0026ldquo;Select categories\u0026rdquo; interface. This allows you to show just the lines that tell your chosen data story. And your selection is then reflected in PowerPoint exports and dashboards.\nConfidence bands\nCrunch\u0026rsquo;s line graphs now support the display of confidence bands, calculated at 95% confidence, and you can turn these on or off with the click of the * asterisk button.\nDraggable bar\nAs well as being able to hover over points to see their values, there\u0026rsquo;s a vertical bar that you can drag to any point in the time-series to see all the values and ranking at that point in time.\nSmoothing\nSmoothing, also known as \u0026ldquo;moving averages\u0026rdquo; or \u0026ldquo;rolling averages\u0026rdquo;, has been available for the existing line graph component for a little while, thanks to the new \u0026ldquo;Categorical date variables\u0026rdquo;, but works here too. Click here to read more about the new Smoothing feature.\nEditable labels\nAnother advantage of using categorical variables with the new date attribute is that you now have control over the labels that are displayed for the x-axis. So if you want to call them something more meaningful to you (or your client) such as \u0026ldquo;Wave 17\u0026rdquo; or \u0026ldquo;Extra Christmas boost\u0026rdquo; then you can.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/new-time-plots/","tags":["time-series","analytics","visualizations","trackers"],"title":"Great new visualizations for time-series analyses and trackers"},{"categories":null,"contents":"Crunch Automation serves as a declarative history of transformations that have been done to a dataset. This is important to understand, because it informs you how you go about writing, running, editing and replicating datasets.\nWith SPSS syntax, it\ndirectly manipulates an SPSS datafile (eg: .sav file) is not designed with survey analysis in mind doesn’t set up derivations like Crunch does (it hard-codes anything you do as a new variable) doesn’t stay with the datafile (you keep your syntax separate from the datafile), and, importantly, alters your variables by overwriting the already-hard-coded variables with more syntax (which you can do endlessly) Crunch Automation is the opposite in these respects. It\nworks on data stored from any source (SPSS or whatever) is designed with survey analysis in mind (specifically with Crunch!) enables you to set up derived variables and artefacts (filters, multitables) - which are like calculations in the cloud stays with the dataset (inextricably linked to it) enables you to redefine the variable definitions in the first instance - so that you only declare variables once in the history The last point is important, because it affects how you make changes to a dataset, both in tracking and ad-hoc studies. Let’s explain by example:\nYou have 700 lines total of Crunch Automation to set up a dataset On line 80 you declare a derived variable (CREATE MULTIPLE DICHOTOMY FROM CONDITIONS) The dataset is in action, but you then realise you didn’t define the variable correctly. Or perhaps the research manager has * asked for an additional subvariable to be included. With SPSS, you would delete the variable and run-code again to redefine it. With Crunch Automation, the idea is that you go back to line 80 and fix the definition of the variable, and then re-run the script. So you Define-Undo-Redefine.\nWhat’s the advantage of the Crunch approach?\nWith SPSS syntax, you end up endlessly “mutating” your code history or the variable by writing additional lines of code. You might do things in a growing body of code in multiple places for the one variable… it becomes a tangle! You are not ever 100% certain if/when a particular script(s) was run or not on a datafile. The picture over time gets even more convoluted in trackers.\nWhereas in Crunch Automation, you should only ever need to change the definition of the variable ONCE around line 80. This is true in trackers where you just tweak line 80 on the next wave before append).\nPerhaps an analogy can help explain. If you’ve ever worked with Adobe Photoshop, you notice that you start with a source image, and then you add “adjustment layers” that manipulate the image into the final thing you’re after. That’s a bit like what Crunch Automation does - it takes your source material (data) and then builds it up into a fully fledged dataset (which is like the output image). If you want to make a change, you can undo the layers and fix a deeper layer, before reapplying the layers.\nThis is in contrast to SPSS syntax, where it’s a bit more like working in Windows default Paint program - you directly change the pixels and there’s no layering approach. In fact, there’s not really an undo function either - you’d need to make sure you had saved a version before any changes, and then hope your syntax log re-runs OK.\nCrunch Automation is a solid blueprint for your dataset\nCrunch Automation builds things up like a house - following the path of the Definitive Guide. The schema commands are like the concrete foundation (the first layer). Creating variables are like the structural pillars and the walls. Organizing variables (folde allocation) ensures everything is in the right room. Artefacts (multitables, filters, decks, dashboards) are like the soft furnishings - cushions, artworks, furniture. Once your house (schema) is complete, then people can come through the house (these are the respondents or cases in the data).\nIf you want to make a change to your house, the blueprint, you should unwind your house, make the change, and then build it up again. That way your house stays solid, simple and beautiful. The alternative (SPSS way) is fiddling with your house with endless renovations. Before long the house looks a mess and no one wants to stay!\nWe’ll have more to say on this matter, but we welcome your comments and feedback. Please log them below and we’ll answer in a Q\u0026amp;A.\n","permalink":"//crunch-io.github.io/crunchy/newsite/blog/automation/crunch-automation/","tags":["Recording","Dashboards"],"title":"Crunch Automation: A blueprint for building a solid home for your data"},{"categories":["feature"],"contents":"The sharing options for a dataset have been simplified and consolidated. Previously, both Share and Members links were visible to Dataset Editors. To simplify, Dataset Editors can only now see the Members link. The Share link option for Dataset Editors has been removed.\nFor Dataset Viewers, the sharing option with Share link has not changed.\nBelow we have outlined how you can share a dataset for different permission levels: Editors and Viewers.\nSharing a dataset for Dataset Editors To share a dataset with individual users or teams of users:\n1.- Select Members in the Crunch web app:\n2.- Select the Users tab and then click Add users:\n3.- Enter an email address and then click the Invite button:\nSharing a dataset for Dataset Viewers If you\u0026rsquo;re a Dataset Editor, you may wish to enable Dataset Viewers to be able to share the dataset with others.\nTo enable this, go to Dataset Properties \u0026gt; Permissions and then check the Share the dataset box under ' Permissions for Viewers\u0026rsquo; as described in the following:\nThis enables a new menu option for dataset viewers:\nIn this view, Dataset Viewers can enter users with whom they want to share the dataset:\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dataset-sharing/","tags":["datasets","sharing"],"title":"Simplified options for Dataset Sharing"},{"categories":["feature"],"contents":"By using the new options panel revealed by clicking the three-dots icon in the display controller, users can choose which of these figures to display in the tooltip for table cells. The default statistics shown are the margin of error and unweighted base. Your chosen cell details are persisted as a user preference. For margin of error, you can also specify the number of decimal places you want to see.\nThe margin of error is also an optional cell value both for tab books and for custom exports from the deck.\n:bulb: Bases are currently only shown for column percentages.\nFor full details of all of the options available, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/margin-of-error/","tags":["margin of error","analytics","statistics"],"title":"See the margin of error and other helpful statistics in tables"},{"categories":["feature"],"contents":"Back in September, we added a variety of advanced calculations to include in tab books (exported multitables) and other options to customize the exported tables. We\u0026rsquo;ve now added these same customization options to tables saved to (and exported from) the deck.\nThis can be helpful if you need to:\nShow more than one measure (percentages, counts, indices, Z-scores, population estimates) at once, or\nHave additional elements or measures included in your exports, such as pairwise comparison letters (ABCD), standard deviations, standard errors, etc., or\nControl the appearance of the output by changing the number of decimal places or the location of the Base rows etc.\nWe\u0026rsquo;ve also applied the same, more intuitive, design to help navigate the options in the Export Settings panel for exporting tables saved to decks. For full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/customize-export-settings/","tags":["analysis","exports"],"title":"Greater flexibility to customize exports of tables from decks and dashboards"},{"categories":["feature"],"contents":"In time series analysis, we want to be able to identify trends. As we collect data, random fluctuations can obfuscate a trend. Smoothing is an analytic process whereby we ‘iron out’ differences between time periods by taking the average of previous periods. This is also known as a moving average. You can now apply smoothing to your analyses with just a few clicks. In the smoothing tab accessed by clicking ⋮ select ‘One-sided moving average’ and choose the number of periods to ‘look back’ at each point.\nFor example, the following plots show the same data but the first shows the point estimates (unsmoothed) and the second shows a 4-period moving average.\nThis feature makes use of the new categorical date variable type which brings other advantages including the ability to give your own names to the date categories (\u0026ldquo;Quarter 1\u0026rdquo;, \u0026ldquo;Quarter 2\u0026rdquo; etc.).\nYour chosen smoothing settings are saved with your analyses when you add them to your deck, and are then reflected in both exports (Excel and PowerPoint) and on dashboards. Table coloring and column comparison are not yet available for smoothed trend estimates.\nFor full details of this new feature and where to find it, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/trend-analysis/","tags":["analyses","graphs","time series"],"title":"Perform trend analysis on wave data"},{"categories":["feature"],"contents":"You can now choose a variety of advanced calculations to include in tab books (exported multitables) and other options to customize the exported tables. Table cells can now contain estimates of standard deviation and standard error, and column summaries can include the median of numeric values as well as the standard deviation for the column and standard error of the mean. Pairwise column significance tests can be conducted at the standard 0.05 level or customized with a second level of test, with the “less significant” test indicated with a lowercase letter.\nThe Settings panel for exporting Multitables just gained a bevy of new options, and a more intuitive design to choose them. For full details of all of the options available, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/customize-tab-book-exports/","tags":["analysis","tab books","multitable","exports"],"title":"Greater flexibility to customize tab books"},{"categories":["feature"],"contents":"Exporting from dashboards just got more flexible. Instead of always having to export the whole dashboard, users are now able to choose between exporting the whole dashboard (still the default), exporting the currently viewed tab, or choosing a custom selection of one or more tabs to export.\nThe new, simplified “Export…” option opens the new Export panel which gives the choice of PowerPoint or Excel formats, but for dashboards with tabs, it also now contains a “Tabs” control.\nThe choices are:\nThe default which is to export all tabs (i.e. the whole dashboard) To export just the currently viewed tab To make a custom selection of which tab(s) you want to export For dashboards without tabs or for exports triggered from the deck view, these Tabs options won’t appear and the export will always contain the whole dashboard or deck.\nFor full details, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/selective-tab-exports/","tags":["analyses","dashboards","tabs"],"title":"Export dashboards or the tabs you want, with the new selective tab exports feature"},{"categories":["feature"],"contents":"The Groups on dashboards can now optionally allow multiple category selections to effectively combine categories in the filter. Dashboard editors can set an option on the configuration screen for dashboard “Groups” that allows users to make multiple selections within each variable. For example, if you choose an age categories variable as a group and turn on this new option, the dashboard users will be able to select both “18–24” and “25–34” simultaneously, thereby creating a filter that includes anyone aged 18–34.\nThe new option can be found at the top of the Edit Groups panel.\nThe default is single selection, but with multiple selection enabled, the user is able to create group definitions.\nAs before, you can click the “×” to remove a category from your selection or click “Reset Groups” at the bottom of the panel to clear all group filtering.\nFor full details, see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/multiple-selections-in-groups/","tags":["analyses","dashboards","groups","filters"],"title":"Combine categories in dashboard filter variables"},{"categories":["feature"],"contents":"You\u0026rsquo;ve already been able to customize saved graphs, but now you can make those same edits to the rows and columns of saved tables, either for export or for display in dashboards. More specifically, you can now\u0026hellip;\nHide any rows and/or columns of a table, including calculated rows/columns such as subtotals, leaving only those you want your export/dashboard consumers to see. Simply uncheck the box next to the row/column to hide it. Reorder the rows/columns of a table, just by dragging them into their new order. Rename any row/column just by typing into the name box. Great for cases where the labels are too long or contain unwanted content. Together, these features allow you to turn off rows and columns in \u0026lsquo;messy\u0026rsquo; tables. For example, the table below has many columns that the researcher may not want to display in the analysis. They may want to focus the viewer\u0026rsquo;s attention on what\u0026rsquo;s most important.\nThe result is something like the below - which is much neater.\nThe action here simply hides the rows and columns in the table - the original variable is unaffected (so if you made another table, you would see all the columns/rows again).\nAll users can access this new functionality via the \u0026ldquo;edit\u0026rdquo; link shown upon hover of each slide saved to the deck.\nEditors can additionally access this functionality when editing dashboard tiles that contain tables.\nThe following video walks you through the steps for adding a table to your deck and then how to edit that table to only show the rows and columns of interest, arranged in the desired order.\nSee the help center for more information on these features.\nWe\u0026rsquo;d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/editable-tables/","tags":["analyses","dashboards"],"title":"Customize your tables for export or dashboards"},{"categories":["feature"],"contents":"Array variables allow you to analyze together a set of variables that share a common structure and theme. For example, surveys often ask respondents to use a common scale to rate or respond to different prompts, sometimes in a grid, all sharing a common set of response categories. When analyzing the data, a categorical array variable lets users see all the items together. This structure allows users to easily compare lists of brands against a common set of attributes, or compare a set of statements against a common agreement scale — something that is much harder to do with distinct categorical variables. Categorical arrays are displayed as two-dimensional tables or stacked graphs by default in Crunch, letting you compare the complete distribution between items.\nA multiple response variable is a kind of summary of the items or input variables in a categorical array. In its simplest form, responses take the form of either “selected” or “not selected”. Crunch uses this form (called “multiple dichotomies”) to represent survey questions where respondents can select multiple answers from a list of responses (“Choose all that apply”) — each response in the data is a separate variable, but for analysis, they need to be grouped together into a multiple response variable.\nMultiple response variables in Crunch allow you to choose more than one selected category, so you can also summarize an array of “level of agreement” into a multiple response view of the percentage who selected either “Agree” or “Strongly agree”. Multiple response variables are displayed as a ‘flattened’ form of a categorical array, allowing you to analyze this more condensed form, crossing it by demographics or trending over time, etc. These summary variables are sometimes called “top 2 boxes” referring to selecting the subtotal of the “top two” categories on a scale.\nThe following videos demonstrate how to create these new variables. First, we create a new array from a group of categorical variables that have a common set of answer categories.\nThen, we create a simplified multiple response variable from a subset of those items that we are interested in.\nFor more information see the help center.\nWe’d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/new-multiple-response-cat-array-builder/","tags":["analysis","multiple response","categorical array","variables"],"title":"Easily create and recombine categorical arrays and multiple response variables"},{"categories":["feature"],"contents":"It\u0026rsquo;s been possible for some time to set custom colors for saved analyses in Crunch, but it\u0026rsquo;s been necessary to do this on a one-by-one basis which can be laborious and open to inconsistency. We now offer the ability to create custom color palettes, defined at the organization level, at folder levels, or both, which apply your chosen colors to newly created analyses as well as offering alternatives (e.g. for scales) that can be applied easily, as needed for particular analyses.\nIf you are an organization admin, you can access the color palette create/edit controls via the \u0026ldquo;Organization settings\u0026rdquo; item in the 3-dots menu. Alternatively, folder editors can go to the folder menu (available by clicking on the folder name in the header when browsing datasets) and choosing \u0026ldquo;Settings\u0026rdquo;. Here you can set the default palette to use for all newly saved analyses as well as create new palettes and edit or delete existing ones.\nThe palette editor has a great real-time preview to show you how your color selections will look on a real Crunch graph.\nPro tip - if you create a palette with just one color in it, you can then set that palette for single-dimension analyses which will then use just that one color for all categories, which can often look more professional.\nNote: Only organization admins can create/edit/delete color palettes for organizations, and only folder editors can create/edit/delete palettes for individual folders. But those palettes will be available to all users within datasets in those organizations or folders. To find out more about the new color palettes feature, you can read about it on our help page here.\nWe\u0026rsquo;d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/color-palettes/","tags":["analysis","graphs","dashboards"],"title":"Use custom color palettes for your saved analyses"},{"categories":["feature"],"contents":"When you create an analysis, you may need to edit it further for a PowerPoint export: for example, perhaps you want to hide \u0026lsquo;Not sure\u0026rsquo; and \u0026lsquo;Prefer not to answer\u0026rsquo; categories, rename long labels, re-order the categories, give the whole analysis a descriptive title, or even simply change the coloring. You can now make these adjustments and more, and you\u0026rsquo;ll find all of those changes reflected in your PowerPoint and Excel exports.\nTo access these enhanced options, hover over a \u0026lsquo;slide\u0026rsquo; in a deck that you can edit. An \u0026rsquo;edit\u0026rsquo; link appears:\nWhen you click the \u0026rsquo;edit\u0026rsquo; link, a panel appears showing you additional controls:\nEdit options are spread over three tabs at the top: Properties, Categories, and Colors. You\u0026rsquo;ll find that some options are only available for some visualization types.\nWhen you\u0026rsquo;re done making edits, click Save to return to the deck view. Your exports will now reflect these changes.\nNotes: The changes you make will only be visible in an export (PowerPoint or Excel) or on a dashboard. They won\u0026rsquo;t be visible in regular modes of Crunch.\nAny changes you make in editing deck objects will be reflected on the dashboard tiles (where applicable) and exports (to PowerPoint).\nIf the \u0026rsquo;edit\u0026rsquo; link does not appear when you hover over it, this means that this a deck you do not have permission to edit. Contact the deck\u0026rsquo;s creator to ask them to share it with you.\nWe\u0026rsquo;d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/slides-editable-from-deck/","tags":["analyses","graphs"],"title":"Perfect your PowerPoint decks with many new edit controls"},{"categories":["feature"],"contents":"Users can now decide whether to show value labels for graphs and charts, both in Tables \u0026amp; Graphs mode and on dashboards. Value labels are these small numbers on graphs that show you the value represented by that bar/column/segment\u0026hellip;\nWith the new feature turned on, these value labels will be displayed on all graphs you create. With the feature turned off (the default), the user needs to hover over a chart element to see a tool-tip with this value.\nIf you\u0026rsquo;re happy with the tool-tip approach, you don\u0026rsquo;t need to do anything. But if you\u0026rsquo;d like to have these values always displayed, you can turn this feature on via the three-dots menu in the play-controller at the bottom of your screen, choosing the option \u0026ldquo;Show value labels\u0026rdquo;\u0026hellip;\nAnalyses saved to the deck will have this property saved with them, and this will then be reflected in the visualizations shown in a dashboard. But you can override the saved setting from within the dashboard edit panel using the \u0026ldquo;Show value labels\u0026rdquo; checkbox\u0026hellip;\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/show-value-labels/","tags":["analyses","graphs"],"title":"Show value labels on graphs"},{"categories":["feature"],"contents":"Dashboards can now contain KPI analyses that take a single value from a table and present it in a tile. Great for when there\u0026rsquo;s a key metric you want to highlight or track.\nDataset editors can now add KPI analyses like these to dashboards. This allows you to show a key company metric – e.g. Brand Awareness – as a prominent value that grabs attention.\nTo create one, simply save an analysis of any kind – table, chart or variable card – that contains the value you want to show as a KPI. Then, in edit mode of the dashboard, enter the \u0026ldquo;Edit\u0026rdquo; view (only available to dataset editors) and enter the properties panel for that particular analysis. Change that visualization type to KPI\u0026hellip;\n\u0026hellip; and then select the value you want to use as a KPI from the table\u0026hellip;\nMake optional changes to the titles, number type and decimal places, and click Save. KPI tiles can be moved and resized like other tiles, but they have a maximum size of 4x4 cells.\nAs an added bonus, editors can now also switch between tables and graphs when editing dashboards, as well as change the basic metadata (titles, description etc) for tiles that contain tables.\nWe\u0026rsquo;d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dashboard-kpi-tile/","tags":["dashboards"],"title":"Adding KPI tiles to dashboards"},{"categories":["feature"],"contents":" To look in detail at your data, you sometimes need to create a variable that is the interaction of other categorical variables. You want to know not just how results differ between age groups or education level, but by age × education. The Crunch application lets you do this in just a few clicks by selecting the variables to interact — give the result a name (or accept the default of ‘x by y’) and you’re set.\nTo get started, click + New Variable at the bottom of the variable list, and select “Interaction.” Then select input variables, give it a name, and click Save. If you are a dataset editor, you can choose to share it with the whole dataset. The whole procedure is shown at reduced speed in the animation below.\nInteractions can only be made with categorical variables. In future releases you will be able to edit and combine results at the time of creation; now, you may need to make such adjustments after the fact by combining categories.\nWe welcome your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/interaction-builder/","tags":["analyses"],"title":"Create the interaction of two variables"},{"categories":["feature"],"contents":"Dashboard tiles can now be placed across multiple tabs, making it easier to navigate large dashboards. As an editor, you are now able to:\nCreate new tabs (as many as you\u0026rsquo;d like)\nMove tiles from one tab to another\nGive tabs meaningful names to aid navigation\nDelete tabs, choosing whether to delete any tiles or move them to another tab\nSee our support documentation to get started.\nWe\u0026rsquo;d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dashboard-tabs/","tags":["dashboards"],"title":"Dashboard tabs"},{"categories":["feature"],"contents":"We\u0026rsquo;ve made it much easier to view and change which of your users have access to your datasets and folders. If you are an editor on a dataset or folder, click the dataset or folder name in the header and select Members to open the permissions panel:\nWhen viewing dataset members, this panel will show all users who have access to this dataset and what type of access they have, regardless of how that access was granted.\nWhen viewing folder members, you will not only see everyone who has access to this folder, you will also see any users who have access to anything within this folder. Users who have access to some, but not all, folder contents (or who have non-uniform access) will show up as having Mixed access. You can change this to Viewer or Editor to grant that user uniform access to this folder and all its contents (including subfolders).\nFor more information about permissions, see Managing Permissions on Folders and Datasets.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/new-permissions-september-2019/","tags":["permissions"],"title":"Crunch's updated Member panels make it easy to see who has access to a dataset or folder"},{"categories":["feature"],"contents":"Dataset editors can now add rich-text tiles to a dashboard. This can be used for dashboard analysis, terms and conditions, privacy notices, fieldwork dates and anything else the editor may wish to display. As an editor you are now able to:\nCompose text content to display as tiles using a WYSIWYG editor - no coding skills required.\nSee a real-time preview of how your tile is going to look as you type and make formatting changes.\nAlternatively, switch to markdown mode for greater control writing your own markdown syntax.\nMove, resize and delete rich-text tiles.\nDelete all tile types.\nSee our support documentation to get started.\nWe\u0026rsquo;d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dashboard-text-tile/","tags":["dashboards"],"title":"Adding rich-text tiles to dashboards"},{"categories":["feature"],"contents":" Dataset editors can add one or more variables to be used as filters across an entire dashboard with a simple drag-and-drop interface. This allows all dashboard viewers to get more out of your dashboards by customizing their view of the data. For example:\nAdd demographic variables such as gender, age, education level, region, and ethnicity to allow your viewers to drill down on the customer populations that interest them.\nAdd brands or products to create a dashboard that lets your viewers quickly understand the customer awareness, attitude, and usage of their products and competitors.\nSee our support documentation to get started.\nWe\u0026rsquo;d love your feedback at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dashboard-filtering/","tags":["dashboards"],"title":"Filtering dashboards"},{"categories":["feature"],"contents":"Tables in the application now let you set a column as the basis of comparison, shading the table to show which other columns are higher or lower than the reference column, and to what level of statistical significance. The test is a two-tailed t test comparing each column proportion in turn to the proportion in the reference column. In a multitable, the test is conducted between categories within each column variable, and not across column variables. See here for more details.\nFirst turn on significance shading using the display controls at the bottom of the screen. The coloring ranges from dark green (much higher) to dark red (much lower) according to the P-value of the difference of what would be expected if the row and column variables were independent, based on the standardized residuals of the crosstab. To base all comparisons on a specific column, move your mouse over any column of a table or multitable. A new button appears beneath the column: “Set comparison.”\nWhen a column comparison is set, the reference column becomes grey and the other categories of its variable are colored by the P-value of their column percentage compared to the reference column. The reference column will remain set as long as the same column variable is in place, or you click Reset in the same column or select a different reference column.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/click-to-compare/","tags":["tables","statistics"],"title":"Click to set the comparison column for hypothesis tests"},{"categories":["feature"],"contents":"What are Crunch dashboards? A dashboard is a special view of your data that has been prepared with pre-made analyses — tables and graphs — designed to highlight key points for instant insight. Dashboards are great for conveying key information, drawn from your data, for users who don’t have the time (or the inclination) to do their own analysis. Crunch dashboards allow you to combine your important findings into a single display, perfect for sharing with colleagues and other end users. And best of all, in Crunch it’s really quick and easy to make them.\nHere is an example of the kinds of dashboards you can create in minutes using Crunch\u0026hellip;\nDidn’t Crunch already have dashboards? It did, but they’ve received a really major upgrade and now offer much more functionality and flexibility, enabling you to create the dashboards of your dreams (assuming you’re like us and find yourself dreaming about data visualizations).\nSo what’s new? Here are some highlights from this latest release…\nDashboard tiles can be repositioned by drag and drop.\nDashboard tiles can be tall, short, wide, narrow, square, rectangular — just drag them into the shape you want them to be\nYou can hide categories you don’t want to show (e.g. None of these, Don’t know)\nYou can re-order categories however you like\nYou can rename categories (great for those long labels)\nYou can choose specific colors for chart bars / segments\nThere are new graph types — donut and horizontal bars (including stacked bars) — which are also now available in Tables and Graphs mode\nThe titles and subtitles for each dashboard tile are editable, allowing you to create a narrative for your data, a bit like the heading of a PowerPoint slide\nDashboards can be given custom names, and those names appear as part of the URL, making them easier to identify in browser history and bookmarks etc.\nYou can choose whether to make the dashboard the landing page of the dataset\nMost of this should be nice and intuitive and just work, but if you get stuck there’s documentation you can find here.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dashboards/","tags":["dashboards"],"title":"Customizable dashboards"},{"categories":["feature"],"contents":"Crunch tab book exports now include a new hypothesis testing option that computes all possible comparisons between columns of a two-way table. When users select the \u0026ldquo;Column t-test\u0026rdquo; option in the “Export tab book… \u0026gt; Customize” panel, columns in output will be lettered and differences that are significant at the .05 significance level are indicated by letters underneath the cell with the higher percentage. See here for details.\nAn example of the exported result is shown below.\nA way to perform the same tests in the web application is under development and is expected to be released later in the second quarter of 2019.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/new-hypothesis-tests/","tags":["tab books","exports","xlsx"],"title":"New hypothesis testing features in Crunch"},{"categories":["feature"],"contents":"Export all on a single page Multitables are a great way to quickly find key relationships in your data. When exporting multitables, you now have three choices, allowing you to create just the right export for your needs.\nExport this table – instantly grab an XLSX file of just what you see on screen, using whatever display settings you have currently selected. Export this table (saved settings) – instantly grab an XLSX file of the table that you see on screen but with whatever settings you’ve chosen in the Export tab book \u0026gt; Customize panel. This allows you to use your favorite settings (counts, percentages, unweighted bases, etc.) without selecting them each time. Just choose them once and then you’ll be able to use them every time with this option. Export tab book…” – export several variables or a whole dataset in a single or multi-page layout, complete with customizable settings via the Customize… button. Now it is easier than ever to take those insights away and build your data story with XLSX exports.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/export-this-table/","tags":["exports","tab books"],"title":"Quick Multitable Export"},{"categories":["feature"],"contents":"Dataset folders allow you to organize your data hierarchically, similar to a file system as you might see in Windows Explorer or MacOS Finder. Folders make finding, organizing, and sharing data more intuitive.\nFolders can be used to organize large collections of datasets into more manageable units. If your organization imports data from many sources or has a large archive of previously imported data, you can organize them by source, time of import/survey, subject, etc.\nEditors can grant access to different folders to different sets of users. Multiple clients, or multiple groups or teams within a client, can be granted access to just the data you want to show them. Furthermore, you can move a dataset into a folder to instantly make it available to all users who have access to that folder.\nThese new features in turn bring some changes to our web application. Here are some key differences from the old interface.\nNavigating The first thing you\u0026rsquo;ll notice is that the stripe of icons at the left have been replaced by folders. The flat list of project icons didn\u0026rsquo;t work well with a model where folders could nest within each other, so we changed the display to more closely match the underlying model. (Note that while we have removed the custom icons from display for now, we will be reintroducing them with additional branding settings in the near future.)\nA Crunch project before and after the updated folders feature Click on a folder\u0026rsquo;s name to enter it. When you do, you\u0026rsquo;ll see at the top of the screen the folder you are currently in and the path to that folder.\nTo jump back to a higher folder, just click on it in the header.\nWithin a folder, you can sort the list of datasets and folders by clicking the column headers at the top of the list. Right-click on the header to select which sortable columns appear in the list.\nThe other major change to navigation involves the Personal folder, previously called the Personal Project. This folder used to contain any datasets that were shared with you as well as any datasets that you had imported yourself, which for some users resulted in a long list of datasets with no clear logic grouping them together.\nWith this update, we\u0026rsquo;ve simplified where you can find the data you have access to.\nIf you have access to a folder, you\u0026rsquo;ll see it listed under All Datasets, and everything contained inside that folder (including other folders) will be available inside that folder. Personal now contains any datasets you have imported and not moved to another folder. Only users who have permission to import data will see the Personal folder. The other special folder, Shared with Me, contains datasets that have been shared with you without access being granted to the folder that contains it. If no datasets have been shared with you in this way, this folder won\u0026rsquo;t appear. The Personal and Shared with Me folders will be pinned to the top of the All Datasets list to allow them to be easily found and accessed.\nAs always, when you’re not sure where to find a dataset, use the search bar at the top of screen. If you\u0026rsquo;re looking for a specific dataset by name, you can narrow your search criteria to match only on dataset names.\nFor more details on navigating dataset folders, see the support page for more information.\nOrganizing If you have permission to import data in a folder, you can create folders within that folder, move datasets between folders, and grant other users access to folders.\nImporting data is now accomplished by clicking the dataset name and selecting New dataset.\nTo create a folder, click the dataset name and select New Folder from the dropdown.\nThis opens the New Folder dialog, where you can name the new folder.\nTo move a dataset or folder to a new folder, hover over it in the dataset list, click the down-arrow to open a dropdown, and select Move to\u0026hellip;.\nThis opens the Move to dialog that you can use to move the selected dataset or folder to any folder where you have write access (including your Personal folder).\nTo give other users access to a folder you have created, open that folder and then click its name in the header and select Members. Add users or teams who should have access to this folder. Note that any users who have access to the parent folder will automatically have access to this one, but they will not appear in the list.\nSee the help site for more information on these features.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dataset-folders/","tags":["organization","datasets"],"title":"Improved Organization of Datasets"},{"categories":null,"contents":"Reports to: VP Software Engineering\nWork location: North America, 100% remote\nEmployment type: Full-time employee, direct hire\nDirect reports: 10 to 12 software engineers\nWe are hiring an Engineering Manager to help expand our platform and operations excellence. The successful candidate will have been a software engineer and has grown into a project manager and team manager role. We invite you to join our small, fully remote team of developers and operators, helping make our platform faster, more secure, and reliable. You will be self-motivated and disciplined to work with our fully distributed team.\nWe are looking for a quick study eager to learn and grow with us and has experience in Agile cultures. At Crunch, we believe in learning together: we recognize that we don\u0026rsquo;t have all the answers, and we try to ask each other the right questions. As our team is 100% remote, we need someone who can work well independently and keep themselves motivated and focused.\nOur stack\nWe currently run our in-house production Python code against Redis, MongoDB, and ElasticSearch services. We proxy API requests through NGINX, load balance with ELBs, and deploy our React web application to AWS CloudFront CDN. We built our current CI/CD process around GitHub, Jenkins, and Cypress.io, including unit, integration, end-to-end tests, and automated system deployments. We deploy to Auto Scaling Groups using Ansible, Terraform, and Cloud-Init.\nWhat you\u0026rsquo;ll do\nManage and lead a team of software developers distributed across North America and Europe. Collaborate with product managers in defining the product vision and helping write product requirements. Work closely with product managers, sales, and our customer success team to understand the system\u0026rsquo;s functional and non-functional requirements. Collaborate with lead developers to turn product requirements into an actionable technical design. Help prioritize projects competing for developer resources to achieve organizational goals. Break large programming projects into more minor epics and tasks and create corresponding tickets in our project management system. Keep track of project dependencies and critical paths. Assign programming tasks to developers and follow up to completion. Ensure that team members have appropriate product and technical specifications, direction, and resources to deliver products effectively. Lead daily stand-up meetings with developers to discuss project progress and quickly resolve any blockers. Help developers resolve both technical problems and human resources issues. Coordinate with Crunch\u0026rsquo;s Cloud Operations team to efficiently deploy new software. Demonstrate leadership in deploying software upgrades, enhancements, and fixes coordinated based on release schedules. Provide frequent status reporting to all company leaders and project stakeholders. Compile and report software development KPIs. Monitor and evaluate individual employee performance and conduct formal performance reviews. Participate in evaluating, hiring, on-boarding, training, and mentoring new employees. Provide leadership and guidance to coach, motivate, and lead team members to performance targets and career development. Basic (required) qualifications\n3+ years of project/team management and leadership experience in a software development organization. 5+ years experience working in software design, development, release cycle, and delivering software products to market. Power-user of leading project management systems like Jira, Pivotal Tracker, etc. Strong understanding of the software development lifecycle. A record of successful delivery of software applications as an individual contributor, team leader, or development manager. Experience recruiting and mentoring team members into top performers. Self-motivated and enthusiastic. Excellent communication skills - verbal, written, and presentation. Ability to see the big picture while also being detail-oriented. A keen interest in learning new things. Advanced (preferred) qualifications\nExperience with managing the development of SaaS and cloud-based applications. Bachelor\u0026rsquo;s Degree in Statistics, Science, Programming, or an Engineering-related field. Project management certification. Software development experience as an individual contributor using Python. Enterprise experience solving complex problems using multiple database systems. Apply now via email to careers@crunch.io\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/software-project-manager-crunchdb/","tags":null,"title":"Engineering Manager, Database Systems"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/brand-tracking-demo-2022","tags":null,"title":"Insights Tech Showcase: Brand Tracking"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/demo-days-2022","tags":null,"title":"Insight Platforms Demo Days"},{"categories":null,"contents":"Reports to: VP of Customer Success\nWork Location: Remote, United States, preferably EST or CST time zones\nAre you a technically-oriented, quantitative market researcher looking for a change in direction? You should consider putting your technical skills to work in software, specifically, analytic software for market research.\nCrunch.io is a rapidly growing, market-defining company in the analytics SaaS marketplace. We’re a company on the rise. We’ve built a revolutionary platform that transforms our customers’ ability to drive insight from market research and survey data.\nWithin the BI landscape, Crunch focuses on survey data. Within the survey data analysis space, Crunch focuses on usability. We’ve built a survey data analysis platform that allows market researchers and marketers to collaborate in a secure, cloud-based environment, using a simple, intuitive drag-and-drop interface to prepare, analyze, visualize and deliver survey data and analysis. Our customers include some of the largest market research companies and largest brands in the world. We’re hiring you to expand that roster. We are passionate about our product and our mission.\nThe Crunch team all work remotely online - our “center of gravity” is in San Francisco, but our colleagues and customers are all over the world. Working remotely gives us the benefit of a work/life balance and flexibility.\nThe Customer Success Manager (CSM) is responsible for explaining and demonstrating Crunch.io to prospective customers, and then to continue to make sure it is deployed successfully in their organization. You are the technical side of the sales process for new prospects, but you are also working with existing customers to look for new opportunities in their workflows for Crunch.io.\nYou will be part of a small team that is rapidly growing. We are taking on many new developers (for programming), new support staff (to handle queries and professional services), and now we are looking for more Customer Success engineers as well. The CSM is part of the Sales \u0026amp; Marketing team, but you work closely with Product teams and individual developers.\nThis role offers stimulation and creativity for the technically minded. Crunch.io is a rapidly evolving app, with new features being deployed all the time. As you interact directly with prospective and existing customers, using your strong market research domain knowledge, you will collate and feedback customers’ requests to the product team which drives the development of the app forward.\nWhat you’ll do\nRepresenting the technical side of Crunch during the sales process and implementation process, answering customer questions and figuring out how Crunch can fit into their workflow. Giving demonstrations remotely via screen-share and in person at conferences. Training clients on how to use Crunch in the web app. Training clients on how to use Crunch programmatically through Crunch Automation, Crunch’s scripting language, or from or with other tools such as R or SPSS. Overseeing the uploading survey datasets into Crunch. Managing and tracking customer and transactional information in a CRM system. Coordinating resources throughout the sales cycle, including between support and the account executive Nurturing and expanding the company’s relationship with customer accounts of various sizes and industries. Keeping abreast of competition, competitive issues and products. Infrequently traveling to customer locations in support of sales efforts. Answering technical questions on an ad hoc basis from across the organization. Who you are\nExcellent communication skills: the person your current team turns to when they need someone to explain a technical concept. Domain knowledge: survey data analytics or market research, quantitative research methods, SaaS, business intelligence tools generally, statistics. Background in statistical/analytic computing, using software such as SPSS, R, Q/Displayr. Experience performing analytics on survey data sets or other large datasets.. Teacher. Comfortable explaining technical concepts to a wide range of users. Good listener: Able to truly listen to users questions and adjust on-the-fly and problem solve including being comfortable saying “I don’t know”. Enthusiastic and extroverted when needed. Experience in technical sales or technical support, particularly sales that are collaborative and collegial in nature. You are a Recruiter! Crunch hires company builders and, in this role, you will be asked to be on the constant lookout for the best talent to bring onboard to help us continue to build one of the best companies in the world! Apply now\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/customer-success-manager/","tags":null,"title":"Customer Success Manager"},{"categories":null,"contents":"Reports to: Sales Director\nWork location: Remote, United States or Canada, Seattle preferred\nWhat you\u0026rsquo;ll do\nThe Sales Development Representative (SDR) will have responsibility for qualifying leads that build pipelines for the sales organization as well as closing non-enterprise deals. The SDR will follow up on web inquiries, pre‐qualify leads, close opportunities, and develop larger leads to the point of handoff to outside sales. In addition to inbound inquiries, the SDR will perform prospecting, marketing event outreach, and perform general sales development functions to build a pipeline within targeted accounts designated by management.\nSome of the things you’ll be doing include:\nQualify, manage, and close sales leads Identify strategic opportunities and hand off to the strategic sales Achieve or exceed qualified leads and sales goals Follow up with inbound demo requests and lead demos with prospects Outreach to key contacts at target accounts Develop superior relationships with qualified prospects Who you are\nA Rising Star. You are an up-and-coming sales professional and dedicated to developing and pursuing a sales career in a fast-growing SaaS company. Experienced. 2-4 years in any of SDR, BDR or inside sales and/or lead qualification experience (including outbound prospecting). Experience with lead qualification at all levels within organizations – managers, directors, VPs, executives. Energetic and Creative. Ability to work in a high energy sales environment. You think out-of-the-box and wow people with your interesting angles and quality work. A Recruiter! Crunch.io hires company builders and, in this role, you will be asked to be on the constant lookout for the best talent to bring onboard to help us continue to build one of the best companies in the world. Apply now\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/sales-development-representative/","tags":null,"title":"Sales Development Representative"},{"categories":null,"contents":"Reports to: VP of Product Development\nWork location: Remote, United States\nContract type: Permanent | Full-time\nPeople manager: No\nCrunch.io is seeking a Product Manager, to help us build the tools for the next generation of analytics tools for survey data. You will align with our workflows team, based in US Mountain Time, providing them with both big picture product vision and day-to-day delivery support. You will collaborate internally and externally to develop a vision for how users can work together to share and move data and insights.\nWe are looking for someone who can help to develop and execute on a customer focused roadmap. You should also be enthusiastic about communicating technical details to a range of audiences and well-practiced in empathetic stakeholder management, including saying no! This role will work heavily with our customer success and sales teams, and will collaborate deeply with our design team and other engineering teams. We are looking to you to cultivate a supportive environment for the workflows team and the larger product team. This role will report to the Vice President of Product Development.\nQualifications\nWhat will I be delivering?\nA strategic vision for the Crunch workflows team Roadmap items Regular updates on team status Engagement with internal and external stakeholders aligning on product strategies and priorities Clear product documentation Triaged customer support requests Qualifications:\n2+ years working in a Product Management function Strong oral \u0026amp; written communication skills Strong prioritization skills Strong stakeholder management skills Deep empathy for customers Additional Information\nThis is a 100% remote role.\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/product-manager/","tags":null,"title":"Product Manager"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/tmre-brands-webinar-2021-lp","tags":null,"title":"It's Time to Go Online: Self-Service Data Analysis for Insights Teams"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/iiex-forward-demo-2021","tags":null,"title":"IIEX Forward Demo: Fast Track Your Survey Data Analysis with an All-in-One Platform"},{"categories":null,"contents":"Reports to: Manager of Customer Service\nWork location: Remote\nDo you work with market research data? Looking for a change of direction away from traditional market research data processing and analysis? Here is an opportunity to join the supplier side, in software.\nWe have a growing product and user base and need an organized, detail-oriented person to join our customer support team for our online data analysis and reporting app: Crunch.io.\nYou will be supporting market researchers around the world who use our rapidly evolving, cutting-edge app for market research data analysis and reporting.\nThis is the perfect role for someone who is highly technical with data, enjoys the stimulation of a new and evolving tool, and likes helping others.\nThe role of the Customer Support Analyst is centered around 4 key areas:\nCustomer support - triage and resolve highly complex, technical, and application-related support issues, which impact product performance and customer success. Product testing - test our new product features, systematically and with attention to detail, detecting back bugs and contributing to new documentation. Supporting the sales team - review prospects data and prepare datasets for demonstration. Proactively assist new users with post-sales education and onboarding. Professional services - manage and execute specific projects where Crunch.io has been engaged to set up customer data on their behalf. What you’ll do\nDevelop a deep understanding of the application and internal Crunch documentation, becoming a Crunch expert. Communicate with customers via email and online web calls (e.g. Zoom) to ensure effective use of our app in line with best practices. Maintain excellent relationships with customers by applying superb customer service and technical skills. Field user questions, report problems and triage them appropriately in our centralized international support desk using the Zendesk app. Develop and deliver reports on customer account usage on a periodic basis. Apply in-depth troubleshooting and debugging skills to get to the root cause of customers’ issues. Develop clear reproduction steps for issues, for both problem-solving and acceptance testing. This involves integrating knowledge of different survey systems, the Crunch.io platform and other related software. Prioritize customer cases effectively. It’s vital that you are able to juggle priorities, and articulate your plans to your co-workers and management. Escalate the relevant support issues to product management and engineering teams. Our technical support staff need to be fully versed in our software to comprehensively close the majority of tickets independently. Contribute to the knowledge base (help.crunch.io) and ensure that our documentation is up-to-date and accessible. This includes extensively researching and documenting software and technical issues, which can become the basis for knowledge base articles. Basic qualifications\nExperience \u0026amp; Background. Experience in the preparation and use of quantitative market research with hands-on data manipulation. You have a background in market research operations, a good understanding of survey analysis concepts, tools, and methods, and competency in a statistical programming language (eg: SPSS syntax or R). Competencies working with SQL, Python or other programmatic languages are valuable too. Education. BA/BS degree in Computer Science and/or statistics preferred but other technical or quantitative degrees or equivalent work experience will also be considered. Problem Solver. You are a natural problem solver with a curiosity about technology. Others describe you as a highly creative, curious technologist, and you have excellent research skills, and strong analytical and deductive skills, important for isolating the cause of bugs. Communicator. Your verbal and written skills are top notch. You have excellent spoken and written English language skills. You will primarily be communicating with users in the United States and United Kingdom. You have an outstanding ability to empathize with customers and convey confidence, and are skilled with conflict resolution, collaboration and small group facilitation skills. Organized. You must be able to juggle and prioritize a high volume workload and handle details accurately and in a timely manner under pressure. Flexible. You have the ability to multitask and handle frequent interruptions. Detail oriented. Attention to detail is your trademark with a strong desire to find solutions for problems. Remote working\nWe are a remote company, with all employees working remotely. We believe in hiring the best people, not restricted by geography. For this role, we need flexibility in time zone coverage (e.g. may encompass coverage of US \u0026amp; European time zones for support). Working remotely requires high motivation and the ability to report back on productivity. We also believe that it fosters an excellent work/life balance for our employees.\nEmployee benefits\nWe are a startup, with a fast-paced startup culture. We are funded by and operate as a wholly-owned subsidiary of a public company, so our employees benefit from the excellent benefits and opportunities provided by a large company.\nApply now\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/customer-support-analyst/","tags":null,"title":"Customer Support Analyst"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/quirks-virtual-crunch-session-2021","tags":null,"title":"Survey Data Analysis Trends: Your Data in One Place or All Over the Place?"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/insights-analytics-showcase-2021","tags":null,"title":"Insights Tech Showcase Demo"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/quirks-virtual-fall-crunch-lp","tags":null,"title":"Beyond Static Reporting \u0026 PowerPoint"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/quirks-virtual-crunch-lp","tags":null,"title":"The New Normal in Market Research: Delivering Tracking Survey Insights in 24 Hours"},{"categories":null,"contents":"We are looking for a world-class Data Visualization Specialist to join our remote-first and globally distributed team at Crunch.io—the platform for collaborative data analysis. In this role, you will be working with a team of data scientists, industry experts, market research organizations, designers, and engineers; creating cutting-edge data visualizations for companies ranging from small-to-medium sized businesses to Fortune 500 organizations. This remote position reports to our VP of Product and will work closely with our Senior Director of Analytics and Product, Design, and Engineering teams.\nPrimary Responsibilities\nAble to design/develop industry-leading data visualizations based on an understanding of common and more fine-grained data visualization/representation challenges, data problems, and eventually; relating to the use cases of our current/prospective customers. Understands the tradeoffs between graphics paradigms and speaking multiple visualization grammars, and how they relate to the data we have and that we’re trying to represent. (Recognizing that we have scales and what it means when these data oppose each other on different axis.) In this role, you will lead data-driven decisionmaking with the team about which languages, frameworks, and libraries we should use to visualize customer data that is best matched to the twin challenges of exploratory data analysis and analytic presentation. Cultivate your knowledge and ours, and help educate our team in your areas of expertise. Bring a critical eye to our work, and patience to refine it with us until we meet your standards. Must Haves\nDeep domain expertise of data science, statistical analysis, and data visualization Adept at interacting with JSON REST APIs with standard tools (e.g., Postman) A generalist with working knowledge of data visualization libraries and packages used today: Python (SciPy/NumPy/pandas, Seaborn, Bokeh, etc.), R (ggplot2, grid), and JavaScript (D3.js, Vega, Plotly), etc. Fluency with a Git/GitHub version control workflow (though not primarily a coding role, you’ll work closely with our team of developers) Comfortable in a remote-first and internationally-distributed startup environment: Able to figure out what questions to ask and how to get answers Familiarity with Slack, Zoom, Google Meet, and similar Flexible scheduling across time zones Nice to Haves\nAble to travel globally a few times a year for company retreats and design sessions (recent locations include Montréal, Punta Cana, and Warsaw) You’re inspired by data visualization pioneers including Florence Nightingale and W.E.B. Du Bois; Cleveland, Tufte, the Wickhams, Heer, and Bostock Interest in machine learning and statistical computing Time zone / work hours amenable to working closely with US-based Product team Apply now\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/data-visualization-specialist/","tags":null,"title":"Data Visualization Specialist"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/dashboards-tips-and-tricks-lp","tags":null,"title":"Dashboards 101: Design Tips for Market Researchers"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/player.vimeo.com/video/343376948","tags":null,"title":"Crunch.io Overview"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/conquering-survey-trackers-lp","tags":null,"title":"How to Conquer Survey Trackers"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/player.vimeo.com/video/374781211","tags":null,"title":"Crunch.io Dashboards Overview"},{"categories":null,"contents":"Interested in learning more about Crunch?\n","permalink":"//crunch-io.github.io/crunchy/newsite/request-demo/","tags":null,"title":"Sales"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/dashboards-webinar-recording-lp","tags":null,"title":"Build an Interactive Dashboard for Survey Data in 5 Minutes"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/player.vimeo.com/video/367372910/","tags":null,"title":"How to Build a CrunchBox"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/player.vimeo.com/video/367372890/","tags":null,"title":"How to Use a CrunchBox"},{"categories":null,"contents":"Reports to: Software Delivery Manager\nWork location: Anywhere, 100% remote\nDirect reports: 0\nWe are hiring a Python Developer to help develop our platform. We are inviting you to join our small, fully remote team of developers and operators helping make our platform faster, more secure, and more reliable. You would help us deliver new features and build the future for how we deploy our products faster and safer while increasing the availability and reliability of our systems. You will explore different ways of problem solving and discover, explain, and defend your choices in implementation. You will be self-motivated and disciplined in order to work with our fully distributed team.\nWe are looking for someone who is a quick study, who is eager to learn and grow with us, and who has experience in Agile cultures. At Crunch, we believe in learning together: we recognize that we don’t have all the answers, and we try to ask each other the right questions. Some of the ways that we accomplish that include paired programming to tackle a hard problem, transparent code reviews, and discussions about design and architecture. Since Crunch’s employees are completely distributed, it’s crucial that you can work well independently, and keep yourself motivated and focused. We move fast but carefully, with an earnest commitment to not breaking things… well, not too much.\nOur stack\nWe currently run our in-house production Python code against Redis, MongoDB, and ElasticSearch services. We proxy API requests through NGINX, load balance with ELBs, and deploy our React web application to AWS CloudFront CDN. Our current CI/CD process is built around GitHub, Jenkins, BlueOcean including unit, integration, and end to end tests and automated system deployments. We deploy to Auto Scaling Groups using Ansible and Cloud-Init.\nWhat you\u0026rsquo;ll do\nDevelop performance enhancements and new features in Crunch\u0026rsquo;s proprietary Python in-memory database. Work closely with product managers, sales, and customer success team to understand the system’s functional and non-functional requirements. Establish realistic estimates for timelines and ensure that project remains on target to meet deadlines. Contribute to code quality through unit testing, integration testing, code review, and system design using Python. Assist in diagnosing and fixing system failures quickly when they occur in your area of expertise. This is limited to when the on-call rotation needs a subject matter expert to help troubleshoot an issue. Design and implement RESTful API endpoints using the Python programming language. Basic qualifications\nStrong understanding of the software development lifecycle. A record of successful delivery of SaaS and cloud-based applications. Extensive programming experience using Python as a programming language A commitment to producing robust, testable code. Results-driven, self-motivated and enthusiastic. Excellent communication skills - verbal, written and presentation. Experience working in a Linux environment Experience with client/server architectures A keen interest in learning new things. Advanced (preferred) qualifications\nExperience with data locality problems and caching issues Expertise writing Cython or C extensions Deep understanding of how a database system works internally (indexing, extents, memory management, concurrency, durability, journal) Expertise with the numpy library Experience implementing custom messaging protocols (sequence numbers, ttl, etc) Database experience using MongoDB and ElasticSearch Bachelor’s Degree in Programming, Computer Science, or Engineering-related field. Pytest testing experience Design and deployment of Continuous Integration tools (e.g., Jenkins, Bamboo, Travis, etc) Apply now\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/python-engineer/","tags":null,"title":"Python Developer"},{"categories":null,"contents":"Reports to: Software Delivery Manager\nWork location: Anywhere, 100% remote\nEmployment type: Full-time employee, direct hire\nDirect reports: 0\nWe are hiring a Senior Database Architect to help develop our platform. We are inviting you to join our fully remote team of developers and operators helping make our platform faster, more secure, and more reliable. You would help us deliver new features and build the future for how we deploy our products faster and safer while increasing the availability and reliability of our systems. You will explore different ways of problem-solving and discover, explain, and defend your choices in implementation. You will be self-motivated and disciplined in order to work with our fully distributed team.\nWe are looking for someone who is a quick study, who is eager to learn and grow with us, and who has experience in Agile cultures. At Crunch, we believe in learning together: we recognize that we don’t have all the answers, and we try to ask each other the right questions. Some ways that we accomplish that include paired programming to tackle a hard problem, transparent code reviews, and discussions about design and architecture. As Crunch’s employees are completely distributed, it’s crucial that you can work well independently, and keep yourself motivated and focused. We move fast but carefully, with an earnest commitment to not breaking things… well, not too much.\nOur stack\nWe currently run our in-house production Python code against Redis, MongoDB, and ElasticSearch services. We proxy API requests through NGINX, load balance with ELBs, and deploy our React web application to AWS CloudFront CDN. Our current CI/CD process is built around GitHub, Jenkins, BlueOcean including unit, integration, and end-to-end tests and automated system deployments. We deploy to Auto Scaling Groups using Ansible, Terraform, and Cloud-Init.\nWhat you\u0026rsquo;ll do\nDevelop effective ways to store, query, and interactively analyze large datasets that contain millions of rows and hundreds of thousands of columns. Work closely with product managers, sales, and customer success team to understand the system’s functional and non-functional requirements. Contribute to code quality through unit testing, integration testing, code review, and system design using Python. Assist in diagnosing and fixing system failures quickly when they occur in your area of expertise. This is limited to when the on-call rotation needs a subject matter expert to help troubleshoot an issue. Basic qualifications\nExtensive enterprise experience solving complex problems using multiple database systems, S3/parquet data lake architectures, and query engines. Deep understanding of how a database system works internally (indexing, extents, memory management, concurrency, durability, journal). Strong understanding of the software development lifecycle. A record of successful delivery of SaaS and cloud-based applications. A commitment to producing robust, testable code. Results-driven, self-motivated and enthusiastic. Excellent communication skills - verbal, written and presentation. Bachelor’s Degree in Programming, Computer Science, or Engineering-related field. Advanced (preferred) qualifications\nProven expertise and experience with database technologies including rDBMS, noSQL, Redshift, Snowflake, Firebolt, Panoply, Presto, BigQuery, Clickhouse, Arrow Flight, Pinot, Dremio, Databricks, Dask, Rudderstack, and HANA Cloud. Programming experience using Python as a programming language Experience with data locality problems and caching issues Apply now via email to careers@crunch.io\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/senior-db-programmer/","tags":null,"title":"Senior Database Architect"},{"categories":null,"contents":"Looking for help with Crunch?\n","permalink":"//crunch-io.github.io/crunchy/newsite/help.crunch.io/hc/en-us","tags":null,"title":"Customer Support"},{"categories":null,"contents":"Reports to: Software Delivery Manager\nWork location: Anywhere, 100% remote\nDirect reports: 0\nWe are hiring an Advanced React Developer to help develop our platform. We are inviting you to join our small, fully remote team of developers and operators helping make our platform faster, more secure, and more reliable. You would help us deliver new features, explore different ways of problem solving, and discover, explain, and defend your choices in implementation.\nAt Crunch, we believe in learning together: we recognize that we don’t have all the answers, and we try to ask each other the right questions. Some of the ways that we accomplish that include paired programming to tackle a hard problem, transparent code reviews, and discussions about design and architecture. Since Crunch’s employees are completely distributed, it’s crucial that you can work well independently, and keep yourself motivated and focused. We move fast but carefully, with an earnest commitment to not breaking things… well, not too much.\nOn the front-end team, we feel strongly about developing solutions that are both technically and aesthetically sound. We invite you to bring your experience and perspective to conversations about the future growth of our applications and environment. We work closely together, with a healthy and non-combative review process aimed at improving code as well as developing each other’s skills. In short, we strive to write solid, thoroughly tested, and readable code; and we are seeking a new member of our already highly-effective team.\nWhat you\u0026rsquo;ll do\nWork on new features with other front-end team members. Triage, unravel, test, and resolve bugs and issues. Update existing code in parallel with backend changes to ensure uninterrupted operation. Review your colleagues’ work on pull requests. Propose, discuss, and debate technology improvements, code organization, design patterns, and conventions employed in the front-end development environment. Use your extensive experience to train and mentor other developers on the front-end team. Our stack\nFront-end developers on our platform are first-class team members. Although your focus is primarily on TypeScript, you will gain familiarity with the entire system. Some of the technologies that enable us to achieve our well-designed, efficient, and performant applications are:\nTypeScript (latest specification) Webpack + Babel (ES6 modules) React + Redux Styled Components Unit testing with Jest (we have over 5500 unit tests across our app) Jenkins for continuous integration and deployment If you have experience or interest in these additional areas, you may have the opportunity to work with them as part of your role:\nEnd-to-end testing using cypress Responsive design / mobile / touch interfaces Basic qualifications\nAdvanced to expert-level React skills with demonstrated experience. A firm command of Typescript. Familiarity with JavaScript frameworks and libraries for building web applications. Commitment to high development standards, including comprehensive testing. Demonstrated ability to work with team of peers, understanding and respecting the responsibilities and expertise that developers, designers, QA staff, and others bring to the project. Ability to provide reasonable estimates on work, meet deadlines, and take ownership and responsibility. Well-developed principles of self-motivation and time management. An appetite for continual improvement and growth. Advanced (preferred) qualifications\nBachelor’s Degree in Programming, Computer Science, or Engineering-related field. Current or former contributor to a significant open-source React library. Apply now\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/react-developer/","tags":null,"title":"Advanced React Developer"},{"categories":null,"contents":" Importing data Importing data is so much fun.","permalink":"//crunch-io.github.io/crunchy/newsite/knowledge-base/importing-data/","tags":null,"title":"Importing and Cleaning Data"},{"categories":null,"contents":"Sharing Data Sharing data is really fun\n","permalink":"//crunch-io.github.io/crunchy/newsite/knowledge-base/sharing-data/","tags":null,"title":"Sharing Data"},{"categories":null,"contents":"Reports to: VP of Sales\nWork location: Remote, United Kingdom\nThe Account Executive (AE) will be responsible for driving sales of Crunch products within an assigned geographical region and market segment. The AE will represent Crunch and manage all aspects of the sales process including: lead management, qualification, evaluation, close and account care and will play an integral role in the success of the overall sales team. This is a quota‐carrying sales position.\nWhat you\u0026rsquo;ll do\nDefine and execute territory / account sales plans for the geographic territory and then meet and exceed sales goals (quotas) through prospecting, qualifying, managing and closing sales opportunities within the assigned territory. Develop and manage sales pipeline, prospect and assess sales and move many transactions simultaneously through the sales pipeline. Manage and track customer and transactional information in a CRM system. Coordinate resources throughout the sales cycle, including product support and sales engineering. Provide product demonstrations, with the help of a technical sales executive, and general support to prospective customers. Nurture and expand the company’s relationship with customer accounts of various sizes and industries. Provide regular reporting of pipeline and forecast through the CRM system. Keep abreast of competition, competitive issues and products. Practice effective, excellent communication with management, customers and support staff. Participate in team‐building and company‐growth activities including strategy setting, sales training, marketing efforts and customer care. Travel to customer locations in support of sales efforts. Who you are\nPerformer. Consistent over-achievement of sales quotas in a large geographic territory. Amazing Salesperson. 8‐10+ years of enterprise software sales experience. Energy and Enthusiasm. Missionary selling, conceptual selling, solution selling experience. Can go beyond relationship management. Technically Savvy. Experience with analytics, data, databases, predictive modeling, or business intelligence preferred. Experienced. Bachelor’s Degree with a technical or business focus preferred. Domain. Market Research, SaaS, Business Intelligence, Analytics, Data Warehousing, Predictive Modeling or similar background / experience. You are a Recruiter! Crunch hires company builders and, in this role, you will be asked to be on the constant lookout for the best talent to bring on-board to help us continue to build one of the best companies in the world! Apply now\n","permalink":"//crunch-io.github.io/crunchy/newsite/jobs/account-executive/","tags":null,"title":"Account Executive"},{"categories":null,"contents":"Reports to: VP of Sales\nWork location: Remote, United States or Canada\nThe Account Executive will be responsible for driving sales of Crunch products within an assigned geographical region and market segment. The AE will represent Crunch and manage all aspects of the sales process including: lead management, qualification, evaluation, close and account care and will play an integral role in the success of the overall sales team. This is a quota‐carrying sales position.\nWhat you\u0026rsquo;ll do Define and execute territory / account sales plans for the geographic territory and then meet and exceed sales goals (quotas) through prospecting, qualifying, managing and closing sales opportunities within the assigned territory. Develop and manage sales pipeline, prospect and assess sales and move many transactions simultaneously through the sales pipeline. Manage and track customer and transactional information in a CRM system. Coordinate resources throughout the sales cycle, including product support and sales engineering. Provide product demonstrations, with the help of a technical sales executive, and general support to prospective customers. Nurture and expand the company’s relationship with customer accounts of various sizes and industries. Provide regular reporting of pipeline and forecast through the CRM system. Keep abreast of competition, competitive issues and products. Practice effective, excellent communication with management, customers and support staff. Participate in team‐building and company‐growth activities including strategy setting, sales training, marketing efforts and customer care. Travel to customer locations in support of sales efforts. Who you are Performer. Consistent over-achievement of sales quotas in a large geographic territory. Amazing Salesperson. 8‐10+ years of enterprise software sales experience. Energy and Enthusiasm. Missionary selling, conceptual selling, solution selling experience. Can go beyond relationship management. Technically Savvy. Experience with analytics, data, databases, predictive modeling, or business intelligence preferred. Experienced. Bachelor’s Degree with a technical or business focus preferred. Domain. Market Research, SaaS, Business Intelligence, Analytics, Data Warehousing, Predictive Modeling or similar background / experience. You are a Recruiter! Crunch hires company builders and, in this role, you will be asked to be on the constant lookout for the best talent to bring on-board to help us continue to build one of the best companies in the world! ","permalink":"//crunch-io.github.io/crunchy/newsite/knowledge-base/getting-started/","tags":null,"title":"Getting Started"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/demo-days-2022","tags":null,"title":"Insight Platforms Demo Days"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/brand-tracking-demo-sep-2022","tags":null,"title":"Insights Tech Showcase Brand Tracking"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/info.crunch.io/tmre-2022","tags":null,"title":"TMRE"},{"categories":null,"contents":"Crunch web application Fixed the following: Materialization of formulas works properly now when a dataset exclusion filter is applied. Users were sometimes not able to export a multitable that contains a formula weight, which has now been fixed. Passing a variable through a function signature was triggering a type conversion when using the CSV importer, which has been fixed. A bug occurred that prevented users from editing personal variables, which has also been fixed. SDKs (rCrunch, pyCrunch, and sCrunch) Augmented the rCrunch package so that it now sends a content-type header when using runCrunchAutomation to avoid errors when assuming or guessing text or a JSON script. Crunch Automation Fixed a bug that prevented Crunch Automation scripts from creating sufficient project permissions. Added the following system-script (folder) commands (among many others): MOVE FOLDERS command DELETE FOLDERS command Developer documentation Replaced the deselectfunction with frame_subset. Help desk and website improvements Created new articles to support scriptable dashboard workflows. See the Getting Started article for more information. Added additional folder command articles. See the Getting Started article for more information. Added a new article about how to share data and dashboards, which describes in detail how to share datasets to members. Updated the following articles: The Definitive Guide to Tracking The Definitive Guide to Importing and Preparing Data Creating dashboards ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-12-12/","tags":null,"title":"Release 2022.17"},{"categories":null,"contents":"Crunch web application Fixed the following in Confirmit integrations: A bug that occurred within surveys that define predefined lists within predefined lists. Confirmit titles with empty strings (\u0026quot;\u0026quot;) are now given a default title (\u0026quot;No Title”). A category mapping is now used to fix column aliases when a grid variable is a categorical array. Numeric arrays are now handled properly when there is missing data due to broken labeling. Fixed the size limit for response data on Decipher integrations. Substantially increased the limit that can be used in subtotals of multiple-response variables. There was previously a de facto limit on the number of items, which rendered them unusable. Reenabled expression filters (i.e., filters that are not named) so that they appear in the footer of dashboard tiles. API endpoints and API reference Added a full path field, which is now returned whenever project entities are queried. SDKs (rCrunch, pyCrunch, and sCrunch) Updated the R package for R-devel changes to POSIXlt object comparison. Crunch Automation Added the REPLACE NUMERIC CASE command, which allows you to overwrite a non-derived variable\u0026rsquo;s values with numbers based on multiple cases (conditions). Help desk and website improvements Added the following: New documentation for folder commands, which allow you to use scripts to automate Crunch.io operations outside of datasets. New and updated articles to support scriptable dashboard workflows. See the complete list of scriptable dashboard articles for more information. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-11-21/","tags":null,"title":"Release 2022.16"},{"categories":null,"contents":"Crunch web application Added SAML SSO as an option for user authentication in Crunch. SAML is a secure, industry standard way for organizations to centrally manage users across applications. See the help article for more information. Fixed the ability to edit the definition of logical variables (those created in the filter builder) when using the web app. Fixed table exports so that pairwise column tests between multiple-response columns (when some columns are hidden) now work properly. API endpoints and API reference Added new information to the create account user endpoint, which describes how account rules will override the user’s setting when adding the user in the API. Added a new attribute (path) to the folder endpoint, which represents the folder location in the hierarchy tree. Help desk and website improvements Created the following new articles to support the new dataset dashboard features: Dataset Homepages How to copy a dashboard from A to B ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-10-24/","tags":null,"title":"Release 2022.15"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred in Crunchboxes, where only unweighted values displayed instead of their weighted ones. They now display weighted values. Completed a change to ensure that Excel cells that contain text cannot be incorrectly evaluated by Excel as formulas. Completed all of the updates to ensure that deck dashboards respected a mix of weighted and unweighted tiles correctly. Fixed a bug that affected users that have permissions to datasets in more than a single account. Made additional technical refinements for integrating Confirmit surveys into Crunch. Crunch Automation The COMPLETE_CASES function no longer requires an array wrap around the arguments. For example, complete_cases([A, B, C]) can now be written as complete_cases(A, B, C). See Crunch Automation basics ARTICLE for more information. Added the MATERIALIZE command, which allows you to evaluate computed expressions (such as case statements or recodes) and saves the values to the dataset. Help desk and website improvements Created the following new articles: How to set up a partner SAML provider How to delete a user through the web app Added new information on how to disallow all user access except for one-time passwords. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-09-27/","tags":null,"title":"Release 2022.14"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred when CrunchBoxes did not display weighted values when applicable. Crunch integrations Made numerous Confirmit-integration fixes, including: Improved how categories are handled. Fixed HTML image-tag spacing issues. Fixed how subvariables and variables are imported, as well as ensuring that multiple/duplicate subvariable aliases are handled correctly. Corrected category IDs so that they are instead treated as integers (and not strings). Made additional looping and parsing fixes to further optimize Confirmit integrations. Crunch Automation Updated the CONVERT NUMERIC TO CATEGORICAL command so that it now creates the output categories in a specified order. Implemented speed and performance improvements across all Crunch Automation commands when working with large datasets (with a lot of variables) as well as when viewing the the list of scripts on datasets that have multiple large scripts. Help desk and website improvements Added new uses cases to the Recoding: case-level missing \u0026amp; valid values (\u0026ldquo;rebasing\u0026rdquo;) article. Created a new article that describes how to share a folder. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-09-12/","tags":null,"title":"Release 2022.13"},{"categories":null,"contents":" Weighting Stats testing Advanced filters (nesting variables) Custom interactions Multiway tables or 3D tables with 3 variables Time series charts Grids \u0026amp; scorecards ","permalink":"//crunch-io.github.io/crunchy/newsite/market-researchers/the-survey-analysis-tool/","tags":null,"title":"The survey analysis tool you need"},{"categories":null,"contents":"\u0026ldquo;Crunch.io has been very successful for our clients. In the past, all clients’ queries channeled through us.\nNow, clients are using Crunch.io by themselves to answer their own questions. They are less reliant on us for inquiries, freeing up my team’s time.”\nDIRECTOR, CONSUMER RESEARCH, Nielsen IQ\n","permalink":"//crunch-io.github.io/crunchy/newsite/market-researchers/testimonial-custumer-research/","tags":null,"title":"testimonial"},{"categories":null,"contents":"Crunch web application Fixed the following issues: Slides were sometimes not appearing properly within a deck. Some columns within a multitable were no longer visible after decreasing the browser page magnification. Double-clicking on a tile in dashboard view did not switch to ‘tables \u0026amp; graphs’ view. Changes made to the sorting order of a univariate analysis in the Edit \u0026gt; Categories panel were not able to be saved. Crunch integrations Made the following Confirmit-integration fixes: Responses now load properly when the capitalization doesn\u0026rsquo;t match the metadata. Made improvements to the overall progress indicator while pulling data from Confirmit. Fixed a bug where Confirmit data expects a category not defined in the metadata by adding it instead at the response-parsing time. Fixed a bug that occurred when a Confirmit integration created a categorical array of text variables that should not be nested in a categorical array. Made the following Decipher-integration fixes: Improved the handling of very large imports, which also provides a better overall progress indicator while pulling data from Decipher. Improved the handling of dates in situations where Decipher provides an ambiguous date format. Developer documentation Updated numerous articles within the Crunch help center to reflect the latest instructions on how to use API keys. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-08-08/","tags":null,"title":"Release 2022.12"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/market-researchers/work-quicker-and-moreefficiently/","tags":null,"title":"Work quicker and more efficiently"},{"categories":null,"contents":"Crunch web application Made the following improvements to tab book exports: Fixed the error messaging that appears when something fails during the export of a tab book. The values list within an exported tab book is now returned in the specified order for variables and subvariables. A bug previously prevented the order to output properly, which has been fixed. Improved Confirmit integrations by enabling surveys that have image-based fields. Enabled numeric means so that they can be: Rendered as a bar graph. Exported to PowerPoint as a bar graph. Fixed the following: The total population figure is now being pulled from the source view used for the copy_from function instead of the underlying dataset. An error that prevented viewers from browsing outside of a folder that had a folder homepage has been fixed. Edit functionality is now working for Profiles slides. Crunch Automation Added the REORDER FOLDER command, which lets you change the order of the variables and subfolders inside a particular variable folder. Help desk and website improvements Updated the Definitive Guide to importing and preparing Data with new information about various tools and resources. Added new information about: How to use the download structure link to download a Crunch Automation script that defines a folder structure. How to handle Google warning notifications when using the Google Sheets-based code generation tool. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-07-18/","tags":null,"title":"Release 2022.11"},{"categories":null,"contents":"12 tips and tricks to build visually compelling, easily-digestible survey data dashboard that you can mae without an in-house designer or developer\n","permalink":"//crunch-io.github.io/crunchy/newsite/powerful-survey-analytics/free-resource/","tags":null,"title":"Free Resources"},{"categories":null,"contents":"Crunch web application Fixed the following issues: Sharing of decks, filters, and multitables now works for subfolders so there is no longer a need to share the subfolder with a team as well. When exporting a tab book, it would sometimes fail when using certain setting combinations. The ‘edit tile footer’ field would sometimes display an inconsistent response when typing values into it. Made performance improvements to Confirmit integrations. Crunch Automation Fixed the following issues: The CREATE TEXT CONCATENATE command now works with categorical and text variables. The CREATE MULTIPLE SELECTION command now works when the input has multiple missing categories. Added the CREATE CATEGORICAL CONSTANT command, which allows you to create a categorical variable with a single value. Help desk and website improvements Created a new article that describes how to use project folders in Crunch. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-06-27/","tags":null,"title":"Release 2022.10"},{"categories":null,"contents":"Crunch web application Fixed the following in Confirmit integrations: Errors occurred when non-numeric category IDs are used. Surveys were not being displayed because they exist on subsequent pages. Fixed the following in the web ap: The numeric scale for a CrunchBox could mismatch the selected measure. Changes to the ‘Min’ and ‘Max’ value axis settings for a graph were not persisting. Enabled Dataset Views (in early access). See the announcement and documentation for more information. Crunch Automation Fixed an issue that occurred when using the OVERWRITE VALUES command to overwrite numeric array subvariables. Added the CREATE TEXT CONCATENATE command, which allows you to create a new text variable by concatenating multiple inputs by alias and using an optional separator. Help desk and website improvements Created a new article that describes how to add an API key in your browser. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-05-30/","tags":null,"title":"Release 2022.09"},{"categories":null,"contents":"Crunch web application Fixed the following issues: Certain messages were not sent to clients who have requested notification, specifically for dataset sharing. Time plots using categorical dates with the date format YYYY-Www were not rendering properly. Time plots would sometimes not save properly to the deck. Scorecard creation would sometimes not work. Vertical scrolling was not working properly for folders that have homepages defined for them. Updated the Decipher variable format. Made a fix to how categorical arrays are exported to Excel (.xlsx ) files: since exports only print tables for the first 150 subvariables, users are advised to split larger arrays into chunks. Made improvements to the UI experience when exporting a tab book. Removed the option to import a multitable from the multitable builder. Updated the transformation for \u0026ldquo;multiple selections\u0026rdquo; operations to adapt to an earlier change in the handling of categorical arrays in order to reduce memory consumption. API endpoints and API reference Enforced API Keys. Crunch is no longer allowing a username and password to access the Crunch API. SDKs (rCrunch, pyCrunch, and sCrunch) Added information to sCrunch docs that describe support for using API keys. Updated rCrunch to explain how authenticating with crunch via login() is no longer supported. See Crunch API Keys for more details on authenticating with API keys. Added experimental rCrunch support for parquet exports in exportDataset(). Help desk and website improvements Added new information to the Importing Decipher article, which describes how to obtain prerequisite credential information to load data from Decipher into Crunch. Created a new article for the new Script Builder, which describes how to use a customized Google Sheet that consolidates all of the key metadata from a dataset into one place. It acts as both a metadata reference and a tool for automatically generating Crunch Automation. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-05-02/","tags":null,"title":"Release 2022.08"},{"categories":null,"contents":"Crunch web application Folder Homepages is now available in wide release. Made the following PowerPoint export improvements: Removed the “All” title from exports of univariate bar graphs. Exports for a tabbed graph analysis now reflect the tab\u0026rsquo;s name corresponding to the data on the slide. Fixed the following issues: The search query was not working properly when a query contained an ampersand (\u0026amp;) character. Graph categories were rendered with incorrect colors if certain categories were suppressed. For numeric array timeplot analyses, the vertical axis would adjust incorrectly if there were negative values to plot. The color assignment was sometimes assigned incorrectly for CrunchBoxes. Crunch Automation Fixed an issue in the RECODE command where duplicate category IDs are created under certain conditions. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-04-11/","tags":null,"title":"Release 2022.07"},{"categories":null,"contents":"Crunch web application Fixed the following issues: Rollup changes did not reflect on tables and graphs. Filter footnotes did not display properly in graphs. PowerPoint exports of graphs failed if one or more categories were suppressed. The rendering of discrete values for a numeric variable did not appear in ‘tables \u0026amp; graphs’ view. Image links in exported markdown files did not work. Help desk and website improvements Created the Crunch naming rules article, which provides the latest guidance on how to name variables and folders to ensure that your data appears properly within the Crunch UI. Updated the Dataset Level User Access help article to include clarifying information on Viewers, Editors, and Admins. Updated Folder Homepages, which provides additional information on how to add video tiles. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-03-28/","tags":null,"title":"Release 2022.06"},{"categories":null,"contents":"Crunch web application Fixed the following issues: Multitable column header titles and descriptions could sometimes overlap. An analysis with a multiple response variable in the column position and means in the cell positions may show dashes instead of actual means. Exporting a tabbook would sometimes fail to report that an error occurred during the processing of a request. Timeplots would sometimes not save to a deck successfully. Improved numeric array analyses so that blank columns are now suppressed if the setting to show empty rows/columns is not checked. Added the ability to provide arrow-based metadata in Parquet exports, which allows pyarrow users to easily utilize their datasets. Crunch Automation Fixed a bug that prevented Crunch Automation scripts from running on datasets with certain folder configurations. Help desk and website improvements Created the following new help articles: Low base warnings and suppression, which describes how to use controls for warning or suppressing values calculated from unweighted bases that fall below a customizable threshold. Connecting to the Crunch API with R, which provides guidance on how to set up an API key in R/R Studio. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-03-14/","tags":null,"title":"Release 2022.05"},{"categories":null,"contents":"Crunch web application Fixed an issue that prevented all categories in the column position to be viewed when scrolling horizontally. Fixed an issue in which scorecard column headers would sometimes render on top of each other. Adjusted the limit on the number of tabs in a tab book (multitable) export to 500. Improved the user experience when viewing a time plot so that the top five categories displayed by default are now updated accordingly if the measure is changed in the display controller. Added the ability for a CrunchBox to now show empty categories. Crunch Automation Added the ability to use a DATE option (using ISO8601 format) on each category when creating variables in the following commands: CREATE CONVERT command REPLACE CONVERT command CREATE CATEGORICAL CASE command CREAT CATEGORICAL CUT command CREATE CATEGORICAL RECODE command Help desk and website improvements Created the new Dataset Views help article, which describes how (and why) to use the Crunch UI to create partial dataset views to share with a client or colleague. Added up-to-date information about how to use Crunch Automation with certain tasks in the Setting up a dataset with R help article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-02-28/","tags":null,"title":"Release 2022.04"},{"categories":null,"contents":"Crunch web application Made performance improvements for rendering tables in dashboard tiles. Fixed an issue that occurred when double-clicking on a tile in dashboard view would sometimes not load the corresponding analysis in ‘tables \u0026amp; graphs’ view. Fixed an issue in which scorecard column headers could sometimes render overlapped (early access only). Added the ability to show subtotals and calculated differences on graphs, which is now in wide access. See the announcement for more information. Improved deck and tab-book exports so that they now reflect suppressed entries for the corresponding ‘Column t-test’ results for suppressed categories that are below minimum base size for a dataset. API endpoints and API reference Enabled API Keys for our API users, who are encouraged to switch their practice from login (user token) to key. Crunch API libraries for R and Python (see below) and their documentation have been updated accordingly. SDKs (rCrunch, pyCrunch, and sCrunch) Updated pyCrunch and sCrunch with new information on how to use API keys. Help desk and website improvements Created a new article about Folder Homepages, which describes our latest features on how to organize your datasets and provide access management. See the announcement for more information. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-02-14/","tags":null,"title":"Release 2022.03"},{"categories":null,"contents":"Crunch web application Fixed an error that occurred in SurveyMonkey integrations when a “total” is not present in passed arguments. Added the ability to export datasets in the Parquet file format, which allows users to select categorical IDs to generate a more efficient Parquet file (the default export for categorical columns is column names). Added the ability to notify users when an invalid filter is applied as well as allow users to fix them. Crunch Automation Fixed an error in the ALTER ARRAY command that occurred when attempting to add subvariables from another array, which now displays an error on validation. Added error messaging to the Crunch Automation panel in the web UI when an error occurs — selecting ‘Back’ now returns the user to the ‘Run script’ panel showing the script that failed. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-02-01/","tags":null,"title":"Release 2022.02"},{"categories":null,"contents":"Crunch web application Fixed an error that disabled the ability for Confirmit-integrated datasets to be updated. API endpoints and API reference Added a new field to the View Filter Details endpoint (definition), which is a CrunchCL expression that represents the filter at the time it was created or last modified. SDKs (rCrunch, pyCrunch, and sCrunch) Made further updates and improvements to the latest versions of pyCrunch (v0.5.1) and sCrunch (v0.10.0). Crunch Automation Added a new optional argument (INCLUDE MISSING) to the CREATE MULTIPLE SELECTION command, which allows you to mark all-missing rows as valid. Fixed an error that prevented certain datasets to execute scripts. Help desk and website improvements Updated the Stacking a dataset using R article with new scripting information. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2022-01-10/","tags":null,"title":"Release 2022.01"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred with Confirmit integrations that sometimes caused imports to fail for some datasets with certain configurations of numeric variables. Added the ability to omit categories from PowerPoint graph exports in situations where a base size is less than the configured minimum one, when the dataset has been configured for the ‘Suppress’ setting. SDKs (rCrunch, pyCrunch, and sCrunch) Released new versions of [pyCrunch](https://pypi.org/project/pycrunch/) (v0.5.1) and [sCrunch](https://pypi.org/project/scrunch/) (v0.10.0), which include various features and performance improvements. Crunch Automation Added the DISPLAY CLEAR command, which allows you to clear the subtotals created by the DISPLAY subtotals command (removes all subtotals from a list of variables). Updated the list of expression functions you can use with Crunch Automation commands. Help desk and website improvements Created a new help article about how to use and manage API Keys. Created a new help article about how to graph subtotals and differences. Updated the Tables, Graphs, and Maps article with updated examples about the various display options that are available in the Crunch web app. Updated the Confirmit integration article, which now provides detailed information on how to import our survey data from Confirmit into Crunch. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-12-20/","tags":null,"title":"Release 2021.42"},{"categories":null,"contents":"API endpoints and API reference Added a new query parameter (aliases) to the List variable definitions API endpoint, which provides faster access to the variable definitions, especially if the dataset includes a large number of variables. Crunch Automation Added the ability to specify a NUMERIC VALUE to the following commands: CREATE CATEGORICAL CASE command CREATE CATEGORICAL RECODE command CREATE ARRAY CASE command REPLACE ARRAY CASE command REPLACE CATEGORICAL CASE command REPLACE CATEGORICAL RECODE command CREATE CATEGORICAL CUT command Added the ability to modify only a subset of an array\u0026rsquo;s subvariables by using the SUBVARIABLES option in the CHANGE LABELS command. Help desk and website improvements Updated the downloadable binary files to Version 2.2.4 in The Quick Editor: a generator for Crunch Automation, which includes enhancements and bug fixes. Updated the Application password requirements article with more descriptive information on how to set a Crunch password. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-12-06/","tags":null,"title":"Release 2021.41"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred when sorting on the Unweighted \u0026lsquo;N\u0026rsquo; column of an analysis and then saving it to the deck sometimes did not work properly. API endpoints and API reference Enhanced the documentation for creating, updating, and deleting API keys. SDKs (rCrunch, pyCrunch, and sCrunch) Added the following enhancements to the Crunch package for R: make and edit markdown slides, including images. create slides with more than one filter. create subtotals on multiple response variables. export tab books to a CSV format, for use in BI software such as Tableau. Crunch Automation Added additional information on how to use the ALIASES option in the CREATE CATEGORICAL ARRAY command. Help desk and website improvements Updated the downloadable binary files to Version 2.2.3 in The Quick Editor: a generator for Crunch Automation, which includes enhancements and bug fixes. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-11-15/","tags":null,"title":"Release 2021.40"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/for-insights-teams/origanize/","tags":null,"title":"Find insights faster"},{"categories":null,"contents":"Crunch.io’s automated import process preps your data for analysis so you can start analyzing as soon as your survey is out of field, or even sooner.\nData cleaning Clear naming \u0026amp; labels Questions organized into logical folders New tracker waves appends ","permalink":"//crunch-io.github.io/crunchy/newsite/for-insights-teams/find-insigths-right-away/","tags":null,"title":"Find insights right away"},{"categories":null,"contents":"Stop scavenging for SPSS files and spreadsheets. Easily collaborate with your whole team. Instantly search across all your projects\u0026hellip;\n","permalink":"//crunch-io.github.io/crunchy/newsite/for-insights-teams/self-service/","tags":null,"title":"This is as easy as it "},{"categories":null,"contents":"Instantly analyze all your respondent-level data from multiple vendors online, in one place, available 24/7. Automate the creation of deliverables, including fully-editable PowerPoints.\n","permalink":"//crunch-io.github.io/crunchy/newsite/for-insights-teams/webinar/","tags":null,"title":"webinar"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred when anchoring a subtotal from the last category instead of the bottom position, which sometimes resulted in incorrect behavior in the web application. Fixed an issue in Confirmit integrations that lead to some missing loop variables. Fixed an issue that occurred when \u0026lsquo;Set comparison\u0026rsquo; was selected for one variable in a multitable definition that includes multiple variables: it instead shaded a column across all of the variables but only performed the \u0026lsquo;Set comparison\u0026rsquo; for the first variable even if it was not the one targeted. Added the ability to export tabulated data, which allows you to export tables (tab books) into a specialized output format (such as Tableau, Google Data Studio, or PowerBI). See the announcement for more details. Crunch Automation Added the ability to set subtotals and differences properties to be displayed for categorical variables in the DISPLAY command. Help desk and website improvements Updated the downloadable binary files to Version 2.2.1 in The Quick Editor: a generator for Crunch Automation, which includes the following enhancements (as well as a few bug fixes): Added the ability to create subtotals via the sub-variable tab Added the ability to create share-of-total via the sub-variable tab Dynamically remove embedded line feeds from variable titles and descriptions Dynamically remove embedded line feeds from user inputs Updated category subtotal commands to Crunch Automation\u0026rsquo;s latest syntax Added a checkbox to stop importing hidden variables in order to support large tracking datasets ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-11-01/","tags":null,"title":"Release 2021.39"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred when sorting a bivariate table where the column variable had an intermediate category with N=0 followed by at least one category with N\u0026gt;0. Added a visual footnote to support the following features in the Crunch UI: within the export output — the footnote reflects when standard errors of test statistics have been adjusted for overlap between columns of a multiple response variable. within in tables \u0026amp; graphs and multitable views — the footnote reflects when standard errors of test statistics have been adjusted for overlap between columns of a multiple response variable. Added an Export tab book option that allows you to write the entire tab book to a single table (in early access). Crunch Automation Added RESET FOLDERS, which is a schema command that allows you to reset all variables in a dataset to a given root folder (ROOT/ SECURE / HIDDEN ). Added the ability to use the ALIASES argument in the CREATE MULTIPLE DICHOTOMY command, which allows you to indicate the aliases that each of the subvariables will have in the new dichotomy. Help desk and website improvements Updated the How to upload a PowerPoint template article to include more information on how to work with Slide Masters when creating a PowerPoint template. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-10-18/","tags":null,"title":"Release 2021.38"},{"categories":null,"contents":"Crunch web application Made the following fixes: KPIs are now correctly set to a table cell when viewing a multiple response analysis. Category hiding and color assignment are now correctly reflected in a dashboard tile. Category labels that have been renamed using \u0026lsquo;Edit tile\u0026rsquo; now show the correct label (vs. the original label) when sorting in a dashboard tile. A properly formatted table now appears when switching between \u0026lsquo;Multitable\u0026rsquo; and \u0026lsquo;Tables \u0026amp; graphs\u0026rsquo; views. Dashboard tiles that have a date/time variable in the analysis now load properly when the application of the group filters yielded \u0026lsquo;N=0\u0026rsquo; for that tile. Added the ability for the user to change the visualization type to a bar graph within the \u0026lsquo;Edit\u0026rsquo; panel (in situations when the user selects the \u0026lsquo;Show means\u0026rsquo; option for a univariate categorical variable in a saved table analysis). Crunch Automation Fixed a bug that occurred when using certain filers in the OVERWRITE VALUES command. Added the ability when using the CREATE CUT command to allow numeric arrays, which then create categorical arrays as the output. Help desk and website improvements Added new information to the Adding your Branding to Crunch about how to customize the \u0026lsquo;Report an Issue link\u0026rsquo; to allow users to ask questions to someone on your team who is most familiar with your data. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-10-04/","tags":null,"title":"Release 2021.37"},{"categories":null,"contents":"Crunch web application Made the following color assignment corrections: in deck analyses that include a multiple response variable with subtotals. in a categorical variable that has subtotals/differences defined for it. Added an \u0026lsquo;Insufficient Data\u0026rsquo; message on a tile, which appears when dashboard tiles have no results due to group filtering. Added the ability to drag tiles to a new location on the current dashboard tab by using only one drag-and-drop action. Added bar graph support in situations where the \u0026lsquo;Show means\u0026rsquo; option has been selected for a univariate categorical variable in the \u0026lsquo;Tables \u0026amp; graphs\u0026rsquo; view. Fixed an issue in which the view within \u0026lsquo;Edit preview\u0026rsquo; was not responding to the change after sorting the direction for a sorted univariate analysis. Crunch Automation Added support to the DROP VARIABLES command to allow a larger number of variables. Help desk and website improvements Created a new article about Numeric Arrays, which is a new variable type that enables you to work efficiently with groups of numeric variables that are related. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-09-27/","tags":null,"title":"Release 2021.36"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred when a tab on a dashboard tile was not allowing the user to change the selection. Improved the behavior in the \u0026lsquo;Dashboards Group\u0026rsquo; panel in situations when one or more of the filter variables have been deleted from the dataset. Fixed an issue that occurred when selecting a category in the \u0026lsquo;Dashboard Group\u0026rsquo; panel that sometimes did not reflect in the rendering of the dashboard. Fixed a bug in Confirmit integrations when response data was smaller than expected. Corrected an issue that occurred when a dashboard tile no longer reflects the column selected for hypothesis testing comparisons after changing the selection in the tab pulldown within that tile. Added the ability to remove a stale reference in dashboard \u0026lsquo;groups\u0026rsquo; when a variable has been deleted from the dataset. Added the ability to download a Crunch Automaton script (a series of organize commands) reflecting the current variable folder structure from the \u0026lsquo;Edit variables\u0026rsquo; interface. API endpoints and API reference Updated an endpoint that allows users to generate a Crunch Automation script containing ORGANIZE commands that are necessary in order to recreate the current dataset\u0026rsquo;s variables organization. Crunch Automation Fixed a bug that occurred when parsing Crunch Automation comparisons to NULL. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-09-20/","tags":null,"title":"Release 2021.35"},{"categories":null,"contents":"Crunch web application Fixed an issue that occurred when a filter is created by dragging a variable from \u0026ldquo;My variables\u0026rdquo; to the filter zone so that it now works correctly. Fixed an issue that occurred when an unexpected format for the filter definition sometimes causes a dashboard tile to not load properly. API endpoints and API reference Updated the folder endpoint to obtain the variable organization script so that it now returns a shoji:view as default, but will return a plain text response if requested with the Accept HTTP header text/plain. Added documentation about a new API endpoint that allows you to do a dependency check for proposed changes to dataset view definitions. Crunch Automation Fixed two bugs for the RENAME command when working with arrays and their subvariables within the same script. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-09-13/","tags":null,"title":"Release 2021.34"},{"categories":null,"contents":"Crunch web application Updated the Crunch UI so that deck slides and dashboard tiles are correctly weighted with the updated variable when a weight variable is deleted and re-created with the same alias. Improved Qualtrics integrations, which now support embedded data. Updated how \u0026lsquo;Unweighted N / All\u0026rsquo; column values appear so that they now correctly display in multitable view when the row variable is a categorical array. Added the ability to allow a dataset editor to reorder the slides of a deck that are owned by another user. Fixed an issue in which an exported tab book yields an incorrectly arranged output if the multitable includes hidden elements. Improved support for hypothesis-testing shading when empty rows/columns are not displayed and a column is selected for comparison. Enhanced filter usage by allowing direct exports of dataset row-level data in situations that involve \u0026ldquo;at least N of\u0026rdquo; expressions. Help desk and website improvements Updated the Scorecards: your flexible summary grid article with new information on how to create a scorecard. Update the Time series analysis with time plots article with additional information on how to work with Date/Time variables. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-09-06/","tags":null,"title":"Release 2021.33"},{"categories":null,"contents":"Crunch web application Updated data exports so that hidden multiple response subtotals are no longer included. Improved the \u0026lsquo;Select Categories\u0026rsquo; panel for a time plot so that it now displays multiple response subtotals in the correct order. Help desk and website improvements Created a new article that describes how to use a CSV + JSON metadata document to automate the setup of a dataset. Organized the Sharing Data section to better describe how various types of users can easily share a dataset. Updated the How to import from Decipher into Crunch article with new information about Decipher permissions and using the Crunch API. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-08-30/","tags":null,"title":"Release 2021.32"},{"categories":null,"contents":"Crunch web application Fixed an issue in which confidence bands were not displaying on time plots. Improved the positioning of horizontal axis labels when exporting PowerPoint graphs. Crunch Automation Created DROP VARIABLES, which is a new Crunch Automation schema command that allows you to drop multiple variables in a dataset. Fixed the DISPLAY command so that it no longer overwrites other variable display attributes. Help desk and website improvements Added updated information about how to use Crunch Automation schema commands when writing a script. Updated the Time series analysis with time plots article, which describes how to use the new time plot visualizations. These are now enabled for date-time variables for Early Access users. Updated the following articles with new information about the various tables, graphs, and charts that are now available to Crunch users: Customizing a Table or Graph What chart types are available? Cool tables and graphs Creating Tables, Graphs, and Maps ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-08-23/","tags":null,"title":"Release 2021.31"},{"categories":null,"contents":"Crunch web application Changed how the N values are listed at the top of the marker bar in a time plot so that they always reflect the unweighted N value. Fixed an issue that occurred when time plots cannot be created in certain circumstances for a categorical variable with only one category. Added PowerPoint support so that \u0026lsquo;Min\u0026rsquo; and \u0026lsquo;Max\u0026rsquo; Y-axis settings are now reflected in graph exports. Updated population estimates for \u0026ldquo;at least N of\u0026rdquo; filters so that they are now consistent when \u0026ldquo;complete cases\u0026rdquo; is turned off for the filter. API Endpoints and API Reference Added a /projects path, which changes project settings and allows you to move datasets and sub-projects into it. Removed the /datasets/{id}/folders/trash/ endpoint. Crunch Automation Unmaterialize materialized commands — went back to creating derived variables in automation CREATE VARIABLE commands. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-08-16/","tags":null,"title":"Release 2021.30"},{"categories":null,"contents":"Crunch web application Fixed an issue when hypothesis-testing shading was not being reflected in the \u0026lsquo;Mean\u0026rsquo; row when a column was selected for comparison. Added support for ascending/descending sorting of the labels column. Fixed an Excel export issue that occurred when creating filters through the \u0026lsquo;Filter by dropzone\u0026rsquo; that then resulted as an \u0026ldquo;on-the-fly\u0026rdquo; expression instead of the actual filter description. Fixed an issue that occurred when row labels could sometimes disappear when horizontal scrolling through a large bivariate analysis. Help desk and website improvements Updated the Stacking a dataset using R article with new information. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-08-09/","tags":null,"title":"Release 2021.29"},{"categories":null,"contents":"Crunch web application Improved Confirmit integrations by streamlining the types of files they can accept. Fixed issue in which \u0026lsquo;sort by value\u0026rsquo; does not work properly if the display controller is set to display only subtotals. Crunch Automation Added the REPLACE MULTIPLE DICHOTOMY FROM command, which allows you to convert in place a categorical array into a multiple response variable. See documentation for more information. Fixed an issue that occurred when combining CREATE CONVERT and UNSET NUMERIC VALUE commands in the same script for the same variable. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-08-02/","tags":null,"title":"Release 2021.28"},{"categories":null,"contents":"Crunch web application Added functionality to prepend \u0026lsquo;Loop Names\u0026rsquo; to loop variables, which makes them work better in the UI and prevents clashes between variables. Fixed a bug in the Confirmit importer, which caused the variable name to be the same as the alias. Fixed a bug that caused integrated datasets to not have a working update dropdown. Made the following fixes and improvements: Negative differences now display properly if the checkbox \u0026lsquo;Empty rows/columns\u0026rsquo; in the display controller is deselected. Displayed categories now correctly match the selected list of categories in dashboard time plots. Pairwise comparisons now appear correctly for an analysis that has a multiple response variable in the column position (in cases where the multiple response variable included at least one subtotal). The UI now works properly when \u0026lsquo;Missing\u0026rsquo; categories are positioned anywhere outside of the bottom of the category list. The anchoring of subtotals at the bottom of the list of categories now correctly renders the relevant variable summary card. Tooltips above table cells now display the correct information. The properties panel for a categorical array now displays correct information when one or more subtotals or differences were defined on the categories. The \u0026lsquo;Set comparison\u0026rsquo; hypothesis testing option is now available in cases where subvariables are in the column position. Help desk and website improvements Created new SPSS datafile specifications article. Created new Cleaning/relabeling categories article. Added new info to the Dataset Level User Access article. Updated the Definitive Guide to Importing and Preparing Data article. Updated the Setting category numeric values \u0026amp; dates with new information. Added Crunch Automation commands to the Category Differences article. Added more info and links to the Multidimensional Analysis article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-07-26/","tags":null,"title":"Release 2021.27"},{"categories":null,"contents":"Crunch web application Made the following fixes and improvements: Exports of scorecards now work properly. Variables can now be added to dashboard groups. A graph size now updates correctly when empty rows/columns are deselected. A multitable now loads properly when its definition includes a collection of variables that begins with a date/time variable. Display results no longer show \u0026rsquo;no data\u0026rsquo; values under certain conditions. The \u0026lsquo;Combine\u0026rsquo; categories panel no longer incorrectly includes subtotals and differences among the list of categories to combine, as well as no longer showing incorrect counts if subtotals or differences are defined in the variable. Values now properly display on bar graphs when using the \u0026lsquo;Show values\u0026rsquo; setting. Variable cards from a saved deck analysis now open and render properly. Added support for third-party integrations when deleting a variable from a datasource so that it also removes it from the Crunch dataset if no other variables depend on the deleted variable. Updated the \u0026lsquo;Set Comparison\u0026rsquo; option so that it no longer displays if the measure is set to row percent. Removed left and right browsing arrows on \u0026lsquo;Tables \u0026amp; Graphs\u0026rsquo; and \u0026lsquo;Multitable\u0026rsquo; views. Added the ability to automatically sort graph categories. Enabled vertical and horizontal bar graphs as visualization options for means analyses. Improved search performance when filtering a search by folder ID. Enabled scorecards to display multiple response subtotals. Crunch Automation Fixed an issue in the REPLACE commands when using function expansions. Improved the DISPLAY command by adding the ability to add nets to multiple response variables. Help desk and website improvements Added comprehensive survey metadata mapping information to the following articles: Confirmit — updated Decipher — updated SurveyMonkey — New! Updated the Tables and charts with drag-and-drop article with new information about how to sort tables and graphs. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-07-16/","tags":null,"title":"Release 2021.25-26"},{"categories":null,"contents":"Crunch web application Fixed an issue that prevented the \u0026ldquo;Set comparison\u0026rdquo; button for hypothesis testing of tables from working properly when the option to show only categories is selected. Added the ability to include subtotals to multiple response variables (in early access for editors). Added support for deck export of numeric array variable cards. Made the following fixes: a multitable consisting of categorical variables now loads properly. a multitable with a multiple response column variable correctly displays means of numeric row variables. differences now display in the \u0026lsquo;Edit slide/title\u0026rsquo; preview for categorical arrays. hiding column categories now works in the \u0026lsquo;Edit Categories\u0026rsquo; tab. Added more support for both Confirmit and Decipher integrations (see help desk articles below for more information). Removed a meaningless value in the intersection between the weighted/unweighted \u0026lsquo;rows and mean\u0026rsquo; column of exports. Fixed multiple issues in the dashboard \u0026lsquo;groups\u0026rsquo; panel that prevented removing or adding them. Fixed rare behavior that causes some export settings to fail. Crunch Automation Made more speed improvements to the UNSET NUMERIC VALUE command when using numerous variables. Added support to the CHANGE command (LABELS) so that it can use functions alongside the explicit list of labels. Help desk and website improvements Updated the Category Subtotals article with new information about how to add subtotals to multiple response variables. Created a new article that describes how metadata maps from Confirmit into Crunch. Added new information about how Decipher logic elements (\u0026ldquo;Loops\u0026rdquo;) map into Crunch. Updated the feature matrix in the Crunch importers overview article. Updated the Nets on a multiple response variable article with new information. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-07-02/","tags":null,"title":"Release 2021.23-24"},{"categories":null,"contents":"Crunch web application Updated the Crunch app so that numeric arrays can be saved to a deck from the \u0026lsquo;Variable Summaries\u0026rsquo; view. Added options in the \u0026lsquo;Edit Slide/Tile\u0026rsquo; panel to allow you to hide the x-axis title and description for a graph. Fixed an issue when numeric arrays sometimes don\u0026rsquo;t display in the \u0026lsquo;Tables \u0026amp; Graphs\u0026rsquo; view when a weight has been applied. Fixed an issue that sometimes caused the \u0026lsquo;Edit \u0026gt; Export Settings\u0026rsquo; page to not load properly. Removed the extra scrollbar from the numeric array summary graph. Changed the default measure to \u0026ldquo;column percent\u0026rdquo; within the resulting table when removing the variable in a \u0026rsquo;table of means\u0026rsquo; (in tables \u0026amp; graphs mode). Added support in the Edit panel to switch between \u0026lsquo;Mean and Sum\u0026rsquo; measures for a numeric array analysis. Updated export handling to reflect a dash in the intersection of the \u0026lsquo;Unweighted/Weighted N\u0026rsquo; row(s) and the \u0026lsquo;Mean\u0026rsquo; column. Increased the length of the maximum subvariable name, which is displayed in the numeric array summary axis label. Crunch Automation Made several improvements, including how Crunch Automation commands create multiple kinds of array variables as well as fixed a bug that occurred when parsing automation expressions. Updated the CREATE CONVERT command to allow you to convert categorical array variables into numeric arrays (converts them to NUMERIC). Help desk and website improvements Added clarifying information to both the Subtotals (\u0026rsquo;nets\u0026rsquo;) on a categorical variable or array and How to add subtotals to a variable articles. Updated the How to find a dataset with new information. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-06-18/","tags":null,"title":"Release 2021.22"},{"categories":null,"contents":"Crunch web application Added support for custom variables in SurveyMonkey integrations. Fixed an issue that prevented users from appending datasets with numeric arrays under certain conditions. Crunch Automation Made speed improvements to scripts that have multiple CREATE commands. Fixed an issue that occurred in CREATE MULTIPLE SELECTION command variables when referring to the generated subvariables in the same script. Help desk and website improvements Added new documentation for Decipher integrations (mappings and overview articles). Updated the Definitive Guide to Tracking article with new information about discrete waves. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-06-11/","tags":null,"title":"Release 2021.21"},{"categories":null,"contents":"Crunch web application Improved backend support to allow creation of custom variables into views. Added a search field to the \u0026lsquo;Select\u0026rsquo; categories panel for time plots, which is displayed when the list of categories exceeds the available space in a view. Fixed a bug for integration updates when a subvariable with a duplicate name would cause a failure. Added the base size (N) to the tooltips above data points within vertical and horizontal bar graphs as well as pie graphs. Fixed an issue that prevented export settings from being opened. Enhanced how calculations are performed for population estimates when a filter is applied: in a scenario where that filter consists of a single wave of a categorical date variable, that wave is now assumed to represent the entire population. Added the base value to the lower right of univariate graphs. Corrected a scenario in which Numeric Array analyses sometimes are not able to be added to a deck. Crunch Automation Made improvements when running scripts that include multiple CREATE FILTER commands, which increases performance. Fixed an issue that occurred when attempting to delete a script that creates variables that are later used in the dataset\u0026rsquo;s exclusion filter: this will now show a conflict. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-06-04/","tags":null,"title":"Release 2021.20"},{"categories":null,"contents":"Crunch web application Fixed various Confirmit integration issues, including how responses appear when they contain newlines. Made the following Decipher integration improvements: Fixed an error when adding subvariables to an array when updating a \u0026lsquo;Decipher Integrated\u0026rsquo; dataset. Addressed issues with numeric arrays when updating datasets that are integrated with Decipher datasets. Improved how subtotals and differences are displayed by adding a boldface font in categorical-array variable summary cards. Added the ability to show weighted and unweighted bases on the tooltip when the measure is set to row percent in \u0026lsquo;Tables \u0026amp; Graphs\u0026rsquo; and \u0026lsquo;Multitable\u0026rsquo; modes. Improved how variable summary cards appear for numeric arrays so that they now correctly reflect filtered values after applying filters. API Endpoints and API Reference Made numerous QA edits to the Crunch API reference docs. Added more information about filter parameters when using the Cross-dataset search endpoint as well as the ability for users to use an \u0026ldquo;all terms\u0026rdquo; parameter to improve search results. Improved performance by 12% when when filtering the root folder on large dataset search queries. Added API documentation that describes how to copy views from one dataset to another. Crunch Automation Made speed improvements to scripts that have multiple DISPLAY, CHANGE, or RENAME commands, especially on datasets with many variables. Help desk and website improvements Updated documentation to describe how to use new functionality when organizing variables. Updated the Category Differences article with new information for broad release. Added new Crunch Automation commands to the Recoding article. Updated and added new info to the Importing and Preparing data definitive guide. Added more \u0026lsquo;import data\u0026rsquo; examples in the Working with Data and Datasets article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-05-28/","tags":null,"title":"Release 2021.19"},{"categories":null,"contents":"Crunch web application Added the ability for organizations to route user questions and problems directly to personnel or online resources (blogs, knowledge base, help center, videos, etc) for any folder via the \u0026ldquo;Report an Issue\u0026rdquo; menu option. For example, you may want to configure a top-level regional folder to route user issues to your own, branded https://help.mycomany.com and configure a lower-level folder to route user questions to a specific email address like usa-questions@mycompany.com. See the help article for more information. Added support that tracks how users are interacting with datasets: upon request, Crunch will send clickstream data to each organization\u0026rsquo;s Google Analytics reports. See the help article for more information. Made the following improvements to the variable organizer when accessed by selecting \u0026ldquo;Edit Variables\u0026rdquo; from dataset properties: Dragging and dropping are smoother, and a dropzone now appears with a dashed border where the dragged variables are moved, making it easier to see. When clicking or dragging to \u0026ldquo;Move\u0026hellip;\u0026rdquo; a \u0026lsquo;Move to\u0026hellip;\u0026rsquo; dialog appears, which allows you to more easily navigate your folder hierarchy and even create new folders as part of the moving process. Improved how \u0026ldquo;Export this table\u0026rdquo; performs so that it correctly exports the displayed measure and decimal place setting in multitable view. Improved how the \u0026ldquo;Above table\u0026rdquo; and \u0026ldquo;Below table\u0026rdquo; bases options are properly reflected in the tab book export for crosstabs. Crunch Automation Added the MINUS modifier info to the DISPLAY command. See the help article for more information and examples. Made speed improvements when working with large scripts or datasets in the CHANGE, CREATE MULTIPLE SELECTION, and ORGANIZE commands. Fixed a bug in the SET DATES command when working on derived variables. Added support for the CHANGE LABELS command to allow you to change subvariable labels for numeric arrays. Added the ability to delete a script even if multitables or filters depend on any of the variables created by the script. Help desk and website improvements Added documentation that describes how to use the \u0026ldquo;Report an Issue\u0026rdquo; feature within the Crunch web app. Made improvements to the Target Population help desk article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-05-21/","tags":null,"title":"Release 2021.18"},{"categories":null,"contents":"Crunch web application Improved the time marker bar so that when you click the diamond symbol it now expands to display the margin of error when confidence bands are enabled in time plots. Improved the export settings functionality (for both deck and tab book exports), so that it now features a \u0026lsquo;bases\u0026rsquo; options for numeric measures. Added performance improvements and fixed various bugs to the export settings crosstab sections (tab book and edit slide). Fixed how decks appear, which are now alphabetically sorted. Improved how long format exports are handled when \u0026ldquo;All variables on one sheet\u0026rdquo; is selected so that legends are now separately included for both crosstabs and numeric exports where applicable. Enhanced how calculations are performed when population estimates in a crosstab include a categorical date variable – each wave is now assumed to represent the entire population. API Endpoints and API Reference Updated the API email policy so that users with appropriate permissions may still change a user\u0026rsquo;s email through the /api/user/\u0026lt;userID\u0026gt;/change_email/ endpoint. SDKs (rCrunch, pyCrunch, and sCrunch) Fixed a bug that caused some sCrunch library commands to fail when fetching data from the /tables/ endpoint. Crunch Automation Fixed a bug in the Crunch Automation script runner that caused certain Unicode strings in categories to be incorrectly matched. Help desk and website improvements Created a new section and overview article for integrations, in order to help users easily find information on how to import data from popular data-collection platforms into Crunch. We\u0026rsquo;ll be adding new information on all of the platforms in the coming weeks. Added new information about how to use web app and Crunch Automation for nets on a multiple response variable. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-05-14/","tags":null,"title":"Release 2021.17"},{"categories":null,"contents":"Crunch web application Added the ability to show the title and description for a column variable beneath the graph in edit preview and dashboards. Improved how datasets on a dashboard appear on a landing page so that the member\u0026rsquo;s panel no longer switches to a dashboard when closing it. Fixed a bug that improves how formulas for subtotals and differences are saved. Made numerous improvements to the Confirmit importer, including: Cleaned up the formatting of both folders, variable names, and descriptions. Some variables were being missed on import and are now being imported properly. Added proper support for numeric array integrations. Added more language support in Confirmit integrations. Re-enabled the hypothesis testing \u0026ldquo;set\u0026rdquo; comparison option when working with a categorical array that has subvariables within the columns and categories within the rows. Crunch Automation Improved how Crunch Automation handles scripts that have numerous commands (\u0026gt; than 1MB) or on a dataset with 1000s of variables. The validation step now returns a 202 asynchronous progress response. Developer documentation Added a new article about Insertions. You can read more about definition attributes in the Variable Definitions article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-05-07/","tags":null,"title":"Release 2021.16"},{"categories":null,"contents":"Crunch web application Improved the web app by displaying a descriptive error when an integration update fails. Improved the user experience when deleting a deck. Moved the N label in graphs to the bottom right and increased the font size. API Endpoints and API Reference Updated the API so that you can now add a suffix to your \u0026ldquo;join\u0026rdquo; API call, which allows the source variables to include a suffix to avoid conflicts. Crunch Automation Updated the Variable Editor (v2.1.0) with the following improvements: Added support for turning numeric variables into numeric arrays via the array builder. Added checks to verify user-entered variable titles are unique. Fixed bug so that organizing variables into the hidden folder doesn\u0026rsquo;t create a new personal folder called hidden. Set reasonable default column widths on the variables tab and turned off automatic auto-fit resizing. Fixed bug in automation script by adding backticks to variable aliases that contain spaces. Reset and disabled the source variable folder, title, description, and notes fields when using the array builder. Help desk and website improvements Added Envelope Specification documentation to provide more information about Shoji, a JSON-based data interchange format. Added Integrations: Continuous updates to your dataset via the direct importers documentation to show how to enable users to add new cases that have been directly imported, without having to go through an append process. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-04-30/","tags":null,"title":"Release 2021.15"},{"categories":null,"contents":"Crunch web application Released the time plot feature to wide access, so that \u0026rsquo;time periods\u0026rsquo; with no data at the beginning or end of a time range are now omitted from the horizontal axis — this is now dynamic as you add or remove categories. See the announcement and help documentation for more information. Fixed a bug that prevented datasets that are shared with users from appearing in search results. Improved how N values display on a time plot after selecting a categorical date entry on a group filter (in early access). Fixed an issue where hypothesis testing colors were displayed incorrectly after showing/hiding rows in edit mode. Crunch Automation Added ALTER ARRAY ADD EMPTY SUBVARIABLE command, which allows you to modify a non-derived array by adding new empty subvariables. See documentation for more information. Updated the CREATE MULTIPLE DICHOTOMY FROM CONDITIONS command with improved instructions and use cases. It\u0026rsquo;s now possible to use a single expression to define the base either by indicating the VALID or MISSING rows. Help desk and website improvements Added more functions that can be used with Crunch Automation scripts (KEEP_AFTER, KEEP_BEFORE, and KEEP_BETWEEN). See documentation for more information. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-04-23/","tags":null,"title":"Release 2021.14"},{"categories":null,"contents":"Crunch web application Fixed a bug on the Decipher importer to instead show a full list when importing. Fixed a bug so that dashboards appear properly when switching tabs. Fixed a bug so that dropdown menus for individual dashboard tiles work properly. Improved PowerPoint graph exports to correctly show expected colors for negative values. Enhanced how standard deviations appear in tab book exports so that they correctly show the row variable as a numeric measure. Improved how time plots reposition in the far-right location when the horizontal axis range changes (in early access). Fixed a bug that causes new connections to Qualtrics to fail. Improved how the time marker for a time plot appears when it moves to the left of its docked position — it now retains that position when also selecting a filter, applying a weight, or enabling/disabling confidence bands (in early access). Improved horizontal and vertical bar graphs so that negative values now display. Fixed dashboard URLs that specify filters to work properly when another filter is added. Help desk and website improvements Made improvements about aliases and variables in the Crunch Automation basics article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-04-16/","tags":null,"title":"Release 2021.13"},{"categories":null,"contents":"Crunch web application Refactored the dataset importer and integrations in order to provide a more consistent and streamlined user experience. Fixed an issue with the importer that caused integrations to fail to render when there are too many surveys. Fixed an issue with variable sources and importer not working properly for Decipher integrations. Made various tweaks to Permissions Management and Dataset Importer panel UI to cause progressively loaded lists to render more consistently. Updated the design of the section headers in the Export Settings panels to improve usability. Improved the category selector for a time plot so that users can now select empty categories to be displayed on the plot (in early access). Fixed an issue in which switching tabs was not working properly for some dashboards. API Endpoints and API Reference Fixed a bug in the search aggregation endpoint that caused an error when the user provides an empty query string. SDKs (rCrunch, pyCrunch, and sCrunch) Fixed an sCrunch bug that occurred when using Backfill functionality. Crunch Automation Added new ADD CATEGORIES command, which allows you to add extra empty categories to categorical variables. See documentation for more information. Back-end/CrunchDB Improved performance speed when accessing slides in a deck. Help desk and website improvements Created new help desk article that describes the new Category Differences feature (in early access). ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-04-09/","tags":null,"title":"Release 2021.12"},{"categories":null,"contents":"Crunch web application Updated how descriptions are handled, which now allows them to extend to the entire width beneath a graph as needed. Changed the default to \u0026lsquo;aspect ratio\u0026rsquo; when rendering time plots in \u0026ldquo;Tables and graphs\u0026rdquo; mode (in early access). Improved search results by including: whether or not a dataset is a view, and for variable results, the type is now included. Fixed a bug so that now weighted numeric-array analyses are successful. Improved how stacked vertical bar graphs appear by allocating additional space for vertical axis labels so that they fully display. Improved the time plot feature so that \u0026rsquo;time periods\u0026rsquo; with no data at the beginning or end of a time range are now omitted from the horizontal axis — this is now dynamic as you add or remove categories (in early access). Crunch Automation Added the new argument dryrun to the Crunch Automation script endpoint, which prevents the script from executing and only performs validations. Added the new argument ELSE INTO NULL to the CREATE CONVERT command, which allows you to indicate that any extra value should go to the No Data category. See the documentation for an example. Help desk and website improvements Updated the Crunch Automation example scripts article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-04-02/","tags":null,"title":"Release 2021.11"},{"categories":null,"contents":"Crunch web application Added feature to show values on a time plot when the user has Display \u0026gt; Values selected in the extended panel of the Display Controller (in early access). Updated horizontal bar graphs so that labels on an axis are no longer truncated. Added hint text to alert users who have any profile analyses saved to a deck, since these analyses cannot be exported via the \u0026ldquo;Export from deck\u0026rdquo; panel. Added a \u0026ldquo;Fit to tile\u0026rdquo; option, which is available in the Edit panel for saved analyses that have the \u0026rsquo;time plot\u0026rsquo; visualization type (in early access). API Endpoints and API Reference Changed several user-level permissions to enable better sharing and editing of datasets. Fixed a bug that occurred when searching for personal variables. Improved the dataset scripts endpoint by including the script ID on the shoji tuple. Enhanced the POST /api/account/users/ endpoint to enable granting users the ability to edit datasets separately from creating datasets. SDKs (rCrunch, pyCrunch, and sCrunch) Added the ability to perform backfill replacements without a filter in sCrunch (full column). Added Python 3.4 support to sCrunch. Released sCrunch version 0.9.3. Crunch Automation Added the ability to use reference functions to act on a variable number of input variables for the RENAME command. See the documentation for more information. Improved support for Unicode characters in Crunch Automation strings. Help desk and website improvements Added more descriptive information on how to use the CREATE MULTIPLE DICHOTOMY WITH RECODE command. Updated the Crunch Automation basics article with better examples. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-03-26/","tags":null,"title":"Release 2021.10"},{"categories":null,"contents":"Crunch web application Reorganized the options on the Export settings panels for both slide exports and tab book exports for improved usability. Please refer to the help page for more information. Added a legend entry when exporting a single-measure numeric value to reflect what measure is being exported. Fixed the horizontal axis for time plots so that they no longer show empty time periods that might be present at either the beginning or the end of the categorical dates (in early access). Improved aspect ratio handling for time plots depicted in Tables and Graphs mode (in early access). Added responsiveness to changes in the decimal places setting for graphs in which the column variable is a numeric value. SDKs (rCrunch, pyCrunch, and sCrunch) Enabled sCrunch datasets to run Crunch Automation commands, via dataset.scripts.execute(\u0026lt;script body\u0026gt;). Crunch Automation Added EACH MISSING functionality to the OVERWRITE VALUES command. See documentation for more information. Updated the docs to include using an optional , (comma) between statements for both the CREATE CATEGORICAL CASE and CREATE NUMERIC CASE commands. Updated the RENAME command with improved syntax and examples (logical expressions in Crunch automation now support both \u0026lt; and \u0026gt; with datetime strings. Added STARTSWITH() and ENDSWITH() functionality. See the documentation for more information. Developer documentation Added a new function on automation expressions (add_valid), which returns a numeric column with the sum of the input numeric variables; returns no data when all the columns are missing. See the documentation for more information. Help desk and website improvements Cleaned up and organized the Orientation Videos. Added new content and better examples to the Definitive Guide to Tracking article. Cleaned up the How to Use the Crunch API article to help enable faster onboarding. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-03-19/","tags":null,"title":"Release 2021.9"},{"categories":null,"contents":"Crunch web application Fixed case where missing columns in the response data can fail when importing a Qualtrics dataset. Adjusted y-axis min value so that it now be set to zero for the case of time plots. Fixed the extended panel when it opens from the display controller so that it no longer shrinks the displayed table or graph. Corrected how axis and tooltip labeling appears when displaying population estimates along the vertical axis of a time plot. API Endpoints and API Reference Added improved code sample to Cross-dataset search endpoint. Added improved code sample and a 200 response example to Aggregate search results by folder endpoint. SDKs (rCrunch, pyCrunch, and sCrunch) Added the function makeDimTransform() to the R package, which helps set transforms on slide analyses, such as color palettes, hiding elements, and setting the order. Also added the ability to use palettes() and defaultPalette() functions in the R package to access the palettes associated with a dataset. Crunch Automation MISSING functionality added to the CREATE MULTIPLE DICHOTOMY FROM CONDITIONS command. SELECTED and LABELS arguments added to the CREATE MULTIPLE SELECTION command. Help desk and website improvements Created a new help desk article for How to upload a PowerPoint template. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-03-12/","tags":null,"title":"Release 2021.8"},{"categories":null,"contents":"Crunch web application Fixed bug that prevented users from editing categories that are associated with an existing formula. Improved the ability to add scoring for Qualtrics variables in the Crunch app. Fixed bug that prevented you from exporting datasets in CSV format that explicitly included formulas as their variables. Fixed the ability to show categories more reliably at all screen sizes in the filter builder/categorical variable builder. Improved Confirmit integration to increase performance, fixed some bugs when multiple languages are in play, and reduced the dependency of the system on provided wsdl files. Display controller is now properly displayed as window width is decreased. API Endpoints and API Reference Fixed bug that led to unwanted slowness when processing formulas as part of the /dataset/ID/table endpoint. Fixed bug on /dataset/ID/table endpoint when one of the requested formulas is not applicable for any reason. Crunch Automation Added OVERWRITE VALUES command, which allows you to alter specific cells in categorical and numeric variables without altering the type. See documentation for more information. Added NULL functionality to the SET EXCLUSION command. See documentation for more information. Updated the DISPLAY command, which now allows you to add subtotals substracting other categories via the MINUS modifier. Updated the CREATE ARRAY CASE command, which now allows you to create a new array without indicating a background variable. When using it this way, all the cells in the array that do not match any of the conditions will default to No Data. Help desk and website improvements Added documentation for Time series analysis with time plots, which is currently available in Early Access mode. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-03-05/","tags":null,"title":"Release 2021.7"},{"categories":null,"contents":"Crunch web application Fixed a bug that occurred when dragging a numeric variable onto a time plot as the \u0026lsquo;Cell\u0026rsquo; mean variable. Fixed issues that occurred when using the \u0026lsquo;Manage user\u0026rsquo; invite and edit forms. Changed the behavior of how notifications appear when a deck is closed. Added the ability to drag and drop numeric array variables with all other variables types in the \u0026lsquo;Tables \u0026amp; Graphs\u0026rsquo; view. API Endpoints and API Reference Qualtrics is now supported as an integration type. Searches can now be filtered by folder. Search Aggregation endpoint added to show aggregated counts of search results on a per-dataset basis. When users are created by sharing datasets, projects, or teams, the users are now created under the account associated with the dataset, project, or team. Previously users created this way had their users created under a new single-user account. Crunch Automation Added the subvariables_of function, which allows you to pass in multiple aliases of array functions. See the documentation for more information. Back-end/CrunchDB Made performance improvements when running cube queries. Help desk and websites improvements Added a link on our Crunch website support menu to our development release notes where you can review all the latest product enhancements we have completed and subscribe to future release notes via email if you want to. Made additional edits and updates to the Crunch Automation basics help desk article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-02-26/","tags":null,"title":"Release 2021.6"},{"categories":null,"contents":"Crunch web application Added text input that allows you to write custom messages that are used when inviting users from the Members panel. Fixed an issue where stats don\u0026rsquo;t show up when using a filter builder on datasets where you do not have editing permissions. Made multiple response x 2 (MR x MR) analyses display correct N base value on graphs. Fixed a bug that occurred when inviting editors. Simplified options for dataset sharing. See the announcement for more details. SDKs (rCrunch, pyCrunch, and sCrunch) Added the ability to set filters and weights when creating slides in rCrunch. Crunch Automation New commands\nAdded REPLACE CATEGORICAL ARRAY CASE, which allows you to replace values in an array in place without creating a new variable. See the documentation for more information. Added CREATE MULTIPLE DICHOTOMY FROM CONDITIONS, which allows you to create a new multiple response variable indicating the logic of each column without having to create intermediate logical variables. See the documentation for more information. Improvements\nUpdated the CREATE MULTIPLE DICHOTOMY WITH RECODE command, which now allows multiple categories on the SELECTED option. See the documentation for more information. Updated the CREATE MULTIPLE SELECTION command, which now allows you to specify aliases of the subvariables to be created. If not included, they will default to the alias of the new array suffixed with a positional number. See the documentation for more information. Help desk improvements Updated the quick start guide to better help new visitors find they\u0026rsquo;re starting point in Crunch. Created new article for dataset sharing for Dataset Editors. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-02-19/","tags":null,"title":"Release 2021.5"},{"categories":null,"contents":"Crunch web application Added text input that allows you to write custom messages that are used when inviting users from the Members panel. Fixed an issue where stats don\u0026rsquo;t show up when using a filter builder on datasets where you do not have editing permissions. Made multiple response x 2 (MR x MR) analyses display correct N base value on graphs. Fixed a bug that occurred when inviting editors. Simplified options for dataset sharing. See the announcement for more details. SDKs (rCrunch, pyCrunch, and sCrunch) Added the ability to set filters and weights when creating slides in rCrunch. Crunch Automation New commands\nAdded REPLACE CATEGORICAL ARRAY CASE, which allows you to replace values in an array in place without creating a new variable. See the documentation for more information. Added CREATE MULTIPLE DICHOTOMY FROM CONDITIONS, which allows you to create a new multiple response variable indicating the logic of each column without having to create intermediate logical variables. See the documentation for more information. Improvements\nUpdated the CREATE MULTIPLE DICHOTOMY WITH RECODE command, which now allows multiple categories on the SELECTED option. See the documentation for more information. Updated the CREATE MULTIPLE SELECTION command, which now allows you to specify aliases of the subvariables to be created. If not included, they will default to the alias of the new array suffixed with a positional number. See the documentation for more information. Help desk improvements Updated the quick start guide to better help new visitors find they\u0026rsquo;re starting point in Crunch. Created new article for dataset sharing for Dataset Editors. ","permalink":"//crunch-io.github.io/crunchy/newsite/request-demo/release-notes/2021-02-19/","tags":null,"title":"Release 2021.5"},{"categories":null,"contents":"Crunch web application Changes\nMade the invite button available before the permission list is loaded. Added support for analyses involving a multiple response variable crossed with a numeric array variable. Bugfixes\nFixed timeplot, which was displaying wrong N count. Fixed tooltip value for Margin of Error. Fixed broken scrollbar behavior on filter builder in the categorical variable builder. SDKs (rCrunch, pyCrunch, and sCrunch) Improved sCrunch Backfill code. Crunch Automation Released the CREATE NUMERIC ARRAY command. See article for more information. Help desk improvements Published the following Qualtrics support documentation: How to import from Qualtrics into Crunch How your survey metadata maps from Qualtrics into Crunch ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-02-12/","tags":null,"title":"Release 2021.4"},{"categories":null,"contents":"Crunch web application Changes\nMade the invite button available before the permission list is loaded. Added support for analyses involving a multiple response variable crossed with a numeric array variable. Bugfixes\nFixed timeplot, which was displaying wrong N count. Fixed tooltip value for Margin of Error. Fixed broken scrollbar behavior on filter builder in the categorical variable builder. SDKs (rCrunch, pyCrunch, and sCrunch) Improved sCrunch Backfill code. Crunch Automation Released the CREATE NUMERIC ARRAY command. See article for more information. Help desk improvements Published the following Qualtrics support documentation: How to import from Qualtrics into Crunch How your survey metadata maps from Qualtrics into Crunch ","permalink":"//crunch-io.github.io/crunchy/newsite/request-demo/release-notes/2021-02-12/","tags":null,"title":"Release 2021.4"},{"categories":null,"contents":"Crunch Web Application Bug fixes:\nFixed broken pagination buttons on bar plots Fixed a bug that caused analysis titles and descriptions to display twice in dashboards view and edit tile panel. Made additional improvements to the categorical array builder, including the loading of saved expressions which include parentheses. Other changes:\nRe-labeled column headers in Edit Categories panel. Hid \u0026ldquo;viztype\u0026rdquo; selector for numeric array analyses. API Endpoints and API Reference Improved search performance for folder-sorted search results. More speedups are on the way! Updated the way datasets that are associated with an integration to allow for new categories, subvariables, and changes to the order of categories and subvariables. SDKs (rCrunch, pyCrunch, and sCrunch) Added capability for sCrunch to back-fill data values via CSV file. Website Added Feature Announcements section, which is linked to from the search menu. Added the ability for end-users to subscribe to automatically receive feature announcements via email. Crunch Automation Added new straightline function in automation for use in logical expressions. Product Documentation Published new article The Quick Editor: a generator for Crunch Automation. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-02-05/","tags":null,"title":"Release 2021.3"},{"categories":null,"contents":"Crunch Web Application Bug fixes:\nFixed broken pagination buttons on bar plots Fixed a bug that caused analysis titles and descriptions to display twice in dashboards view and edit tile panel. Made additional improvements to the categorical array builder, including the loading of saved expressions which include parentheses. Other changes:\nRe-labeled column headers in Edit Categories panel. Hid \u0026ldquo;viztype\u0026rdquo; selector for numeric array analyses. API Endpoints and API Reference Improved search performance for folder-sorted search results. More speedups are on the way! Updated the way datasets that are associated with an integration to allow for new categories, subvariables, and changes to the order of categories and subvariables. SDKs (rCrunch, pyCrunch, and sCrunch) Added capability for sCrunch to back-fill data values via CSV file. Website Added Feature Announcements section, which is linked to from the search menu. Added the ability for end-users to subscribe to automatically receive feature announcements via email. Crunch Automation Added new straightline function in automation for use in logical expressions. Product Documentation Published new article The Quick Editor: a generator for Crunch Automation. ","permalink":"//crunch-io.github.io/crunchy/newsite/request-demo/release-notes/2021-02-05/","tags":null,"title":"Release 2021.3"},{"categories":null,"contents":"Crunch app Refactor and performance enhancements to Search, making it easier for you to find things. Fix issue where dates could be shown incorrectly on project browser. We understand how frustrating it is when dates don\u0026rsquo;t appear correctly so we fixed this. Search behavior has now been changed to only search when you press return. Focusing on the control will open any previously obtained results. This will make search queries easier to use. Fix improper results and behavior when using Target Group Base in Profiles mode. We think the new ordering of results will delight you! API Endpoints and API Reference Numerous edits and fixes, including: Added a new endpoint (/scripts/collapse). See docs for more information. Added new documentation for the /datasets/all/ endpoint. See docs for more information. Numerous edits made to the non-endpoint reference docs, including Getting Started articles, Working with Variables, and Variable Definitions. SDKs (rCrunch, pyCrunch, and sCrunch) You can now create numeric array variables in deriveArray() and makeArray(). Crunch Automation Added REPLACE functionality to both the CREATE CATEGORICAL CASE and CREATE CATEGORICAL RECODE commands. Help desk improvements Updated The Definitive Guide to Importing and Preparing Data article to include numerous new examples and uses cases. Numerous additions to Crunch Automation basics article. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-01-29/","tags":null,"title":"Release 2021.2"},{"categories":null,"contents":"Crunch app Refactor and performance enhancements to Search, making it easier for you to find things. Fix issue where dates could be shown incorrectly on project browser. We understand how frustrating it is when dates don\u0026rsquo;t appear correctly so we fixed this. Search behavior has now been changed to only search when you press return. Focusing on the control will open any previously obtained results. This will make search queries easier to use. Fix improper results and behavior when using Target Group Base in Profiles mode. We think the new ordering of results will delight you! API Endpoints and API Reference Numerous edits and fixes, including: Added a new endpoint (/scripts/collapse). See docs for more information. Added new documentation for the /datasets/all/ endpoint. See docs for more information. Numerous edits made to the non-endpoint reference docs, including Getting Started articles, Working with Variables, and Variable Definitions. SDKs (rCrunch, pyCrunch, and sCrunch) You can now create numeric array variables in deriveArray() and makeArray(). Crunch Automation Added REPLACE functionality to both the CREATE CATEGORICAL CASE and CREATE CATEGORICAL RECODE commands. Help desk improvements Updated The Definitive Guide to Importing and Preparing Data article to include numerous new examples and uses cases. Numerous additions to Crunch Automation basics article. ","permalink":"//crunch-io.github.io/crunchy/newsite/request-demo/release-notes/2021-01-29/","tags":null,"title":"Release 2021.2"},{"categories":null,"contents":"Crunch app Provide you with the ability to customize table slide exports. See the help documentation for more information. Improve the \u0026lsquo;Margin of Error / Cell details\u0026rsquo; feature. See the help documentation for more information. Fix to the UI so that it now correctly shows the N range on a categorical array graph. API Endpoints and API Reference API endpoint documentation is live in its new home! See Crunch API Reference for more information. Crunch Automation Added three new commands: CREATE MULTIPLE DICHOTOMY EXTEND, CREATE CATEGORICAL ARRAY CASE, and CREATE CATEGORICAL SCALE. Nearly every Crunch Automation article now has new content, use cases, and example scripts. Check them out if you haven\u0026rsquo;t visited them in awhile! Help desk improvements Numerous CSS fixes to improve the look, feel, and navigation of our help center. ","permalink":"//crunch-io.github.io/crunchy/newsite/release-notes/2021-01-22/","tags":null,"title":"Release 2021.1"},{"categories":null,"contents":"Crunch app Provide you with the ability to customize table slide exports. See the help documentation for more information. Improve the \u0026lsquo;Margin of Error / Cell details\u0026rsquo; feature. See the help documentation for more information. Fix to the UI so that it now correctly shows the N range on a categorical array graph. API Endpoints and API Reference API endpoint documentation is live in its new home! See Crunch API Reference for more information. Crunch Automation Added three new commands: CREATE MULTIPLE DICHOTOMY EXTEND, CREATE CATEGORICAL ARRAY CASE, and CREATE CATEGORICAL SCALE. Nearly every Crunch Automation article now has new content, use cases, and example scripts. Check them out if you haven\u0026rsquo;t visited them in awhile! Help desk improvements Numerous CSS fixes to improve the look, feel, and navigation of our help center. ","permalink":"//crunch-io.github.io/crunchy/newsite/request-demo/release-notes/2021-01-22/","tags":null,"title":"Release 2021.1"},{"categories":null,"contents":"With Crunch.io, you can:\nAnalyze all your data in one place\nBuild crosstabs with a drag-and-drop\nAdd visualizations with one click\nExport editable PowerPoint objects\nGet rid of two-day turnarounds to answer questions\nCreate no-coding dashboards\nAutomate tracker wave updates of reports and dashboards\n","permalink":"//crunch-io.github.io/crunchy/newsite/request-demo/capabilities/","tags":null,"title":"Capabilities"},{"categories":null,"contents":"Design in the GUI. Automate with scripting Drag \u0026amp; drop to design Generate a script Copy the script to a new dataset or view Drag \u0026amp; drop to customize Deliver more dashboards\nThat anyone can easily edit\n","permalink":"//crunch-io.github.io/crunchy/newsite/automation/delivery-dasboard/","tags":null,"title":"Deliver dashboards at scale, fast"},{"categories":null,"contents":"Our mission is to empower teams to collaborate in a secure, online environment with a simple, self-service interface to quickly analyze, visualize, and deliver survey data. Power made simple.\n","permalink":"//crunch-io.github.io/crunchy/newsite/about/our-mission/","tags":null,"title":"Our mission"},{"categories":null,"contents":"While our origins are in the San Francisco Bay Area, we’ve been completely remote since day 1. Most of us are in the Americas, but we range from Australia to the Dominican Republic. We don’t just allow remote working. We embrace it.\n","permalink":"//crunch-io.github.io/crunchy/newsite/about/our-team/","tags":null,"title":"Our team"},{"categories":null,"contents":"We’re a group of survey experts, market researchers, designers, and engineers.\nWe were frustrated by the current tools used to analyze, visualize, and deliver survey data. So, we built Crunch.io to bring easy self-service to survey data analysis.\n","permalink":"//crunch-io.github.io/crunchy/newsite/about/who-we-are/","tags":null,"title":"Who we are"},{"categories":null,"contents":"Your client will:\nFilter, slice, dice and find insights\nExport key tables and visualizations as editable PowerPoint objects, visually-appealing and presentation-ready, all by themselves.\n","permalink":"//crunch-io.github.io/crunchy/newsite/player.vimeo.com/video/773608182","tags":null,"title":"No coding"},{"categories":null,"contents":" Drag and drop to create visually-compelling dashboards. No programming or DP expertise required.\nAdd filters, tables, and graphs in just a few clicks\nResize, reorder, brand, and customize without coding\nBroadly and quickly deploy dashboards with lower costs and fewer resources\nInstantly create multiple dashboards for different audiences from one master dashboard with Crunch Views\n","permalink":"//crunch-io.github.io/crunchy/newsite/dashboards/the-new-normal/","tags":null,"title":"The new normal"},{"categories":null,"contents":"Unlike generic BI tools or Excel, Crunch.io was built to handle the unique characteristics of survey data.\nQuickly apply or build:\nWeighting Stats testing Advanced filters (nesting variables) Multiway or 3D tables Time series graphs Grids \u0026amp; scorecards ","permalink":"//crunch-io.github.io/crunchy/newsite/powerful-survey-analytics/analyze-survey-data-with-ease/","tags":null,"title":"Analyze survey data with ease"},{"categories":null,"contents":" Instantly search across all your datasets Empower anyone to analyze or view findings Quickly and broadly deploy easy-to-build dashboards ","permalink":"//crunch-io.github.io/crunchy/newsite/powerful-survey-analytics/scalability/","tags":null,"title":"Scalability"},{"categories":null,"contents":" Analyze data with little or no training Create tables and charts Filter data Build dashboards in 5 minutes Empower customers and clients to answer their own questions ","permalink":"//crunch-io.github.io/crunchy/newsite/powerful-survey-analytics/simplicity/","tags":null,"title":"Simplicity"},{"categories":null,"contents":"The CrunchDB columnar database is purpose built to handle even your largest survey datasets with millions of respondents and thousands of variables.\n","permalink":"//crunch-io.github.io/crunchy/newsite/powerful-survey-analytics/speed/","tags":null,"title":"Speed"},{"categories":null,"contents":"Unlike generic BI tools, Crunch.io handles:\nWeighting Missingness Stats testing Multiple response questions Advanced analytics ","permalink":"//crunch-io.github.io/crunchy/newsite/powerful-survey-analytics/tool/","tags":null,"title":"Tool"},{"categories":null,"contents":"Last Updated: May 31st, 2020 Protecting your privacy is very important to us at Crunch Cloud Analytics LLC (“Crunch”, “We”, “Us”, or “Our”), and we use our privacy and cookies notice to explain our practices regarding our collection and use of information that we receive through the online analytic services provided at www.crunch.io, and other related websites designated by Crunch (“Services”). This privacy and cookies notice applies to only those websites, services and applications included within our Services where this privacy notice is posted, and does not apply to any third-party websites, services or applications, even if they are accessible through our Services.\nWhat this notice covers Crunch is responsible for collecting and using data in a responsible and safe way, and that starts with clearly telling you how we collect, use and protect your personal data. This privacy and cookies notice sets out:\nWhat kind of personal data we may collect from you; How and why we collect and use your personal data; Why we may share personal data with other organisations; and The rights and choices you have when it comes to your personal data. We’ve tried to make our privacy and cookies notice as easy to read as possible, but if anything in here is unclear, please contact us at info@crunch.io, and we’ll be happy to clear it up.\nPersonal data we collect In this section we explain what personal data we may collect in providing our Services.\nPersonal data collected from you If you are a Crunch customer, you provide us with information that enables us to provide our Services to you – from your day-to-day interactions with our sales and customer support teams, to your use of the Crunch tool. If you are not a Crunch customer, we may respond to any enquiry you may send to us, or otherwise contact you to tell you about our products and services. You can find out more about the data we collect from you in the table below.\nWhen you contact us via the forms on our website, we collect: Personal details such as your name, address, email, telephone number and information about your company. When you create an account with Crunch, we collect: Your account login details, which will be your email address and the password or other identifying tokens that you have chosen. A history of your enquiry and our correspondence with you. When you use our Services, we collect: Statistical data about your use of our Services (“Log Data”), which may include, for example, your IP address, browser type, operating system, and information about how you use our Services. Any information you provide when you contact us for assistance, for example if you have forgotten your password, need to report a bug or have any general queries. Information about your use of our Services through the use of cookies and similar technologies (see the ‘Cookies and similar technologies’ for more information). When you register for our conferences, events and/or training sessions, we collect: Personal details such as your name, address, email, telephone number and information about your company. We will only retain your personal data for as long as we need to in order to fulfil the uses we describe in this notice or to comply with statutory requirements, or until you exercise your right to erasure (which is explained in the ‘Your Rights’ section below).\nPersonal data collected from other sources We may also use personal data about you that we have obtained from other sources, such as companies that sell data.\nWe may also use personal data about you that we have obtained from other sources:\nCompanies that sell data: for example, we may purchase access to a database to find consumer insights and market research contacts for use in our marketing and lead generation. How and why we use your personal data, and who we share it with In this section we explain how and why we use your personal data, and provide information about the organisations we may share it with.\nWe use the data that you share with us, or that we receive from the other sources, to contact you about our products and services and to give you the best possible experience as a customer. Our use of personal data is described in more detail in the table below.\nWe use personal data to... For example... Create and authenticate your Crunch account We will use your account details to set up your account, and to authenticate your identity each time you log on. We may contact you about the products and services we provide. Communicate with you about our Services We will use your contact information to respond to your queries and generally support your use of our Services. Monitor your use of our Services We use Log Data to help us understand your use of our tools to fix bugs, respond to any issues or questions you may have and to improve, customize and enhance our Services by expanding their features and functionality and tailoring them to user needs and preferences. Send you marketing communications Where we are permitted to do so, we will use your contact details to contact you (by email, post or telephone) about our products and services. You can unsubscribe from receiving future marketing communications at any time. In order to use personal data in the ways described above, we may share it with certain third parties. Information about the types of organisations we may share data with is provided below.\nOur customers From time-to-time, our customers request usage reports for our Services. For example, some clients use information about the use of our Services to understand the penetration of the tool within the business. We may also share your name with other customers or prospective customers as part of a testimonial, but only with your permission.\nOur service providers We work with trusted service providers that carry out certain functions on our behalf so we can provide our services to you. These organisations process data on our behalf. They only have access to the personal data that they absolutely need to provide the specific service to us, and in all cases we have contractual safeguards in place to ensure that they do not disclose or use it for any other purposes. In some cases, these organisations may need to process your personal data for their own specific purposes, for example to ensure they are compliant with regulations or laws governing their own sectors.\nWe use the following service providers –\nAmazon Web Services (AWS) – Cloud computing and data storage HubSpot – Customer Relationship Management software Scalyr – Data logging service Sentry – Error monitoring Usersnap – Error monitoring Other organisations These circumstances are unusual, but we may share personal data with other organisations if:\nWe have to share your information to comply with legal or regulatory requirements (or we reasonably believe that we need to disclose your information for such purposes); We need to share personal data in order to establish, exercise or defend our legal rights, including with our legal and other professional advisors; We restructure our business or if we buy or sell any business or assets we may share your data with the prospective buyer or seller; All or substantially all of our company assets are acquired by another party, your data will be one of the transferred assets. Legal grounds for processing your personal data We are committed to the lawful, fair and transparent use of personal data. In processing personal data for the purposes of providing our customers with our products and services, we process your personal data on the grounds that our processing is necessary for legitimate interests we pursue as a business, namely that our business relies entirely on the ability to use your personal data to provide our Services.\nIf we send you marketing communications to tell you about our products and services, we rely on one of the following legal grounds for processing:\nLegitimate interests; or Consent Because marketing rules vary between countries, the legal ground for processing that we rely on will depend on your geographic location.\nIf you have any questions about the grounds under which we process your personal data, or would like to find out more about the approach we take to determine that these grounds apply, please contact us using the contact details in the ‘How to contact us’ section.\nTransferring personal data outside the EEA Our servers are located in Ireland, so if you are based in Europe or the UK your data will remain in Europe. If you are located outside of Europe, your information may be transferred to, and maintained on, computers located outside of your state, province, country or other governmental jurisdiction where the privacy laws may not be as protective as those in your jurisdiction.\nHow we store and protect your personal data We know how important it is to protect your personal data while we have it. This section describes some of the measures we take to ensure that it is kept secure.\nWe do everything we can to protect your personal data from loss or misuse, and from unauthorized access, disclosure, alteration and destruction. This section describes some of the measures we take to ensure that your personal data is secure:\nWe use data centres that have a high level of physical security measures to host and protect your data and our systems; We conduct independent penetration tests on a periodic basis and are continuously scanning our systems and applications for vulnerabilities in our systems; if you ever think that you have found a security issue or vulnerability in one of our systems please let us know at systems@crunch.io; We use encryption to secure your personal data whilst it is in transit using TLS; We allow access to attributable data (by which we mean data that directly identifies you) only to those Crunch employees who need it to carry out their job responsibilities, for example our account management team to allow them to respond to you when you contact us; We make security the responsibility of all our employees and we train our staff to identify security risks and protect your data. Our website may from time to time contain links to and from other websites. If you follow a link to any of those websites, please note that those websites ought to have their own privacy notices and that we do not accept any responsibility or liability for those websites. Please check those privacy notices before you submit your information to those websites.\nEmails and notifications This section explains the choices you have when it comes to emails and notifications we may send to you.\nIf you are a Crunch customer, it is important that we are able to send you emails and notifications about your use of our Services. For example, we may contact you about your account, billing or the terms governing your access to or use of our Services. We may also contact you about other services that we offer, and for these messages, we rely on our legitimate interest in running our business as the legal grounds for this processing.\nIf you are a prospective client, we would like to send you marketing communications to tell you about our products and services, which could include information about industry insights, our Services and emails direct from our sales teams. Because marketing rules vary between countries, the legal ground for processing that we rely on will depend on your geographic location, however you will always be able to unsubscribe (either through your Account or by following the unsubscribe instructions provided in the e-mail you receive).\nCookies and similar technologies We use “cookies” to improve your experience as you use our Services. This section tells you about the cookies that we use, what they do and your choices when it comes to cookies.\nCookies are small data files that allow a website to collect and store a range of data on your desktop computer, laptop or mobile device. We use cookies and similar technologies, such as tags and pixels (“cookies”) to help us to provide features and functionality on our Services and generally improve the way they work.\nFirst party cookies These cookies enable you to navigate our Services and use their features. The table below lists and describes the first party cookies that we use.\nCookie name What this cookie is used for User session cookies Authentication of your use of our Services Third party cookies The table below lists and describes the third party cookies that we are placed on our Services. You can learn more about the cookies we use by clicking on the links provided below.\nCookie name What these cookies are used for Cookies we use to achieve this Analytics cookies We use analytics cookies to understand how you use our Services so we can monitor performance and ultimately improve them. For example, by understanding how you use certain features, we can identify and fix page errors and improve the design and navigation. Fastly Google Analytics Universal Tag Google Tag Manager Hotjar HubSpot Plotly Advertising cookies Cookies can also be used to deliver online ads and to track ad campaign performance and efficiency. The marketing cookies on our website collect information about online browsing, and use that information to create relevant online ads that you will see on third party websites, and for conversion tracking.\nLinkedIn Your choices when it comes to cookies When you access our Services, you are presented with an alert that notified you of our use of cookies. If you continue to use our Services you are agreeing to the use of the cookies described in this notice. However, you can use your browser settings to accept or reject new cookies and to delete existing cookies. The ‘Help’ function within your browser should tell you how, and you can find more about how you can delete and manage cookies at www.allaboutcookies.org. If you are primarily concerned about third party advertising cookies, you can turn these off by going to Your Online Choices.\nYou should be aware that restricting the use of cookies may mean that you will not be able to take full advantage of all the features or services available on our Services.\nEmail tracking Some of the emails we send to you may contain a ‘web beacon pixel’ or tracked links which allows us to identify when you have opened the email and to verify which links contained in the email you have accessed. We use this information to determine which parts of our emails are of most interest to you. You can delete the pixel by deleting the email.\nYour rights This section explains the rights that you have in relation to the personal data that we hold about you.\nYou have certain rights in relation to the personal data that we hold about you, which are designed to give you more choice and control over your personal data. These rights are explained below.\nRight What does this mean? Is it available to you? The right to request access to personal data You can request a copy of the data we hold about you and related information Yes The right to request rectification of personal data You can ask us to correct any inaccurate data about you and to complete any incomplete data that we hold about you (either by using the contact details below or via the settings feature on your Account profile). Yes The right to request erasure of personal data You can request that we delete the personal data we hold about you Yes, in certain situations The right to request a restriction on processing of personal data You can request that we restrict our use of your data to storage only, that we stop using it for all other purposes or that we retain data that was due for deletion. Yes, in certain situations The right to object to the processing of personal data You can object to certain types of processing of your personal data in certain specific circumstances Yes, in certain situations The right to opt out of Crunch selling personal data You can request that we not sell your personal data Yes, but please note we do not sell your data without your consent The right of data portability You have the right to receive a copy of your personal data in a structured and machine-readable format and, where possible, have this sent to another organisation Generally, no. This is because almost all of our processing relies on our ‘legitimate interests’ to process personal data The right to request information about personal data provided to third parties for marketing purposes California’s “Shine the Light” law (Civil Code Section 1798.83) permits residents of California to request information regarding our disclosure of information to third parties for their direct marketing purposes. Yes, if you are a resident of California Automated decision making We do not envisage that any decisions that will have a legal or other significant effect on you will be taken about you using purely automated means, however we will update this notice if this position changes and notify you of those changes.\nExercising your rights You can exercise the rights described above by emailing support@crunch.io.\nOnce you have submitted your request we may contact you to request further information to authenticate your identity (because we want to make sure it is actually you requesting your data) or to help us to respond to your request. Except in rare cases, we will respond to you within 1 month of receiving this information or, where no such information is required, after we have received full details of your request. As noted above, while some rights apply generally, some are only available in certain circumstances, so if we feel that any right is not available to you we will let you know along with the reason for our decision.\nIf you are a resident of California, a person registered with your State’s government may act on your behalf to exercise any of these rights. While you have a right to request that we do not sell your data, please note that we would not sell your data without your consent. If you have given consent, you can withdraw it by contacting us at info@crunch.io.\nLodging a complaint with a regulator You may have the right to lodge a complaint with a data protection regulator in a country you work or live. You can find the contact details of the appropriate regulator online, for example by searching for ‘Data Regulator’ and the appropriate country. However, we encourage you to contact us before making any complaint and we will seek to resolve any issues or concerns you may have.\nHow to contact us If you have questions about this notice, or about how we collect, store and use personal data, you can contact us at info@crunch.io.\nUpdates to this notice While we reserve the right to change this notice at any time, if we make any material changes we will notify you of those changes in an appropriate way, for example by posting them on our Services or by sending you an email or other notification. We will also update the “Last Updated Date” above to indicate when those changes will become effective.\n","permalink":"//crunch-io.github.io/crunchy/newsite/about/privacy/","tags":null,"title":"Privacy Policy and Cookies Notice"},{"categories":["feature"],"contents":"We know that for many, PowerPoint slides remain central to delivering results and to paraphrase Mark Twain, \u0026ldquo;reports of PowerPoint\u0026rsquo;s death have been greatly exagerated\u0026rdquo;. Crunch has long offered exports of analyses and tab books to Excel files, which, in addition to their own value, enabled people to get results from Crunch to PowerPoint by copying a cell range from Excel into a slide. That’s a bit tedious, though, and we wanted to do better, which is why we are excited to announce that PowerPoint exports from Crunch are now available if you have ‘Early access’ enabled in the app. We’re eager for feedback, so please try it and let us know how we can improve it to make it truly awesome for you.\nNow you can download your Crunch decks of saved analyses directly to PowerPoint files. Each analysis shows up as a graph (or table) on a slide, and these graphs are fully customizable in PowerPoint so you can right click on them and access the underlying data. You can even apply your own style and template with just a few clicks. Here’s how:\nDownload To get a PowerPoint file, open the deck tray from the right edge of the screen and from the dropdown select the deck you want to download. At the bottom of the tray, click the download button, which instead of just downloading an Excel file as before, gives you the option of Excel or PowerPoint. When you select one, the download starts.\nCustomize in PowerPoint When you open the deck in PowerPoint, you’ll see all of the analyses from your Crunch deck as slides. These are all fully editable: the charts in the slides are just as if you had made them yourself in PowerPoint, or pasted an Excel chart into PowerPoint. Turn your bar chart into a 3D pie chart, edit the legend placement, change the colors, anything you want.\nYou can even edit the data series behind the chart. For example, you may want to take slices of multiple charts and show them on the same slide. Each chart effectively has an Excel table embedded behind it, which you can alter as you need.\nApply templates From there, you can style it using a built-in or custom theme.\nWhat’s more, because the graph is native PowerPoint, you can seamlessly incorporate your results from Crunch into your already carefully and consistently styled presentations; the graphs will take on the styles defined in your presentation. Simply drag, or copy and paste the whole slide or just the graph from the Crunch download into your deck.\nWe need your feedback! We want to make the Crunch Deck to final-product deck process even smoother, so we want to hear from you: what steps would save you time? What could we do better in these presentations? Let us know — just drop a line to support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/pptx-exports/","tags":["analysis","powerpoint","deck","charts","graphs"],"title":"PowerPoint Deck Exports"},{"categories":["general"],"contents":"At Crunch, one of the ways we try to make data exploration simple is by providing sensible default views that take into account the properties of your data and metadata. We\u0026rsquo;re in the process of releasing some plotting methods in our crplyr R package that define methods for ggplot2\u0026rsquo;s autoplot() function. autoplot() was the ideal approach for us to encapsulate the logic of how to \u0026ldquo;just do the right thing.\u0026rdquo; You can do the analysis you want, and it will make smart choices about how to display it with no additional input\u0026ndash;all of which you can control or override with additional ggplot2 layers, if you want.\nThis lets us plot Crunch variables and high dimensional survey cross-tabs easily, while making sure that the plot always fits the data.\nlibrary(ggplot2) library(crplyr) crunch::login() ds \u0026lt;- loadDataset(\u0026#34;Not-so-simple dataset with all types\u0026#34;) ds %\u0026gt;% group_by(pasta, food_groups) %\u0026gt;% summarize(count=n()) %\u0026gt;% autoplot() ds %\u0026gt;% group_by(abolitionists, food_groups) %\u0026gt;% summarize(count=n()) %\u0026gt;% autoplot(\u0026#34;tile\u0026#34;) autoplot(ds$ec, \u0026#34;bar\u0026#34;) Making it look easy, though, can be hard work. Our autoplot methods inspect the input objects to understand their dimensionality and data types and choose an appropriate visualization. Figuring out and passing the right arguments to the right places can be messy, so in order to make these functions work, we took advantage of tidyeval, a framework that systematizes non-standard evaluation in R, now also supported in the new 3.0.0 release of ggplot2.\nTo illustrate this pattern, this blog post goes through a simplified example using the \u0026ldquo;diamonds\u0026rdquo; example dataset and pure dplyr methods. We\u0026rsquo;ll create a plotting function that adjusts to the number of grouping variables in a tibble. This lets you pipe data from a dplyr pipeline into a single function and get a meaningful, appropriate plot.\nThe actual code for our Crunch autoplot methods is here.\nNon-Standard Evaluation: Great Power, Great Pain A great feature the R language has is that it lets you access and manipulate the environment in which a function is called. This non-standard evaluation (NSE) gives package authors a flexible and powerful way to build programming interfaces.\nAt Crunch, we use NSE a lot. One example is in reporting better error messages. If you send the wrong data to the API, you might get back a response like 400: Payload is malformed. That\u0026rsquo;s not very helpful even for users who know our API well. We use NSE to inspect the user\u0026rsquo;s calling environment, figure out which variables or data structures are causing the problem, and suggest a fix: instead of a generic validation message, we error with the more helpful ds$some_name must be a Crunch Variable, pointing back to the input that the user typed.\nDespite working with NSE all the time, we\u0026rsquo;re pretty sure that we\u0026rsquo;ve never once gotten it right on the first try. The main reason is that whenever you are capturing an expression to evaluate later you need to also keep track of which environment you should evaluate that expression in. This makes it really difficult to pass unevaluated expressions between functions and have the evaluation occur without error. For instance, take this code which replaces a missing function argument with a logical value:\nf1 \u0026lt;- function(i, j, ...) { args \u0026lt;- eval(substitute(alist(i, j, ...))) args \u0026lt;- replace_missing(args) return(as.character(args)) } replace_missing \u0026lt;- function(args){ out \u0026lt;- lapply(args, function(x){ if (is.symbol(x)) { x \u0026lt;- tryCatch(eval(x), error = function(c){ msg \u0026lt;- conditionMessage(c) if (msg == \u0026quot;argument is missing, with no default\u0026quot;) { return(TRUE) } else { stop(c) } }) } return(eval(x)) }) return(out) } This code captures an expression at the top level, and passes it down to a second function which returns TRUE if it can\u0026rsquo;t find the argument, and evaluates expression if it can. We use code very similar to this for subsetting CrunchCube objects.\nThere\u0026rsquo;s a tricky mistake here though: we aren\u0026rsquo;t specifying in which environment we want that evaluation to take place. So if we happen to send a variable that is used somewhere in the call stack, we\u0026rsquo;ll get the wrong result:\nx \u0026lt;- 1 y \u0026lt;- 1 f1(1, , 3) ## [1] \u0026quot;1\u0026quot; \u0026quot;TRUE\u0026quot; \u0026quot;3\u0026quot; f1(y, , 3) ## [1] \u0026quot;1\u0026quot; \u0026quot;TRUE\u0026quot; \u0026quot;3\u0026quot; f1(x, , 3) ## [1] \u0026quot;x\u0026quot; \u0026quot;TRUE\u0026quot; \u0026quot;3\u0026quot; What\u0026rsquo;s happening here is that when the final eval(x) is happening, x is identified through lexical scoping, and so it ends up using the x that\u0026rsquo;s in the lapply environment, rather than the one that\u0026rsquo;s in the global environment. To fix this, we need to specify the environment where that evaluation should take place. This is an easy thing to forget, and presents its own problems if you move functions around, or later call them in a different order.\nEnter the Quosure Tidyeval offers a solution to this problem: it bundles the expression and its environment in a single object called a \u0026ldquo;quosure\u0026rdquo;. What this means is that as a developer, you don\u0026rsquo;t have to worry about matching expressions to environments and can pass unevaluated expressions between functions with confidence. Because the expression and the environment are bundled together, when you end up evaluating it you won\u0026rsquo;t ever be surprised by the result.\nAutoplot Back to our autoplot() project, our initial goal is to have a single function that will produce different plots based on the number of grouping variables in the tibble it receives. First, we create a general plotting function that figures out which plotting sub-function to use:\nlibrary(ggplot2) library(dplyr) autoplot \u0026lt;- function(df) { # Add grouping variable which was stripped by summarize df \u0026lt;- df %\u0026gt;% group_by(!!!groups(df), !!sym(names(df)[length(groups(df)) + 1])) if (length(groups(df)) == 1) { plot_fun \u0026lt;- plot_1d } else { plot_fun \u0026lt;- plot_2d } vars \u0026lt;- syms(names(df)) plot_fun(df, vars) } The function inspects the data frame and then selects a plotting function based on the number of groups in it. It then captures the names of the dataset as a list of symbols and passes it down to the plotting function. The next step is to write the two plotting functions that actually do the work:\nplot_1d \u0026lt;- function(df, vars){ groups \u0026lt;- vars[vars %in% groups(df)] measure \u0026lt;- vars[length(vars)][[1]] df %\u0026gt;% select(!!groups[[1]], !!measure) %\u0026gt;% arrange(desc(!!measure)) %\u0026gt;% ggplot(aes(x = !!measure, y = !!groups[[1]])) + geom_point() + theme_minimal() } diamonds %\u0026gt;% group_by(cut) %\u0026gt;% tally() %\u0026gt;% autoplot() The convenient thing about using tidy eval in this case is that we can confidently pass the unevaluated names into both the dplyr and ggplot2 code without worrying that the evaluation will fail. This means we can arrange the dataset based on the measure name, and then plot that measure even though we don\u0026rsquo;t know ahead of time what the measure will be called. We can do the same thing with the 2d plot:\nplot_2d \u0026lt;- function(df, vars){ groups \u0026lt;- vars[vars %in% groups(df)] measure \u0026lt;- vars[length(vars)][[1]] df %\u0026gt;% select(!!!groups, !!measure) %\u0026gt;% arrange(desc(!!measure)) %\u0026gt;% ggplot(aes(x = !!measure, y = !!groups[[1]], , color = !!groups[[2]])) + geom_point() + theme_minimal() } diamonds %\u0026gt;% group_by(cut ,clarity) %\u0026gt;% tally() %\u0026gt;% autoplot() This is basically the same code as the 1D plot except that we used the splice operator (!!!) in the select call and added another grouping variable on the color dimension.\nWhat happens when you have more than three dimensions? The ggplot2 package allows us to use tidyeval to dynamically add facets.\nautoplot \u0026lt;- function(df) { # Add grouping variable which was stripped by summarize df \u0026lt;- df %\u0026gt;% group_by(!!!groups(df), !!sym(names(df)[length(groups(df)) + 1])) groups \u0026lt;- groups(df) if (length(groups) == 1) { plot_fun \u0026lt;- plot_1d } else { plot_fun \u0026lt;- plot_2d } vars \u0026lt;- syms(names(df)) out \u0026lt;- plot_fun(df, vars) if (length(groups) \u0026gt; 2) { groups \u0026lt;- syms(groups) out \u0026lt;- out + facet_wrap(vars(!!!groups[3:length(groups)])) } return(out) } diamonds %\u0026gt;% group_by(cut, color, clarity) %\u0026gt;% summarize(number_of_diamonds = n()) %\u0026gt;% autoplot() Conclusion Tidyeval solves the main challenges of working with R\u0026rsquo;s non-standard evaluation by bundling expressions and environments into quosures. The new release of ggplot2 unlocks the power of using tidyeval for making powerful visualizations quickly. Though we could have made autoplot methods for Crunch objects before tidyeval support, it would have been much more complicated and error-prone. Using tidyeval and ggplot2 3.0.0 to pass quosures between functions unlocks powerful new mechanisms of building user-friendly functions. And that let\u0026rsquo;s us do what we strive to do most: get out of the way and let our users explore their data quickly in a way that matches their intuitions for how R and tidy conventions work.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/blog/autoplot-with-tidyeval/","tags":["R","data visualization","ggplot2","tidyeval","crplyr"],"title":"Making Graphs Look Easy with ggplot2 and Tidy Evaluation"},{"categories":null,"contents":"We have developed, and are always adding to, our R (RCrunch) and Python(PyCrunch) libraries, which perform many advanced uploading, cleaning, and analytics functions. But you don’t have to stop there, you can connect to Crunch and run any model you like, create bespoke visualizations, or even write your own packages. Crunch is a modern survey platform. The sky is the limit.\n","permalink":"//crunch-io.github.io/crunchy/newsite/api/api-libraries/","tags":null,"title":"API libraries"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-focused/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-pdf/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-read/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-test-focused/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-test-read/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-test-view/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-test/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-testlocal/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference-view/","tags":null,"title":"Crunch API Reference"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/api/reference/","tags":null,"title":"Crunch API Reference"},{"categories":["feature"],"contents":" At Crunch, we are constantly searching for ways to help our customers\u0026mdash;and their clients\u0026mdash;gain insights from their data. A common task in the market-research world is to take data that is essentially a scale\u0026mdash;rate from 1 to 10, or an ordinal range of responses from \u0026ldquo;Strongly agree\u0026rdquo; to \u0026ldquo;Strongly disagree\u0026rdquo;\u0026mdash;and collapse it into a smaller number of bins. For example, if you asked people to rate their preference on a scale of 1-10 you might want to see how the people who provide a rating between 1 and 5 compare to those who rated it between 6 and 10. This goes by a number of names like Top Box, Top Two Box, or Nets.\nCrunch has long had the ability to create a new variable by combining the categories of an existing variable. Sometimes, though, you want to see the subtotals alongside the original categories.\nOur new \u0026ldquo;headings and subtotals\u0026rdquo; feature allows you to do just that. The example above shows how subtotals look in the web app, using an example variable card from the Stack Overflow Developer Survey that we have used previously. Here, we have a question which asks respondents to rate the importance of diversity on a five point scale.\nPerhaps for our purposes, we think the five point scale is too granular, and instead we just want to get a feeling for those who generally agree compared to those who generally disagree. That grouping may make it easier for us to report conclusions from the data, or make it easier for others to interpret. We could make a new variable that collapses \u0026ldquo;Strongly disagree\u0026rdquo; and \u0026ldquo;Disagree\u0026rdquo; responses into one category and \u0026ldquo;Somewhat agree\u0026rdquo;, \u0026ldquo;Agree\u0026rdquo;, and \u0026ldquo;Strongly agree\u0026rdquo; into another. But what if we want it both ways: we want to see the higher level, aggregated values and the breakdown of percentages within each group? Maybe there are within-group differences of interest\u0026mdash;say, most of those who agree agree strongly, while those who disagree only do so \u0026ldquo;somewhat\u0026rdquo;\u0026mdash;that we don\u0026rsquo;t want to obscure completely.\nSubtotals can help. To make them appear in Crunch, we add some properties to the variable so that every time it is loaded, whether in the card view, the crosstabbing view, or any reports, the subtotals are shown. To define the subtotals for a variable in the web app, click on the variable\u0026rsquo;s properties, and then select Headings and Subtotals. Once there, you\u0026rsquo;re just a few clicks, drags, and drops away from fancy new subtotals.\nIf you want to script, it\u0026rsquo;s also possible to create subtotals and headings programmatically in R.\nWe\u0026rsquo;ve already heard from some enthusiastic users that headings and subtotals are helping ease their workflows, and their clients are excited to see grouped subtotals right on variable cards in the app. Have a favorite aggregation you want to see added to Crunch? Have an interesting use-case or workflow using headings and subtotals? Let us know!\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/subtotals/","tags":["analysis","nets","subtotals"],"title":"Subtotals for Categorical Data"},{"categories":["feature"],"contents":"Crunch is designed to make data accessible to many different audiences that have varying needs, expectations, and technical abilities. Our browse and analyze views allow data owners and analysts to quickly explore and analyze interesting insights in potentially large, complex datasets. However, not everyone has time to explore a dataset\u0026mdash;some need to see key findings at a glance.\nTo meet this executive-type need, we\u0026rsquo;re introducing a new dashboard feature.\nThis dashboard provides a quick view of up to four analyses, right when you open a dataset. These views are dynamic: when new data is added to the dataset, the dashboard updates with the latest values.\nIn keeping with Crunch\u0026rsquo;s philosophy that exploring data should be instant and intuitive, the graphs and tables on a dashboard can be a starting point for further analysis if you want to dig deeper. Double-click on an analysis to open it in the full-screen view, where you can explore by adding filters, changing variables, or customizing the analysis using the display controller.\nAt any time when working with a dataset, you can return to the dashboard by clicking its icon at the top of the screen.\nCreating a Dashboard If you are a dataset editor, setting up a dashboard for your dataset takes just a few steps. First, save the analyses you want to appear in the dashboard to a deck. Then, indicate that you want to use that deck as the source for your dashboard by clicking the dataset name, selecting Configure Dashboard, and select the deck. See Configuring a Dataset Dashboard for more information. To change the composition of the analyses that show in the dashboard, edit the saved slides in your deck, and the changes will be reflected in the dashboard.\nThe Future of Dashboards There are lots of enhancements we plan to add to the dashboards, and your feedback about how you\u0026rsquo;d like to see them improved is greatly appreciated. Let us know what you think at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/dataset-dashboard/","tags":["dashboards","clients","graphs"],"title":"Introducing Dashboards"},{"categories":["general"],"contents":"At Crunch we greatly value tests. We have unit tests, functional tests, and the stack wouldn\u0026rsquo;t be complete without end-to-end tests. Good tests allow us to update code quickly and confidently.\nFor our end-to-end testing we use Nightwatch.js, a JavaScript testing tool that uses Selenium to drive a browser to perform tests. Our goal is to be able to test our Python backend, our REST APIs, and the behavior of our JavaScript single-page application, using a real browser, running real code.\nAnyone that has set up Selenium knows that it can be very picky about the versions of the different tools you should have. Selenium 3.4.0 might need ChromeDriver 2.31 which requires Chrome 56.3920.234034249324234329 (okay, so those version numbers may be made up), and unless you have the exact same versions every single time, it can easily result in tests that work on one developer\u0026rsquo;s machine but not on another.\nCompounding the version mismatch problem, we build and test our entire stack on a Jenkins cluster. Many of our developers would code and test on Apple MacOS, but our Jenkins pipeline was running on Ubuntu or CentOS. This led to messages like these being posted to our Slack channel:\nnew variable tests pass locally so I\u0026rsquo;m sending them to jenkins for failure\nand\nonce again it passes locally (I’m tired of saying that). we’ll see if it passes the Jenkins Arbitron 5000\nAs a result, developers were less likely to run all tests locally before pushing because Jenkins was the final arbiter of truth, and well, it would pass locally anyway (right?). Moreover, trying to debug this kind of \u0026ldquo;works on my machine\u0026rdquo; problem was really, really painful.\nIn addition to the cost to developers, operations spent an awful lot of time testing Selenium/ChromeDriver/Chrome versions to verify that everything continued to work. Linux package management makes installing the latest version of a package incredibly simple, but rolling back is less so. Unless you manually keep around the old versions of packages, you end up scouring the net for just the right .deb or .rpm that would make everything function again. In the mean time, developers are unhappy because you\u0026rsquo;ve just taken down their testing platform.\nThis is where Docker containers presented a perfect solution for us. Selenium makes Docker containers available in a variety of configurations on the Selenium Dockerhub. Using the standalone-chrome container, we can easily spawn a Selenium server that allows us to connect and spawn Chrome browsers for testing. The docker container is easy to start up, easy to tear down, and because it is self contained and doesn\u0026rsquo;t require installation of packages or software, easy to upgrade.\nHence the birth of nightwatchrun, which we have just made public under the MIT license. Given our existing test suite of Nightwatch tests, we wanted to be able to quickly spin up a new container, run our tests, and after the tests were completed, tear down the container. This approach solved our two big problems. Because Jenkins is running the exact same software/container as developers, \u0026ldquo;Passes locally, but not on Jenkins\u0026rdquo; is a thing of the past. Our developers can now easily run their Nightwatch tests against the exact same software stack used by Jenkins with Docker for Mac. Moreover, operations is no longer in the business of testing all kinds of different versions against each other to find the right combination of dependencies.\nnightwatchrun.sh is a simple shell script that, given a Nightwatch.js configuration file, will run a Docker container, get its IP address/port number, set some environment variables, and start Nightwatch. The environment variables are used to set the Selenium host/port number.\nYou can try it out yourself:\ngit clone git@github.com:Crunch-io/nightwatchrun.git yarn install ./nightwatchrun.sh -c nightwatch.conf.js This will output something similar to:\nRiley:nightwatchrun laurenipsum$ ./nightwatchrun.sh -c nightwatch.conf.js Starting selenium testing against environment: stable with version latest Using config file: nightwatch.conf.js Unable to find image 'selenium/standalone-chrome:latest' locally latest: Pulling from selenium/standalone-chrome 9fb6c798fa41: Pull complete 3b61febd4aef: Pull complete 9d99b9777eb0: Pull complete d010c8cf75d7: Pull complete 7fac07fb303e: Pull complete 64b080cf80c2: Pull complete 4eb86df147d6: Pull complete 4dd0b38ce61c: Pull complete 2b0fc7beb522: Pull complete 8682d4afe8ba: Pull complete 8ad935df4db2: Pull complete e3890abf9672: Pull complete 96df5dc43939: Pull complete 18b664097abd: Pull complete 984e25c49459: Pull complete 4369356a8c66: Pull complete bb31d692f888: Pull complete c11c4dfb44fe: Pull complete Digest: sha256:35f9029adb074c6a23c367e0c4a5986bd7fa0fb14cdac7f8cdcc42a4613de392 Status: Downloaded newer image for selenium/standalone-chrome:latest 513369b2e07b93794b8ddd5837131475c58405e7ea6d60fcf8447edec7c1c227 Today's test are run against: Google Chrome 61.0.3163.100 unknown Selenium is running at 0.0.0.0 port 32785 Selenium is not yet alive. Sleeping 1 second. yarn run v1.1.0 warning From Yarn 1.0 onwards, scripts don't require \u0026quot;--\u0026quot; for options to be forwarded. In a future version, any explicit \u0026quot;--\u0026quot; will be forwarded as-is to the scripts. $ \u0026quot;/Users/xistence/Projects/Crunch/nightwatchrun/node_modules/.bin/nightwatch\u0026quot; \u0026quot;-c\u0026quot; \u0026quot;nightwatch.conf.js\u0026quot; Running in parallel with auto workers. Started child process for: crunchDemo crunchDemo Running in parallel with auto workers. crunchDemo \\n crunchDemo [Crunch Demo] Test Suite ============================ crunchDemo Results for: Demo test Crunch crunchDemo ✔ Element \u0026lt;body\u0026gt; was visible after 46 milliseconds. crunchDemo ✔ Testing if the page title equals \u0026quot;Crunch\u0026quot;. crunchDemo ✔ Testing if element \u0026lt;div.intro-message h3\u0026gt; contains text: \u0026quot;A modern platform\u0026quot;. crunchDemo ✔ Testing if element \u0026lt;div.intro-message h3 + h3\u0026gt; contains text: \u0026quot;for analytics\u0026quot;. crunchDemo OK. 4 assertions passed. (4.503s) \u0026gt;\u0026gt; crunchDemo finished. ✨ Done in 5.04s. Executed tests 1 times successfully Removing the docker container: nightwatchrun.nightwatch.conf.js nightwatchrun.nightwatch.conf.js Already have a Nightwatch.js setup? Take a look at nightwatch.conf.js, and copy over the changes necessary.\nTesting with Docker has made a world of difference. Less hassle, no need to locally install the right combination of the JRE/Selenium/ChromeDriver/Chrome, and tests now run self-contained in a headless container, so no flash of a browser opening or focus stealing.\nIf you have suggestions or improvements for nightwatchrun, please add an issue on the Github issue tracker, or provide a pull request with your suggested changes.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/blog/nightwatch-selenium-docker/","tags":["testing","automation"],"title":"Using Selenium with Docker for Consistent Testing"},{"categories":["general"],"contents":"Crunch is designed to make it easy to manage and explore data, and it is particularly optimized for survey data. We natively support data types that are common in survey research, and it is also simple to do things like generate population weights and apply them automatically to all calculations. And the kinds of analyses and reports that are standard among researchers are easily selected and exported.\nThese features are great if you work at a research company, or in a marketing department, or otherwise work with surveys professionally. But if you\u0026rsquo;re a software engineer, you live in code, not crosstabs and spreadsheets. So on the development team, we face this tension continually: we\u0026rsquo;re building a product for which the target audience is not people like us. How can we best allow our team to find solutions and engage our brains fully to make the product better without letting the inmates run the asylum?\nIce cream eating ice cream\nWe routinely do many things to open ourselves to our users, from discussions and screensharing with those who report bugs or request features to periodic full product demos to the team. Those are all good ways to learn more about our users and how they think, and they definitely help increase our empathy. However, there\u0026rsquo;s no better way to increase empathy with your users than to become one yourself: to eat your own ice cream (also known as eating your own dog food, although ice cream appears to be more popular amongst our team). Under normal circumstances, though, our development team doesn\u0026rsquo;t have a real reason to use our product\u0026mdash;it\u0026rsquo;s not designed to help us write software.\nAt our all-hands meetup this summer near Tahoe, we gave the team a special assignment: Import, clean, and analyze the Stack Overflow developer survey. Find something about software developers that you think our CEO should know, and deliver results to him, all using our product. It\u0026rsquo;s a great exercise because the dataset is about things developers are more likely to care about\u0026mdash;themselves and developers like them\u0026mdash;and it received a bit of popular attention and reaction. At the same time, it\u0026rsquo;s a survey\u0026mdash;so our product should be ideal for exploring it.\nResults The experience was great. Over the coming weeks, we\u0026rsquo;ll be writing more about some of the work that various people on the team did and what we found in the data. One of the fun things about the exercise was seeing how different people took the open-ended prompt and ran with it in very different directions, exploiting a broad spectrum of features of the Crunch platform.\nWe collectively created 15 different reports that covered topics from gender representation in tech to job satisfaction internationally. These reports took many different forms: there were slide decks shared with the team in the web app, Excel workbooks exported, iPython notebooks, and data visualizations done in R. Some also created a CrunchBox, our public widget that allows our users to embed data visualizations in online articles or blog posts (like this!). Here\u0026rsquo;s an example: click on the graph below to pick different variables to analyze and change the visualization settings.\nWhat does our ice cream taste like? Overall, we felt that our ice cream tasted pretty good! Yet, as with any fine dining experience, the difference between a good meal and an excellent meal comes down to the details in the service and presentation. We noticed a lot of little bugs and usability issues, rough edges that our everyday users know how to navigate but that stick out to someone new, or perhaps details that aren\u0026rsquo;t quite right but that aren\u0026rsquo;t critical enough that people bother to report them. But with our attention on them, and with our inherent drive to build a better product, we not only saw them but said, \u0026ldquo;Hey, let me just fix that right now.\u0026rdquo; We fixed about 20 issues in the web app and pushed a bunch of enhancements to our R and Python libraries as well.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/blog/devs-as-users/","tags":[],"title":"Developers As Users"},{"categories":["feature"],"contents":"We\u0026rsquo;ve just released version 1.18.0 of the Crunch R package. Current package users should see a message when they load the package instructing you how to update to the latest version. New users (or anyone) can install this latest release from CRAN with\ninstall.packages(\u0026quot;crunch\u0026quot;) See the package website for further instructions.\nSince the last CRAN release in June (1.17.0), some significant features have been added. A full list of changes can be found here, but here is an overview of the main additions.\nMapping Crunch-hosted geographic data can now be set and updated. Use geo() on a variable to see if there is already associated geographic data. Use the addGeoMetadata() function to match a text or categorical variable with available geodata based on the contents of the variable and metadata associated with Crunch-hosted geographic data. This function looks at the contents of the variable and the currently available geodata files that are available on Crunch. In most cases, you can set the geographic connection with just\ngeo(ds$state) \u0026lt;- addGeoMetadata(ds$state) Once a variable has been associated with geographic data, you can use the Crunch web app to make beautiful choropleths like this:\nWe\u0026rsquo;re also working on a new R package for working with Crunch\u0026rsquo;s geographic data, so watch this space for news about that.\nNew variable builders This release adds support for case variables, what the \u0026ldquo;Build Categorical Variable\u0026rdquo; interface allows you to do in the web application. makeCaseVariable() takes a sequence of case statements to derive a new variable based on the values from other variables.\nCase variables are useful when you want a categorical variable that is dependent on the contents of other variables. For example, we had two 10 point scores for how likely a respondent was to recommend ACME corp, both unaided and aided, but what we want is an overall net promoter score for ACME corp across both aided and unaided recommendations. We could create this NPS variable simply with a case variable as follows:\nds_pets$ACME_NPS \u0026lt;- makeCaseVariable( Promoter = ds_pets$ACME_unaided \u0026gt;= 9 | ds_pets$ACME_aided \u0026gt;= 9, Neutral = ds_pets$ACME_unaided \u0026gt;= 7 | ds_pets$ACME_aided \u0026gt;= 7, Detractor = ds_pets$ACME_unaided \u0026lt;= 6 | ds_pets$ACME_aided \u0026lt;= 6, name = \u0026#34;ACME Net Promoter\u0026#34; ) Case variables match the first case that evaluates to TRUE, so in this example, a value of 9 gets classified as \u0026ldquo;promoter\u0026rdquo; and not \u0026ldquo;neutral\u0026rdquo;. If none of the cases match and there is no else case specified, the system default No Data category will be used.\nmakeCaseVariable() is incredibly powerful for making complicated derived variables that are based on anything that can be expressed with a Crunch expression. Best of all, makeCaseVariable() uses the power of Crunch\u0026rsquo;s servers to do all of this computation, so there\u0026rsquo;s no need to pull data and then send it back to Crunch. And, whenever the data in the input variables are changed or new rows are added, your derived variable automatically updates.\nWe also added a convenience function to create interactions of variables. interactVariables() takes two or more categorical variables and derives a new variable with the combination of each, like how the base R interact() function works, except the resulting variable is a derivation that lives on the Crunch servers, as with makeCaseVariable().\nDerived variable tools We\u0026rsquo;ve added some methods to help you work with derived variables more generally. First, you can check if a variable is derived with is.derived(ds$variable). If it is derived, you can see its derivation expression with derivation(ds$derived_variable). You can change that derivation expression by assigning a new one: derivation(ds$derived_variable) \u0026lt;- ds$var1 + ds$var2. Finally, if you want to sever the link to the variable\u0026rsquo;s sources, you can \u0026ldquo;integrate\u0026rdquo; (integration is the opposite of derivation, right?) the variable by assigning a NULL derivation, like derivation(ds$derived_variable) \u0026lt;- NULL or you can set is.derived(ds$derived_variable) \u0026lt;- FALSE. The resulting variable will no longer update when its (former) source variables are altered.\nSee derivations for more detailed documentation and information.\nMultitables Similar to the new tools for working with derived variables, there are also new methods for working with \u0026ldquo;multitables\u0026rdquo;, the table header definitions composed of multiple variables that can be used interactively in the web app and to generate tab books of the dataset. Multitables can now be updated with multitables(ds)[[\u0026quot;Multitable name\u0026quot;]] \u0026lt;- ~ var1 + var2 formula syntax. In addition, multitables can be deleted with multitables(ds)[[\u0026quot;Multitable name\u0026quot;]] \u0026lt;- NULL. Multitables also have new name() and delete() methods.\nAssorted enhancements and fixes There are many more changes in the release; see the full release notes for more details. A few other new functions are worth mentioning.\nBetter integration with the web application. You can copy the URL from the browser in the web app and pass it to loadDataset() to load the same dataset in your R session. To go the other way, call webApp() on your R dataset object and it will open it in your web browser. resetPassword() allows you to trigger a password reset from R. copyOrder() to copy the ordering of variables from one dataset to another. searchDatasets() provides a basic interface to the Crunch search API for finding variables and datasets. Support for streaming data: check for received data with pendingStream(); append that pending stream data to the dataset with appendStream(). New website Finally, you may have noticed that all of the links here point to a new website for the crunch package, built with the pkgdown static site generator. We\u0026rsquo;re excited to have a new space to develop with improved, easier-to-use documentation and examples. Check back there for the latest updates to the package, and see the Crunch + R page for more developments.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/r-package-1-18-0/","tags":["R","release","geo"],"title":"Crunch R Package 1.18.0 Released"},{"categories":["feature"],"contents":"A wealth of information can be locked in text data. Our new “sentiment analysis” feature enables you to quantify and analyze just a bit of it: whether the text in question is on balance Positive, Neutral, or Negative — and then crosstab the derived sentiment variable just like any other variable to understand the variations among other groups in the dataset.\nIn the properties panel for text variables, you’ll notice the Classify button. Click it to create a new categorical variable containing the sentiment analysis for that text variable. Empty responses will be classified as Neutral.\nThe initial version of this feature uses a modern (slightly American inflected) English lexicon, tailored especially for terms that occur in social media:\nHutto, CJ and Gilbert, E. (2014) \u0026ldquo;VADER: A Parsimonious Rule-based Model for Sentiment Analysis of Social Media Text\u0026rdquo;. Eighth International Conference on Weblogs and Social Media (ICWSM-14). Ann Arbor, MI, June 2014.\nWe have plenty of plans for future work in this area, including other languages, a way to provide your own tailored lexicons, coding of data into a broader range of categories, specifying your own coding for text data, and more. Let us know what you’d like to see!\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/sentiment-analysis/","tags":["text","derived variables","sentiment analysis"],"title":"Sentiment Analysis"},{"categories":["feature"],"contents":"Search has been a part of Crunch from the beginning. In a system designed to house and share large volumes of data, the ability to quickly find the data that\u0026rsquo;s important right now is critical. We\u0026rsquo;re continually working to improve how data is indexed to make searching faster and more accurate, and we just added a couple new ways for you to refine your searches to get to what you are looking for faster and more easily.\nSearch Filters Two dropdown menus at the top of the panel help you to dial in your search.\nOn the left, the Type filter lets you specify Datasets, Variables, or Categories to limit your search to that type of object. For example, imagine you had a dataset titled \u0026ldquo;Changing attitudes towards Gender Identity\u0026rdquo;; you might try searching for it using the term Gender, only to find that you get dozens of results from every dataset with a \u0026ldquo;Gender\u0026rdquo; variable. By limiting the search to Datasets, you can quickly find what you are looking for.\nOn the right, the Date filter lets you limit your search to recent datasets.\nWe use the End Date property of the dataset to determine the date of a dataset. This property can be viewed in Dataset Properties, and is typically set by the data owner when the dataset is imported.\nSearch in a Project Previously, if you searched from within a dataset, your search would be limited to that dataset by default, and if you searched outside a dataset, you would search all datasets. We found that for users with many datasets distributed over multiple projects, the ability to search within a project allowed them to better find what they were looking for, so we\u0026rsquo;ve made the default search from outside a dataset be limited to that project.\nA Search all datasets link below the search result allows you to broaden the scope of your search, and you\u0026rsquo;ll find that when searching within a dataset, the Search project option has been added.\nIn addition, the context for your search now appears at the top of the search panel (e.g. in the example, the HipBrand project is being searched).\nWe hope these search refinements will help you find what you are looking for a more efficiently. More enhancements are in the pipeline, in addition to our continual work on making the search engine faster and more intuitive. If there is any improvement to search you\u0026rsquo;d like to see, let us know at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/search-filters/","tags":["search"],"title":"Refine your searches on Crunch"},{"categories":["feature"],"contents":"We’ve been working on updating and improving the look of Crunch, and we wanted to take moment to call out a few of the recent improvements.\nLet’s start at the top You may have noticed that we recently updated the Crunch header.\nThis new top bar provides a more unified look throughout the application, and allows us to move user settings, dataset settings, and project settings into unobtrusive and consistently located dropdown menus. Now, you can click the dataset or project name for actions related to it, while user settings and signing out are accessed by clicking the 3 vertical dots in the upper right.\nNew graphs: Better looking, better titling, better tooltips We are very excited to be rolling out a complete refresh to all of our graphs – bar plots, histograms, time plots, dot plots – the whole nine yards. In addition to an improved visual style, these graphs more gracefully handle long variable and category names, and they include more informative tooltips, allowing you to dig into the data by hovering your cursor over the parts that interest you. Let’s take a look at a few of the new visualizations.\nBar plots Our bar plots now benefit from clearer labeling and improved interactivity. Hovering on a bar gives you the category label and the value.\nIn addition, you will now notice a third option available in the display controller (in addition to table and graph), when viewing a 2-way analysis – a stacked bar plot.\nStacked Bars When viewing a 2-way analysis, the display controller now offers two options for graphs – a grouped bar chart (seen above), as well as stacked bars. Stacked bars offer another way to see the data and make comparisons, and they offer greater information density, allowing you to make comparisons across more groups.\nYou can toggle the base used for the stacked bars (i.e. whether the second variable is shown relative to the first variable or relative to the base as a whole), using the percentage-direction control. Time plots While time plots are not new to Crunch, we’ve made some major improvements. In addition to increased legibility, you can now click categories in the axis to hide them from the graph, or double-click one to show only that category. Hovering on the graph lets you see the value at any point along the line, allowing you to see broad trends or to zero in on individual values.\nProxima Nova: New look, new typeface Eagle-eyed Crunch users may have noticed that our type face has changed. After much consideration, we’ve decided to switch from Avenir to Proxima Nova. We find Proxima Nova to be more legible through a wider range of sizes, giving us more options in our design of tables, graphs, and the interface as a whole.\nMore to come We have more improvements and additions to our visualizations planned for the coming months. We’d love to hear what you think about these updates, as well as anything you’d like to see us add over at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/visual-updates/","tags":["graphs","design"],"title":":bar_chart: New Header, New Font, New Graphs :chart_with_upwards_trend: "},{"categories":["feature"],"contents":"Lately we’ve been focusing on ways to make it easier for data owners to manage data for their clients. After all, Crunch isn’t just for analyzing data, it’s a tool for making everything about delivering data to clients faster, smoother, and more powerful.\nTo that end, we’ve recently developed a draft and publish feature that allows data owners to make significant changes to data accessible to their clients with minimal interruption to how those clients interact with the data. Here’s how it works.\nCreating a Draft Open dataset properties of a dataset you are currently editing; you’ll see the Draft button on the right side of the screen.\nClick Create Draft to create and open a draft of the current dataset. Now you can append new rows of data, reorganize variables, create new variables, and edit dataset and variable metadata freely, and your clients won’t see your changes until you are ready. The draft dataset is automatically made available to others who have edit permissions on the current dataset, so multiple editors can make changes collaboratively or allow other stakeholders to review and sign off on changes. Other editors will see the draft marked with the draft label.\nWhile a draft exists, we prevent the original and draft datasets from getting out of sync by warning anyone who attempts to edit the original and pointing them to the draft. Additionally, if you find that you are not happy with the changes you’ve made, you can simply delete the draft dataset and start over again by creating a new draft.\nPublishing Once you are satisfied with the draft, your changes can be published by returning to dataset properties in the draft and clicking Publish. The original dataset will be updated with the changes from the draft and the draft will be deleted.\nWe are confident this feature will make managing data for your clients a better experience for you and for them. If you have any feedback about draft and publish (or anything else!), please don’t hesitate to let us know at support@crunch.io.\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/draft-and-publish/","tags":["draft and publish","clients"],"title":"Deliver New Data When You’re Ready"},{"categories":["general"],"contents":"At Crunch.io, we\u0026rsquo;re fervent believers in automation. If something requires a human to remember to do an extra manual step, it won\u0026rsquo;t happen consistently. We automate test running so that we don\u0026rsquo;t have to fix the same bug twice. We write code to do tedious tasks so that we can devote our mental energy to harder problems. We automate processes and policies so that developers don\u0026rsquo;t have remember the right things to do—the build and continuous-integration systems guide us.\nOccasionally we find an area where we are doing manual, menial tasks, and someone will carve out some time to automate them away. Recently we noticed that our API documentation wasn\u0026rsquo;t consistently being updated. It wasn\u0026rsquo;t that developers were failing to write documentation updates with each change—that part is integrated with our build and review process. Rather, the updates were to markdown files, but the static site generator that turned them into HTML wasn\u0026rsquo;t being run regularly.\nGitHub builds Jekyll sites automatically, and we use it for some other pages. But this one, while in Ruby, required an extra build step. And we don\u0026rsquo;t use Ruby in production and don\u0026rsquo;t have any Ruby developers on the team, so there was a nontrivial setup cost associated with being able to build the docs website. Some of us (on OSX/macOS) struggled to get a working Ruby setup. So no one really wanted to mess with it.\nPlus, someone had to remember to take action when there were changes to the documentation markdown. Even the best multitaskers among us struggled to keep track consistently. As a result, the published documentation was often only updated when someone asked us about an API that we knew was documented but didn\u0026rsquo;t show up in our api reference.\nThat situation was not improving on its own, and as we were starting to add another static site (this blog), also using GitHub Pages and also not using Jekyll—it uses Hugo—we figured it was time to learn how to automate away this build step.\nAutomating the site build Our goal: automatically build the site and deploy on GitHub Pages using Travis-CI. On each push to the master branch, build it, commit the built code to the gh-pages branch, and push that. GitHub Pages then updates what it is serving.\nThere are lots of blog posts about how to use Travis to build your static site. Many of them were helpful. Some gave bad advice. None were complete enough to just drop in and use. In the end, it took nine attempts to get the build-and-publish working for the API docs and ten attempts for the dev blog. The following discussion synthesizes the useful parts of those posts and adds (or emphasizes differently) the parts that we found essential. The discussion does assume familiarity with GitHub, Travis-CI, and static-site generators, so if you need more context on those, start with those other blog posts (or Google).\n1. Make a GitHub API key and encrypt it Your build script needs more access to the repository on GitHub than Travis typically does—it needs to be able to push. To allow this, generate an API key for this job, encrypt it, and add it to the .travis.yml.\nFirst, go to the GitHub site and generate a new token. You only need to give it access to the public_repo scope because your GitHub Pages repository needs to be public anyway.\nOnce you have that, encrypt it using travis\u0026rsquo;s Ruby library (yes, you still need a functioning Ruby environment, but only this once). See their instructions. Note that you\u0026rsquo;re not just encrypting the API token, you\u0026rsquo;re encrypting the pair of NAME=tokenstring, so remember that variable name for use in your script. To keep with the examples here (and borrowing from somewhere else on the internet), we did:\ngem install travis travis encrypt GH_TOKEN=token --add where token is the string copied from the GitHub page when the token was generated. Do this in the directory of your git repository, and the --add it will add it to the .travis.yml file for you.\n2. Create an orphan gh-pages branch In order to set \u0026ldquo;gh-pages\u0026rdquo; as the branch from which to serve the website, the branch needs to exist. And you don\u0026rsquo;t want or need it to have any of your markdown and theme code—you just want it to have the generated site. So, create an empty \u0026ldquo;orphan\u0026rdquo; branch called \u0026ldquo;gh-pages\u0026rdquo; and push that. This post has a simple explanation; here is some sample code that\u0026rsquo;s four lines too long.\nOnce you\u0026rsquo;ve pushed, you can turn on GitHub Pages. Now you\u0026rsquo;re ready to start composing the .travis.yml file that will drive the build.\n3. Re-clone the repository Travis will as a matter of course clone your github repository and checkout the current branch. Unfortunately, for efficiency, it only clones the active commit—there\u0026rsquo;s no branch history, and importantly, no other branches. You need to be able to build on master, then checkout gh-pages and commit the build artifacts there. In order to do this, clone the repository again and get the full tree. So this goes in one of the sections that runs code:\n- git clone https://${GH_TOKEN}@github.com/$TRAVIS_REPO_SLUG.git $TRAVIS_REPO_SLUG 4. Run only on the master branch We don\u0026rsquo;t want any development branches to be built and pushed to our production site automatically. And moreover, if the Travis workflow is build, commit, and push to gh-pages, each build would kick off another build if we didn\u0026rsquo;t restrict it. So this goes in the .travis.yml:\nbranches: only: - master 5. Add some git config The commit will fail if it doesn\u0026rsquo;t have a username. You could inline it with the commit, but it reads more cleanly if you set them up before.\n- git config user.email \u0026quot;you@example.com\u0026quot; - git config user.name \u0026quot;You\u0026quot; 6. On commit, pass if there are no changes If there are no changes, git commit will exit with an error code, which will terminate your script and mark your build as failed. Normally, there will be changes to commit, but sometimes, like when you\u0026rsquo;re tweaking your .travis.yml to get the build to work, there won\u0026rsquo;t be. However, if you add || true to the end of the line, the script will continue to evaluate. So we added that to the git commit and git push lines.\n7. Push quietly A few blog posts recommended adding the --quiet flag to the git push command, and/or to redirect the standard output to /dev/null, because otherwise it would print your GitHub token, thus defeating the purpose of encrypting it in step 1. Eventually someone realized that this was a security vulnerability by which tokens could be harvested from Travis logs. Consequently, Travis has presumably fixed this so that push doesn\u0026rsquo;t print your token anymore, so it\u0026rsquo;s likely fine to omit this detail now, but we\u0026rsquo;ve left the \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 in there anyway—it\u0026rsquo;s not hurting anything, and we weren\u0026rsquo;t looking at the push log anyway once we got the flow working.\nWalking through the build scripts Here are the end results. For the API docs, we use a Ruby container, install the bundler package, do a fresh clone of the repository so we get all the branches, and then install necessary dependencies. In the build script called next, the HTML and other static files are generated. Then we checkout the gh-pages branch, delete the old static files, and copy in the ones we just built. After that, commit, push, and the site is updated.\nFor the dev blog, the flow is a little different: we use Hugo (golang) instead of a Ruby library, and instead of pushing to gh-pages, we copy the built blog to serve as a subdirectory of our company website, which is hosted in a different repository. (We do also publish a version to gh-pages, a holdover from our initial testing process, so that\u0026rsquo;s woven in the script too, but it\u0026rsquo;s not a necessary part.)\nThere are a few Hugo-specific features in the dev blog build as well. First, the \u0026ldquo;theme\u0026rdquo; is not part of our repository, so we need to install it by cloning it from GitHub as well. (Note that this means that you should be sure to add the \u0026ldquo;themes\u0026rdquo; directory to your .gitignore file, as well as the \u0026ldquo;public\u0026rdquo; directory to which the built site gets generated.) Second, as this blog notes at the very bottom, by some quirk feature of how Travis builds go projects, the Hugo build will fail unless you provide a Makefile, which can be empty. So, touch Makefile and commit before you throw the job up on Travis.\nFinal observations Script or YAML? Some blogs proposed putting your build script into a .sh file that the .travis.yml file invokes. We didn\u0026rsquo;t find that to help anything. Unless you\u0026rsquo;re planning to run your build script outside of Travis too, there doesn\u0026rsquo;t seem to be a reason to put your build steps outside of the YAML file itself. In fact, it just complicated things—one more file to look at to debug, not to mention that you had to deal with making the shell script executable. Either way works—one of our repos uses a script, the other is all in YAML—but all in the .travis.yml seemed simpler. It evaluates like a script.\nbefore_script, install, after_success, \u0026hellip; Travis\u0026rsquo;s YAML file supports various blocks that get evaluated sequentially. Where should the code go?\nIt doesn\u0026rsquo;t really matter. Travis-CI is designed for running automated tests. In that context, it makes sense that you have different contexts for setup, running the tests, and things that you\u0026rsquo;d only do if the tests passed, and so on. Here, we\u0026rsquo;re just running a script. Organize your script in a way that makes sense to you, but you could put everything in install, or script, or whatever, and it should run just the same.\nJust automate it. Even if it takes you nine tries to get the Travis build set up correctly, that\u0026rsquo;s time well spent. Automation isn\u0026rsquo;t just about saving time: it\u0026rsquo;s about saving mental energy, and about making sure that important things happen without having to remember to do them. After setting up these jobs on Travis, we can much more easily push updates to our static sites and don\u0026rsquo;t have to remember to do an extra build step. That frees us to build more cool stuff!\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/blog/building-the-blog-on-travis/","tags":["automation"],"title":"Using Travis-CI to Build Static Sites"},{"categories":["feature"],"contents":"We first released the tab book feature a while back, and since then, we’ve collected a number of great suggestions for how to enrich the feature. Tab books produce a static set of tables out of many variables and put results in an Excel sheet, for offline use when you don’t need interactive features like new filters or different weights. Our recent release includes several of those enhancements, most of which are new options available to you in the “export tab book” panel.\nExport all on a single page The first new option is page layout. A common request we received was to be able to export all tables in a tab book to a single sheet in the Excel workbook, rather than exporting each table to its own worksheet. While having each table in its own sheet might be more readable when you’re looking at just one, it is difficult in Excel to click through the tabs in a workbook to scan through the whole tab book. For browsing lots of results in Excel, scrolling down a single worksheet is often less tedious.\nThe default of one-table-per-sheet is unchanged, but to export a tab book with all tables stacked on a single Excel worksheet, toggle the “layout” setting in the export panel.\nInclude a table of contents A table of contents can also be useful when it comes to navigating a large tab book. If you choose to add a table of contents to your tab book, the first sheet will show a list of all tables in the tab book. You can click an item to navigate directly to it — to the relevant sheet if exporting to multiple sheets or to the appropriate place in the single large table if exporting to a single page. This provides another easy way to navigate through a large tab book.\nHypothesis testing Hypothesis testing provides a visual heuristic, highlighting values in crosstabs that are above or below the marginal, or average in the direction of comparison (opposite of the direction of percentaging). Because it takes into account the unweighted N of respondents in each cell, it can tell you whether differences are statistically significant or not. If you have hypothesis testing enabled in the app, when you export a tab book to Excel the cell shading and p-value key will appear in the Excel spreadsheet just as it does in the app.\nUnweighted counts Previously, if you requested a tab book with a weight applied to the dataset, the “N” or “base” row of counts beneath the tables were also weighted. These are now unweighted, as they are throughout the Crunch.io app. This change allows you to see how many rows or observations in the dataset are used to compute each cell in the tables.\nLet us know what you think If you haven’t downloaded a tab book recently, check them out. If you have suggestions for how we can improve them further, let us know!\n","permalink":"//crunch-io.github.io/crunchy/newsite/dev/features/tab-book-improvements/","tags":["tab books","exports"],"title":"Tab Book Improvements"},{"categories":null,"contents":"Create a CrunchBox with a few clicks. Deliver it in a dashboard or webpage.\n","permalink":"//crunch-io.github.io/crunchy/newsite/crunchbox/create-crunchbox/","tags":null,"title":"Create crunchbox"},{"categories":null,"contents":" Everyone works on the same data, simultaneously, in the cloud. End the version control nightmare. Scale to all your datasets, even ones with millions of respondents (rows), and thousands of variables (columns) with sub-second response Analyze with sub-second response Instantly search across all your datasets. ","permalink":"//crunch-io.github.io/crunchy/newsite/product/enterprise-scalable/","tags":null,"title":"Enterprise scalable"},{"categories":null,"contents":"","permalink":"//crunch-io.github.io/crunchy/newsite/marketing/opinion-matters/","tags":null,"title":"Opinion matters"},{"categories":null,"contents":" Empower everyone, from CMO to PhD, to analyze with an easy-to-use interface. Find insights faster. Stop pouring over hundreds of Excel tabs. No more 2-day turnarounds with DP to answer simple questions. Check awareness among female, millennial, Californians in 1 minute. Build an interactive dashboard in 5 minutes. ","permalink":"//crunch-io.github.io/crunchy/newsite/product/powerful-analytics/","tags":null,"title":"Powerful online analytics"},{"categories":null,"contents":"Nothing on this page will be visible. This file exists solely to respond to /search URL.\nSetting a very low sitemap priority will tell search engines this is not important content.\n","permalink":"//crunch-io.github.io/crunchy/newsite/search/search/","tags":null,"title":"Search Result"},{"categories":null,"contents":"Track awareness across survey waves with one click. Automatically append tracking study waves. Plot data over time.\nLearn more\n","permalink":"//crunch-io.github.io/crunchy/newsite/product/trackers-tamed/","tags":null,"title":"Trackers tamed"},{"categories":null,"contents":"This example allows you to explore American’s likelihood of voting. You can make crosstabs by a handful of Demographics, filter by two different groups, make tables, or charts, etc\u0026hellip;\n","permalink":"//crunch-io.github.io/crunchy/newsite/crunchbox/try-crunchbox/","tags":null,"title":"Try crunchbox"}]