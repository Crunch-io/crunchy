{
  "components": {
    "schemas": {
      "Account": {
        "description": "",
        "properties": {
          "id": {
            "description": "Account ID",
            "type": "string"
          },
          "logo": {
            "properties": {
              "favicon": {
                "description": "Url of favicon logo image",
                "type": "string"
              },
              "large": {
                "description": "Url of large logo image",
                "type": "string"
              },
              "small": {
                "description": "Url to small logo image",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Account name",
            "type": "string"
          },
          "palette": {
            "$ref": "#/components/schemas/Color-Palette"
          },
          "templates": {
            "properties": {
              "powerpoint": {
                "description": "Url to custom powerpoint template",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "Account",
        "type": "object",
        "x-examples": {
          "example-1": {
            "body": {
              "id": "00001",
              "logo": {
                "favicon": "",
                "large": "",
                "small": ""
              },
              "name": "Crunch",
              "palette": {
                "analysis": [
                  {
                    "Black Hats are black": {
                      "default": false,
                      "palette": [
                        "#ffa299",
                        "#9100bf",
                        "#ff6f00",
                        "#7f6702"
                      ]
                    }
                  },
                  {
                    "White Hats are not": {
                      "default": false,
                      "palette": [
                        "#9d7dc9",
                        "#7f0a00",
                        "#0074bf",
                        "#005283",
                        "#bf1001",
                        "#ffac7f",
                        "#ffac7f",
                        "#bf1001"
                      ]
                    }
                  },
                  {
                    "Just blue": {
                      "default": false,
                      "palette": [
                        "#019cff",
                        "#80cdff"
                      ]
                    }
                  },
                  {
                    "Not a new color palette": {
                      "default": true,
                      "palette": [
                        "#005283",
                        "#bf1001",
                        "#bf9a00"
                      ]
                    }
                  },
                  {
                    "New color palette": {
                      "default": false,
                      "palette": [
                        "#ff5900"
                      ]
                    }
                  }
                ]
              },
              "templates": {
                "powerpoint": "https://t.crunch.io/act_templates/account-crunch-jcfojm-powerpoint.pptx"
              }
            },
            "catalogs": {
              "applications": "https://app.crunch.io/api/account/applications/",
              "users": "https://app.crunch.io/api/account/users/"
            },
            "description": "Details for an account",
            "element": "shoji:entity",
            "self": "https://app.crunch.io/api/account/",
            "views": {
              "logo": "https://app.crunch.io/api/account/logo/",
              "templates": "https://app.crunch.io/api/account/templates/"
            }
          }
        }
      },
      "Analysis-color-palette": {
        "properties": {
          "default": {
            "description": "Is this the default color palette to use",
            "type": "boolean"
          },
          "palette": {
            "items": {
              "$ref": "#/components/schemas/Hex-color-code"
            },
            "type": "array"
          }
        },
        "title": "Analysis-color-palette",
        "type": "object"
      },
      "Brand-Palette": {
        "description": "Brand custom colors",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/Hex-color-code"
          },
          "primary": {
            "$ref": "#/components/schemas/Hex-color-code"
          },
          "secondary": {
            "$ref": "#/components/schemas/Hex-color-code"
          }
        },
        "title": "Brand palette",
        "type": "object",
        "x-examples": {
          "example-1": {
            "message": "#BAA5E7",
            "primary": "#FFAABB",
            "secondary": "#G4EEBB"
          }
        }
      },
      "Color-Palette": {
        "description": "",
        "properties": {
          "analysis": {
            "description": "Colors for data display",
            "items": {
              "properties": {
                "Color palette name": {
                  "$ref": "#/components/schemas/Analysis-color-palette"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand-Palette"
          }
        },
        "title": "Color palette",
        "type": "object",
        "x-examples": {
          "example-1": {
            "analysis": [
              {
                "Black Hats are black": {
                  "default": false,
                  "palette": [
                    "#ffa299",
                    "#9100bf",
                    "#ff6f00",
                    "#7f6702"
                  ]
                }
              },
              {
                "White Hats are not": {
                  "default": false,
                  "palette": [
                    "#9d7dc9",
                    "#7f0a00",
                    "#0074bf",
                    "#005283",
                    "#bf1001",
                    "#ffac7f",
                    "#ffac7f",
                    "#bf1001"
                  ]
                }
              },
              {
                "Just blue": {
                  "default": false,
                  "palette": [
                    "#019cff",
                    "#80cdff"
                  ]
                }
              }
            ],
            "brand": {
              "message": "#BAA5E7",
              "primary": "#FFAABB",
              "secondary": "#G4EEBB"
            }
          }
        }
      },
      "Dataset": {
        "properties": {
          "access_time": {
            "description": "Datetime this dataset was last accessed",
            "type": "string"
          },
          "account": {
            "description": "Url to the account this dataset belongs to",
            "type": "string"
          },
          "archived": {
            "description": "This dataset has been archived",
            "type": "boolean"
          },
          "creation_time": {
            "description": "Datetime dataset was created",
            "type": "string"
          },
          "current_editor": {
            "description": "Url to user specified as the current editor",
            "type": "string"
          },
          "current_editor_name": {
            "description": "Name of the user marked as the current dataset editor",
            "type": "string"
          },
          "description": {
            "description": "Dataset description",
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "id": {
            "description": "Dataset id",
            "type": "string"
          },
          "is_published": {
            "description": "Has this dataset been published",
            "type": "boolean"
          },
          "midification_time": {
            "description": "Datetime this dataset was last modified",
            "type": "string"
          },
          "name": {
            "description": "Dataset name",
            "type": "string"
          },
          "owner_id": {
            "description": "Url to this dataset's parent project",
            "type": "string"
          },
          "owner_name": {
            "description": "Name of this dataset's parent project",
            "type": "string"
          },
          "permissions": {
            "properties": {
              "edit": {
                "description": "Does authenticated user have the ability to edit this dataset",
                "type": "boolean"
              },
              "view": {
                "description": "Does authenticated user have the ability to view this dataset",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "size": {
            "properties": {
              "columns": {
                "description": "Number of columns this dataset contains",
                "type": "string"
              },
              "rows": {
                "description": "Number of rows this dataset contains",
                "type": "string"
              },
              "unfiltered_rows": {
                "description": "Number of unfiltered rows this dataset contains",
                "type": "string"
              }
            },
            "type": "object"
          },
          "start_date": {
            "type": "string"
          },
          "streaming": {
            "description": "Is data being streamed into this dataset",
            "type": "boolean"
          },
          "type": {
            "description": "Always &apos;dataset&apos; for this object type",
            "example": "dataset",
            "type": "string"
          },
          "view_of": {
            "type": "string"
          }
        },
        "title": "Dataset",
        "type": "object",
        "x-examples": {
          "example-1": {
            "access_time": "2020-03-27T23:39:30.536000+00:00",
            "account": "https://app.crunch.io/api/accounts/8f04c13804e94ca8b3cf568f8da36cf0/",
            "archived": false,
            "creation_time": "2020-03-25T20:36:10.238000+00:00",
            "current_editor": "https://app.crunch.io/api/users/df3e3c5f7ce74365960d1305373564f0/",
            "current_editor_name": "Crunch Support",
            "description": "",
            "end_date": null,
            "id": "69ec37de2efe483fb81e910ec360b97c",
            "is_published": true,
            "modification_time": "2020-04-02T14:18:20.032000+00:00",
            "name": "Just Eat BX data",
            "owner_id": "https://app.crunch.io/api/projects/70bc37797d734a868fb9bb641cbbcd80/",
            "owner_name": "Just Eat",
            "permissions": {
              "edit": false,
              "view": true
            },
            "size": {
              "columns": 6364,
              "rows": 10596,
              "unfiltered_rows": 10596
            },
            "start_date": null,
            "streaming": "no",
            "type": "dataset",
            "view_of": null
          }
        }
      },
      "Dataset-list": {
        "properties": {
          "url to dataset A": {
            "$ref": "#/components/schemas/Dataset"
          },
          "url to dataset B": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "title": "Dataset-list",
        "type": "object"
      },
      "Hex-color-code": {
        "description": "Hex (RGB) color code",
        "example": "#7f0a00",
        "title": "Hex-color-code",
        "type": "string"
      },
      "Oauth-redirect": {
        "description": "",
        "properties": {
          "authorize_url": {
            "example": "https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=71778389871-ev84c1qhkfsg2fpqd7tv0hhkrsdtqdr5.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fapp.crunch.io%2Fapi%2Fpublic%2Foauth2redirect%2F&scope=openid+profile+email&state=YRR6SCtvzwbsG9gWmssOqD0VVq3QFA&nonce=6974180560616078291587000412&login_hint=joe%40crunch.io&access_type=online",
            "format": "uri",
            "type": "string"
          },
          "email": {
            "example": "joe@gmail.com",
            "format": "email",
            "type": "string"
          },
          "method": {
            "example": "oauth",
            "type": "string"
          }
        },
        "title": "Oauth-redirect",
        "type": "object",
        "x-tags": [
          "Integrating Crunch"
        ]
      },
      "Shoji-catalog": {
        "description": "",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/Shoji-catalog-body"
          },
          "catalogs": {
            "$ref": "#/components/schemas/Shoji-catalog-list"
          },
          "description": {
            "description": "Catalog description",
            "type": "string"
          },
          "element": {
            "$ref": "#/components/schemas/Shoji-catalog-element"
          },
          "index": {
            "properties": {
              "list item A url": {
                "description": "POJO of item A contained in this catalog",
                "type": "object"
              },
              "list item B url": {
                "description": "POJO of item A contained in this catalog",
                "type": "object"
              }
            },
            "type": "object"
          },
          "self": {
            "description": "Url to this api endpoint",
            "format": "uri",
            "title": "Shoji self",
            "type": "string"
          },
          "urls": {
            "$ref": "#/components/schemas/Shoji-url-list"
          },
          "views": {
            "$ref": "#/components/schemas/Shoji-view-list"
          }
        },
        "title": "Shoji catalog",
        "type": "object",
        "x-examples": {}
      },
      "Shoji-catalog-body": {
        "properties": {
          "access_time": {
            "description": "Time catalog was last accessed",
            "type": "string"
          },
          "description": {
            "description": "Catalog description",
            "type": "string"
          },
          "modification_time": {
            "description": "Datetime catalog was last modified",
            "type": "string"
          },
          "name": {
            "description": "Catalog name",
            "type": "string"
          },
          "owner": {
            "description": "Url to catalog owner's user details",
            "type": "string"
          },
          "owner_id": {
            "description": "Url to catalog owner's user details",
            "format": "uri",
            "type": "string"
          },
          "permissions": {
            "properties": {
              "edit": {
                "description": "Is authenticated user allowed to edit catalog",
                "type": "boolean"
              },
              "view": {
                "description": "Is authenticated user allowed to view catalog",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "title": "Shoji catalog body",
        "type": "object"
      },
      "Shoji-catalog-element": {
        "description": "Always &apos;shoji:catalog&apos; for this object",
        "title": "Shoji catalog element",
        "type": "string",
        "x-examples": {
          "example-1": "shoji:catalog"
        }
      },
      "Shoji-catalog-list": {
        "properties": {
          "sub-catalog A url": {
            "description": "Url to this sub-catalog",
            "format": "uri",
            "type": "string"
          },
          "sub-catalog B url": {
            "description": "Url to this sub-catalog",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "Shoji catalog list",
        "type": "object"
      },
      "Shoji-entity": {
        "properties": {
          "body": {
            "description": "A plain-old javascript object (POJO) containing the contents of this entity",
            "type": "object"
          },
          "element": {
            "default": "shoji-entity",
            "description": "Type of shoji element this is",
            "type": "string"
          },
          "self": {
            "description": "Url for this entity",
            "type": "string"
          }
        },
        "required": [
          "element",
          "self",
          "body"
        ],
        "title": "Shoji entity",
        "type": "object",
        "x-tags": [
          "Shoji"
        ]
      },
      "Shoji-entity-element": {
        "description": "Always &apos;shoji:entity&apos; for this object",
        "title": "Shoji entity element",
        "type": "string",
        "x-examples": {
          "example-1": "shoji:entity"
        }
      },
      "Shoji-self": {
        "description": "Url to this api endpoint",
        "format": "uri",
        "title": "Shoji self",
        "type": "string"
      },
      "Shoji-url-list": {
        "properties": {
          "name of url A": {
            "description": "Url A",
            "format": "uri",
            "type": "string"
          },
          "name of url B": {
            "description": "Url B",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "Shoji url list",
        "type": "object"
      },
      "Shoji-view-element": {
        "description": "Always &apos;shoji:view&apos; for this object",
        "title": "Shoji view element",
        "type": "string",
        "x-examples": {
          "example-1": "shoji:view"
        }
      },
      "Shoji-view-list": {
        "properties": {
          "url to view A": {
            "description": "Url to this view",
            "format": "uri",
            "type": "string"
          },
          "url to view B": {
            "description": "Url to this view",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "Shoji view list",
        "type": "object"
      },
      "User": {
        "enum": [
          "pwhash",
          "oauth"
        ],
        "example": "pwhash",
        "properties": {
          "account_permissions": {
            "properties": {
              "admin_account": {
                "description": "Is user an account administrator",
                "type": "boolean"
              },
              "alter_users": {
                "description": "Can user edit other users",
                "type": "boolean"
              },
              "create_datasets": {
                "description": "Can user create datasets",
                "type": "boolean"
              },
              "create_users": {
                "description": "Can user create other users",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "creation_time": {
            "description": "Datetime user was created",
            "type": "string"
          },
          "email": {
            "description": "User's email address",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "User ID",
            "type": "string"
          },
          "id_method": {
            "description": "Authentication method for this user",
            "type": "string"
          },
          "id_provider": {
            "description": "If user has oauth authentication, which oauth provider to use",
            "type": "string"
          },
          "name": {
            "description": "User's full name",
            "type": "string"
          },
          "preferences": {
            "description": "User preferences",
            "properties": {
              "datasetDisplaySettings": {
                "type": "object"
              },
              "displaySettings": {
                "type": "object"
              },
              "dsVisibleProps": {
                "type": "object"
              },
              "features": {
                "type": "object"
              },
              "notificationsReadDate": {
                "format": "date-time",
                "type": "string"
              },
              "notificationsSnoozeDate": {
                "format": "date-time",
                "type": "string"
              },
              "openedDecks": {
                "type": "object"
              },
              "projectBrowser": {
                "type": "object"
              },
              "projectId": {
                "format": "uri",
                "type": "string"
              },
              "search_settings": {
                "type": "object"
              },
              "varCardSettings": {
                "type": "string"
              }
            },
            "type": [
              "string",
              "object"
            ]
          }
        },
        "title": "User",
        "type": "object",
        "x-examples": {
          "example-1": {
            "account_permissions": {
              "admin_account": false,
              "alter_users": false,
              "create_datasets": true,
              "create_users": false
            },
            "creation_time": "2019-06-19T15:29:06+00:00",
            "email": "sim-editor-1@crunch.io",
            "id": "f94d0f8486f14689b1c9fdd982d51700",
            "id_method": "pwhash",
            "id_provider": null,
            "name": "Sim Editor 1",
            "preferences": {
              "datasetDisplaySettings": {
                "displayArchivedDatasets": true
              },
              "displaySettings": {
                "columnSignificance": null,
                "countsOrPercents": "percent",
                "decimalPlaces": 0,
                "geoChart": true,
                "percentageDirection": "colPct",
                "populationMagnitude": 3,
                "separateOrCombined": "separate",
                "showCategoriesSubtotals": "both",
                "showDescription": true,
                "showEmpty": false,
                "showMean": false,
                "showSignif": false,
                "showValueLabels": false,
                "showVisualization": true,
                "simpleOrExtended": "simple"
              },
              "dsVisibleProps": {
                "access_time": true,
                "modification_time": true,
                "name": true
              },
              "features": {},
              "notificationsReadDate": "2020-04-16T20:04:05.281Z",
              "notificationsSnoozeDate": null,
              "openedDecks": {
                "018ca6872e0e4b5b9cdc0745f4b11ef8": "https://app.crunch.io/api/datasets/018ca6872e0e4b5b9cdc0745f4b11ef8/decks/d333732f3aed4f95ac3e8a27cdcf03af/",
                "0700211987ee4599a9fa0924a58c9af0": "https://app.crunch.io/api/datasets/0700211987ee4599a9fa0924a58c9af0/decks/2b5ec4e80fcb42358d3e4e764b1319cb/",
                "0be895b02a054e0e9e742b95ebdcfca0": "https://app.crunch.io/api/datasets/0be895b02a054e0e9e742b95ebdcfca0/decks/c3a7ca0a71904afeb9624fb713dad354/",
                "2ff0e33046984f838a4cb330291d2edb": "https://app.crunch.io/api/datasets/2ff0e33046984f838a4cb330291d2edb/decks/26887165af584599a98ba51cb12a6811/",
                "4c44283be4b24942ad11e8363e054cc3": "https://app.crunch.io/api/datasets/4c44283be4b24942ad11e8363e054cc3/decks/27572276d8d848bbaaeef361fe6fc123/",
                "6284ae2013ae4f6bbb0fc8eaa606d7e3": "https://app.crunch.io/api/datasets/6284ae2013ae4f6bbb0fc8eaa606d7e3/decks/7bccfa13b3ff42a29a1be7032f7f4d2c/",
                "68f6997042ed4f19b536fa7b6daf1e2f": "https://app.crunch.io/api/datasets/68f6997042ed4f19b536fa7b6daf1e2f/decks/c658efaf87c945d892b68ee950881a4f/",
                "a2223646a2854fbf98495f6dc3e264b4": "https://app.crunch.io/api/datasets/a2223646a2854fbf98495f6dc3e264b4/decks/f42eac179f6d47ecb698f758e49895c5/",
                "d682f3f648c6473ea0b79fb2b23d4acb": "https://app.crunch.io/api/datasets/d682f3f648c6473ea0b79fb2b23d4acb/decks/59e851c6a5e84da0b473ef95695795a7/",
                "eb4ea0e51e5e45caabebdb75c5147db4": "https://app.crunch.io/api/datasets/eb4ea0e51e5e45caabebdb75c5147db4/decks/c3a7ca0a71904afeb9624fb713dad354/"
              },
              "projectBrowser": {},
              "projectId": "https://app.crunch.io/api/projects/d22b37e0258a4986b29598fc79ccc24f/",
              "search_settings": {
                "grouping": "datasets",
                "matchMode": "any-terms",
                "scope": null,
                "timeCriteria": null,
                "timeRange": null,
                "view": "ranked"
              },
              "varCardSettings": {}
            }
          }
        }
      },
      "subdomain-configuration": {
        "description": "subdomain configuration",
        "properties": {
          "logo": {
            "properties": {
              "favicon": {
                "description": "Url of favicon image",
                "type": "string"
              },
              "large": {
                "description": "Url of large logo image",
                "type": "string"
              },
              "small": {
                "description": "Url of small logo image",
                "type": "string"
              }
            },
            "type": "object"
          },
          "manifest": {
            "type": "object"
          },
          "name": {
            "description": "Company name",
            "type": "string"
          },
          "oauth_redirect": {
            "description": "User logging into this subdomain will use oauth authentication",
            "type": "boolean"
          },
          "palette": {
            "description": "Custom color palette",
            "type": "object"
          }
        },
        "title": "Subdomain configuration",
        "type": "object",
        "x-examples": {
          "example-1": {
            "logo": {
              "favicon": "https://s.crunch.io/act_app_icons/mycompany-kyzdnb-favicon.ico",
              "large": "https://s.crunch.io/act_app_icons/mycompany-wcaran-large.png",
              "small": "https://s.crunch.io/act_app_icons/mycompany-nchvcz-small.png"
            },
            "manifest": {},
            "name": "My Company",
            "oauth_redirect": true,
            "palette": {}
          }
        },
        "x-tags": [
          "OEM"
        ]
      }
    },
    "securitySchemes": {
      "Access Token": {
        "description": "Enter Crunch access token received from login api endpoint:",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "Developer API for Crunch.io\n\n# Viewing options\n* View this documentation [with navigation](https://crunch.io/api/reference)\n* View this documentation [without navigation](https://crunch.io/api/reference-nonav)\n* Download the [Crunch API OpenApi 3.0 Specification](https://app.crunch.io/api/public/openapi/)\n\n# API conventions\n\nThe Crunch REST API follows some common conventions across all endpoints. You can assume these to be the case except where explicitly documented otherwise.\n\n## Successful requests\nSuccessful GET requests return 200 (OK) status with Content-Type: application/json response content.\n\nPATCH is generally preferred for partial updating of resources, though some endpoints do support PUT. A successful request returns 204 (No Content) status.\n\nPOST is used to create entities on the server. The URL to the created entity is returned in the Location response header, and the response status is either 201 (Created) or 202 (Accepted).\n\n202 (Accepted) is used for requests that continue to process outside of the request cycle; for example, import or export jobs that may be long running and benefit from reporting progress to clients. See Progress for how to handle the 202 response content. Requests that would otherwise return 201 (Location) will still include the Location header in the 202 response; requests that would otherwise return 204 (No Content) will have no additional response headers.\n\n## Unsuccessful requests\n\u201cBad\u201d requests returning with a 4xx status may contain JSON response content with an error message.\n\nUnauthenticated requests to non-public resources return 401 (Unauthorized).\n\nAuthenticated but unauthorized responses return 404 (Not Found) rather than 403 (Forbidden) in cases where returning 403 would leak information about the existence of resources. The 403 response is reserved for cases when, for example, a user is authorized to GET a resource but not PATCH it.\n\nThe 409 (Conflict) response is used when the request may be retried and may succeed if changes are first made at a different resource. Example: when a user who has edit privileges on a dataset but is not the \u201ccurrent editor\u201d attempts to PATCH a dataset resource.\n\n## Error responses\nTo avoid duplicating error responses on every endpoint description, the most common responses are listed here and only any additional, endpoint-specific responses will be documented with each api endpoint.\n\n### HTTP status codes\n| Status Code | Description |\n| :-: | :-- |\n| 400 | Bad request, invalid input |\n| 401 | Invalid access token |\n| 403 | Account locked - please contact Crunch support |\n\n## Deprecated endpoints\nWhen API resources are deprecated, responses will contain a Warning header with a message about the deprecation and a recommendation for upgrading. Our client libraries look for this response header and will alert you to upgrade your version of the library if you receive a response with this header.\n\nEndpoints that have been removed respond with a 410 (Gone) status, optionally with a message instructing you where to look instead.\n\n# API response envelopes\nCrunch API endpoints do not return plain old javascript objects (POJOs) directly but instead deliver POJOs inside a property of machine-readable custom envelopes that facilitate endpoint exploration and traversal. Click here to read the [envelope spec](https://bitbucket.org/fumanchu/shoji/src/default/spec.txt).\n\nUsing crunch api envelopes can be summarized like this:\n```javascript\nlet data = {}\nswitch (response.element) {\n  case 'shoji:entity':\n    data = response.body\n    break\n  case 'shoji:catalog':\n    data = response.index\n    break\n  case 'shoji:view':\n    data = response.value\n    break\n}\n```\n\n## ENTITY envelope\nA Shoji entity is identified by `element: \"shoji:entity\"`. Its principal attribute is the `body` key, which is an object containing the attributes that describe the entity.\n\n## CATALOG envelope\nA catalog is identified by `element: \"shoji:catalog\"` with its principal attribute being `index` that contains an object keyed by the URLs of the entities it contains and for each key an object (tuple) with attributes from the referenced entity.\n\nShoji catalogs are **not** ordered. For its ordered representations they may provide an `orders` set of Shoji order resources.\n\n## VIEW envelope\nA Shoji view is identified by `element: \"shoji:view\"` with its principal attribute being `value`. This can contain any arbitrary JSON object.\n\n## ORDER envelope\nShoji orders are identified by `element: \"shoji:order\"`. The principal attribute is the `graph` key which is an array containing the order of present resources.\n\nA shoji order may be associated with a catalog. In such case it will contain a subset or totality of the entities present in the catalog. The catalog remains as the authoritative source of available entities.\n\nAny entity not present on the order but present in the catalog may be considered to belong at the bottom of the root of the graph in an arbitrary order, or may be excluded from view.\n",
    "title": "Crunch API",
    "version": "1.1",
    "contact": {
      "email": "support@crunch.io",
      "name": "Crunch Support",
      "url": "https://help.crunch.io"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/public/": {
      "get": {
        "description": "Lists all the options available to non authenticated requests.",
        "operationId": "get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "config": "https://app.crunch.io/api/public/config/",
                      "description": "Lists all the options available to non authenticated requests",
                      "element": "shoji:catalog",
                      "self": "https://app.crunch.io/api/public/",
                      "urls": {
                        "config_url": "https://app.crunch.io/api/public/config/"
                      },
                      "views": {
                        "change_email": "https://app.crunch.io/api/public/change_email/",
                        "inquire": "https://app.crunch.io/api/public/inquire/",
                        "login": "https://app.crunch.io/api/public/login/",
                        "oauth2redirect": "https://app.crunch.io/api/public/oauth2redirect/",
                        "password_change": "https://app.crunch.io/api/public/password_change/",
                        "password_reset": "https://app.crunch.io/api/public/password_reset/",
                        "signup": "https://app.crunch.io/api/public/signup/",
                        "signup_resend": "https://app.crunch.io/api/public/signup_resend/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "config_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Urls",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "change_email": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "inquire": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "login": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "oauth2redirect": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_change": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_reset": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "signup": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "signup_resend": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "PublicGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Unauthenticated urls",
        "tags": [
          "Catalogs"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const { urls, views } = await fetch(\n  &apos;https://app.crunch.io/api/public/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n   }\n  })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/public/config/": {
      "get": {
        "description": "Returns a subdomain's configuration, if configured. If none exists, the body will be empty.\n\n**NOTE**: This api request is designed to run against a **company subdomain** not against `app.crunch.io`.\n\n`https://yougov.crunch.io/api/public/config/`\n\nAPI response.body contains the subdomain\u2019s current configuration. if no configuration exists, response.body will be an empty object.",
        "operationId": "get-public-config",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "logo": {
                          "favicon": "https://s.crunch.io/act_app_icons/mycompany-kyzdnb-favicon.ico",
                          "large": "https://s.crunch.io/act_app_icons/mycompany-wcaran-large.png",
                          "small": "https://s.crunch.io/act_app_icons/mycompany-nchvcz-small.png"
                        },
                        "manifest": {},
                        "name": "My Company",
                        "oauth_redirect": true,
                        "palette": {}
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/public/config/"
                    }
                  }
                },
                "schema": {
                  "default": {},
                  "properties": {
                    "body": {
                      "default": {},
                      "examples": [
                        {
                          "logo": {
                            "favicon": "https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico",
                            "large": "https://s.crunch.io/act_app_icons/yougov-wcaran-large.png",
                            "small": "https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png"
                          },
                          "manifest": {},
                          "name": "YouGov",
                          "oauth_redirect": true,
                          "palette": {}
                        }
                      ],
                      "properties": {
                        "logo": {
                          "default": {},
                          "examples": [
                            {
                              "favicon": "https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico",
                              "large": "https://s.crunch.io/act_app_icons/yougov-wcaran-large.png",
                              "small": "https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png"
                            }
                          ],
                          "properties": {
                            "favicon": {
                              "default": "",
                              "examples": [
                                "https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico"
                              ],
                              "type": "string"
                            },
                            "large": {
                              "default": "",
                              "examples": [
                                "https://s.crunch.io/act_app_icons/yougov-wcaran-large.png"
                              ],
                              "type": "string"
                            },
                            "small": {
                              "default": "",
                              "examples": [
                                "https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "manifest": {
                          "default": {},
                          "examples": [
                            {}
                          ],
                          "properties": null,
                          "type": "object"
                        },
                        "name": {
                          "default": "",
                          "examples": [
                            "YouGov"
                          ],
                          "type": "string"
                        },
                        "oauth_redirect": {
                          "default": false,
                          "examples": [
                            true
                          ],
                          "type": "boolean"
                        },
                        "palette": {
                          "default": {},
                          "examples": [
                            {}
                          ],
                          "properties": null,
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "element": {
                      "default": "",
                      "examples": [
                        "shoji:entity"
                      ],
                      "type": "string"
                    },
                    "self": {
                      "default": "",
                      "examples": [
                        "https://yougov.crunch.io/api/public/config/"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "Subdomain configuration",
        "tags": [
          "Account subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://yougov.crunch.io/api/public/config/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const companyConfiguration = await fetch(\n  &apos;https://yougov.crunch.io/api/public/config/&apos;, {\n   method: &apos;GET&apos;\n  })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body);",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/public/crunchbox/preview/": {
      "parameters": [],
      "post": {
        "description": "A CrunchBox represents a snapshot of a crunch dataset. These snapshots are intended for public proliferation and therefore the endpoints for interacting with this data is housed under the unauthenticated API path.\n\nThe preview endpoint is used to preemptively initiate rendering a given CrunchBox configuration to a raster image. This image will be requested by social network platform crawlers during construction of the post share preview. The preview-rendering process can be time-consuming. Therefore, it is preferable to initiate it as soon as is reasonable before a request for the image data.\n\nThis endpoint returns no data.",
        "operationId": "post-crunchbox-preview",
        "parameters": [
          {
            "description": "Url to Crunchbox widget",
            "in": "query",
            "name": "data",
            "schema": {
              "default": "https://s.crunch.io/widget/index.html#/ds/a1b2c3d4e5f6g7h8/row/000001/column/000000",
              "example": "",
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": ""
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {}
          }
        },
        "security": [],
        "summary": "Generate Crunchbox preview",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/public/crunchbox/preview/?data=https%3A%2F%2Fs.crunch.io%2Fwidget%2Findex.html%23%2Fds%2Fa1b2c3d4e5f6g7h8%2Frow%2F000001%2Fcolumn%2F000000 \\\n  -d &apos;&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const url = new URL(&apos;https://app.crunch.io/api/public/crunchbox/preview/&apos;)\nurl.search = new URLSearchParams({\n  data: &apos;https://s.crunch.io/widget/index.html#/ds/a1b2c3d4e5f6g7h8/row/000001/column/000000&apos;\n})\nconst generateCrunchboxPreview = fetch(url, {\n    method: &apos;POST&apos;\n  })\n .then(response => response.status)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/public/crunchbox/share/": {
      "get": {
        "description": "A CrunchBox represents a snapshot of a crunch dataset. These snapshots are intended for public proliferation and therefore the endpoints for interacting with this data is housed under the unauthenticated API path.\n\nGenerates the HTML markup for the crunchbox sharing page containing all of the metadata necessary to satisfy the requirements of social platform crawlers to result in a rich sharing content preview. This preview is necessarily constructed as part of the request as to avoid javascript processing which will be ignored by these crawlers.\n\nSee: https://developers.facebook.com/docs/sharing/webmasters/crawler.\n\n# Endpoint usage in HTML file\n```html\n<html>\n<head>\n    <title>Link to CrunchBox</title>\n</head>\n<body>\nClick here to\n<a target=&apos;_blank&apos;\n   href=&apos;https://app.crunch.io/api/public/crunchbox/share/?data=%2F%2Fs.crunch.io%2Fwidget%2Findex.html%23%2Fds%2F72c27f64a12028b887d7cae248143b6b%2Frow%2F000886%2Fcolumn%2F000480%3Fviz%3DstackedBarPlot%26amp%3Bcp%3Dpercent%26amp%3Bdp%3D0%26amp%3Bgrp%3Dstack&ref=https%3A%2F%2Fwww.whitehouse.gov/&apos;>view\n    CrunchBox</a>.\n</body>\n</html>\n```",
        "operationId": "get-crunchbox-share",
        "parameters": [
          {
            "description": "CrunchBox widget url",
            "in": "query",
            "name": "data",
            "required": true,
            "schema": {
              "default": "//s.crunch.io/widget/index.html#/ds/d4b2945f727f4eccbc31544ddabf9fa4?viz=groupedBarPlot&cp=percent&dp=0&grp=stack",
              "type": "string"
            }
          },
          {
            "description": "Url to use inside the CrunchBox to link user back to referring webpage",
            "in": "query",
            "name": "ref",
            "schema": {
              "default": "https://google.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/html": {
                "examples": {
                  "example-1": {
                    "value": "<html><head>...</head><body>...</body></html>"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "security": [],
        "summary": "Share Crunchbox html",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/crunchbox/share/?data=%2F%2Fs.crunch.io%2Fwidget%2Findex.html%23%2Fds%2Fd4b2945f727f4eccbc31544ddabf9fa4%3Fviz%3DgroupedBarPlot%26cp%3Dpercent%26dp%3D0%26grp%3Dstack&ref=https%3A%2F%2Fgoogle.com",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getCrunchboxUrl = new URL(&apos;https://app.crunch.io/api/public/crunchbox/share/&apos;)\ngetCrunchboxUrl.search = new URLSearchParams({\n  data: &apos;//s.crunch.io/widget/index.html#/ds/d4b2945f727f4eccbc31544ddabf9fa4?viz=groupedBarPlot&cp=percent&dp=0&grp=stack&apos;,\n  ref: &apos;https://google.com&apos;\n})\nconst getCrunchboxShare = await fetch(\n  getCrunchboxUrl, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/public/login/": {
      "get": {
        "description": "Every crunch user account authenticates with the crunch api via a username/password combination or via one of many customer single-signon oauth providers that Crunch integrates with.\nThis endpoint receives a crunch account username/email and returns which authentication method is required for that user account.",
        "operationId": "get-public-login",
        "parameters": [
          {
            "description": "Crunch username",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "default": "joe@gmail.com",
              "example": "joe@gmail.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "Crunch app url to redirect user to after oauth login",
            "in": "query",
            "name": "redirect_uri",
            "schema": {
              "default": "https://app.crunch.io/shared",
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/public/login/?email=fred@example.com",
                      "value": {
                        "email": "fred@example.com",
                        "method": "pwhash"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Oauth-redirect"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "Authentication method",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/login/?email=joe%40crunch.io&redirect_uri=https%3A%2F%2Fapp.crunch.io%2Fshared",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const url = new URL(&apos;https://app.crunch.io/api/public/login/&apos;)\nurl.search = new URLSearchParams({\n  email: &apos;joe@gmail.com&apos;,\n  redirect_uri: &apos;https://app.crunch.io/shared&apos;,\n})\nconst authorizationMethod = await fetch(url, {\n    method: &apos;GET&apos;\n  })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Log user in and receive an access token to be used on subsequent api requests. Nearly all interactions with the Crunch API need to be authenticated. The authentication method involves POSTing login credentials and receiving an access token. The api client should then store the access token returned and pass it in on each subsequent request in the Authorization HTTP header like this.\n\nExample header variable: `Authorization: Bearer 796f025f019ad8299337ba7b0924afbf`\n\nCrunch also supports OAuth 2.0 w/OpenID Connect or RFC 7662. However, OAuth\ndoesn't work well with unattended scripts. If your user is set up with OAuth\nand you want to create applications that use Crunch's API, contact us to set up\na secondary password. To set one yourself, POST a JSON document containing\n`{'email': 'youremail@example.com'}` to the `/api/public/password_reset/` API\nendpoint, and follow the instructions in the email you receive. No\nAuthentication is required to use this endpoint. Log out of your current Crunch\nWeb App session before clicking the reset password link in the email.\n\nWe do not recommend using OAuth to authenticate API requests outside of a\nbrowser. The redirect after the ID provider login will load the Crunch Web\nApplication, and a manual step is required to copy the authorization bearer\ntoken into the running state of the application that requests API access.\nAutomated retrieval of Bearer Tokens for Users with OAuth logins is not\ncurrently available.\n\nIf you'd like to add your OAuth OpenIDConnect or RFC7442 provider to the set of supported\nproviders, contact support@crunch.io\n",
        "operationId": "post-public-login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "Login example": {
                  "summary": "Login example",
                  "value": {
                    "email": "joe@gmail.com",
                    "password": "^IsR49LC5!%",
                    "token": true
                  }
                }
              },
              "schema": {
                "properties": {
                  "email": {
                    "description": "Crunch username",
                    "example": "joe@gmail.com",
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "description": "Crunch password",
                    "example": "^IsR49LC5!%",
                    "format": "password",
                    "type": "string"
                  },
                  "token": {
                    "default": "false",
                    "description": "True results in the access token coming back in the response body for api use. False results in api server setting access token inside httpOnly cookie for browser use.",
                    "example": "true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "access_token": "0650012b49b643b8d5a60fb209ce74a9",
                      "token_type": "Bearer"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "access_token": {
                      "default": "f1e0b74c79e85b7158e721e831f1c853",
                      "type": "string"
                    },
                    "token_type": {
                      "default": "Bearer",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "Log in",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/public/login/ \\\n  -H &apos;Content-type: application/json&apos; -d &apos;\n{\n  \"email\": \"fake.user@example.com\",\n  \"password\": \"password\",\n  \"token\": true\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const bearerToken = await fetch(\n  &apos;https://app.crunch.io/api/public/login/&apos;, {\n   method: &apos;POST&apos;,\n   body: JSON.stringify({\n         email: &apos;joe@gmail.com&apos;,\n         password: &apos;^IsR49LC5!%&apos;,\n         token: true\n   })\n  })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.access_token);",
            "syntaxLang": "javascript"
          },
          {
            "lang": "RCRUNCH SDK",
            "source": "library(crunch)\nlogin(&apos;fake.user@example.com&apos;, &apos;password&apos;)\n# See ?login for options, including how to store your credentials\n# in your .Rprofile"
          }
        ]
      }
    },
    "/public/openapi/": {
      "get": {
        "description": "Crunch API documentation as [OpenAPI Specification 3.0.3](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md) file.",
        "operationId": "get-public-openapi",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Crunch API openapi spec",
        "tags": [
          "Miscellaneous"
        ]
      }
    },
    "/progress/{task_id}/": {
      "get": {
        "description": "Progress resources provide information about the current state of a long-running server process in Crunch. Some requests at certain endpoints may return 202 status containing a progress URL in the body, at which one can monitor the progress of the request that was accepted and not yet completed.\n\nThe progress value reported here is an integer between -1 and 100. Positive progress values indicate that the job is being processed. A negative value indicates that an error occurred in processing. 0 indicates that the job has not been started. 100 indicates the task has been completed.",
        "operationId": "get-progress-taskId",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/",
                      "value": {
                        "message": "complete",
                        "progress": 100
                      },
                      "views": {
                        "result": "https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/result/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "progress": {
                          "description": "An integer between -1 and 100. Positive progress values indicate that the job is being processed. A negative value indicates that an error occurred in processing. 0 indicates that the job has not been started. 100 indicates the task has been completed.",
                          "type": "integer"
                        }
                      },
                      "title": "Value",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "result": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "ProgressTaskIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "ProgressTaskIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Task progress",
        "tags": [
          "Task Progress"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getProgressTaskId = await fetch(\n  &apos;https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/&apos;,\n{\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the task you want progress for",
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/sources/": {
      "get": {
        "description": "List data sources added by this user.",
        "operationId": "get-sources",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of data sources added by this user",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/sources/05ae98333b8c410bb5715f73bceb094a/": {
                          "description": "Source A",
                          "name": "file"
                        },
                        "https://app.crunch.io/api/sources/05ae98333b8c410bb57agf73bceb094a/": {
                          "description": "Source C",
                          "name": "file"
                        },
                        "https://app.crunch.io/api/sources/arty98333b8c410bb5715f73bceb094a/": {
                          "description": "Source B",
                          "name": "file"
                        }
                      },
                      "self": "https://app.crunch.io/api/sources/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "SourcesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List sources",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/sources/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getSources = await fetch(\n  &apos;https://app.crunch.io/api/sources/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "post": {
        "description": "Use this endpoint to upload data to Crunch. Once the data file has been uploaded to Crunch, the data contained in the file can then be added to any dataset.\n\nThe following three alternative payloads are supported.\n\n### Upload file as part of multipart/form-data POST request\n\nPOST a multipart form with an uploaded_file field containing the file to upload. A 201 (Created) response indicates success and returns the URL of the new source in its Location header.\n\nThe filename field provided for each file is used for the source name. A source added in this way receives the empty string (\u201c\u201d) as its description.\n\nWhile a multipart form request can contain multiple files, only the file contained in the uploaded_file field will be used to create a source; each source requires a separate POST request.\n\nThe Content-Type value (MIME-type) provided for the file determines the parser used for that file. Care should be taken to, for example, distinguish a CSV file (text/csv) from a plain text file (text/plain), etc.\n\n```\nPOST /sources/ HTTP/1.1\nContent-Length: 8874357\nContent-Type: multipart/form-data; boundary=df5b17ff463a4cb3aa61cf02224c7303\n\n--df5b17ff463a4cb3aa61cf02224c7303\nContent-Disposition: form-data; name=\"uploaded_file\"; filename=\"my.csv\"\nContent-Type: text/csv\n\n\"case_id\",\"q1\",\"q2\"\n234375,3,\"sometimes\"\n234376,2,\"always\"\n...\n--------\n201 Created\nLocation: /sources/{source_id}/\n```\n\n### POST a shoji:entity with a file URL as location\nA source can also be created by POSTing a shoji:entity that references the file to be used as a URL.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"location\": \"<url>\",\n    \"name\": \"Optional name\",\n    \"description\": \"Optional description\"\n  }\n}\n```\n\nThe description attribute is optional, but will appear as the description attribute on the created source.\n\n### POST a form (urlencoded or multipart/form) with a source_url field\n\nAlternately, you may POST a form with a source_url field that points to a publicly accessible URL. Both the \u201chttp\u201d and the \u201cs3\u201d scheme are supported. This endpoint will download that file synchronously and verify it as a valid source file.",
        "operationId": "post-sources",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "filename": {
                    "description": "",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/sources/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "SourcesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Must include a `location` field pointing to a publicly accessible URL\n"
                      ],
                      "message": "Must include a `location` field pointing to a publicly accessible URL",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "SourcesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Upload data to Crunch",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/sources/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postSources = await fetch(\n  &apos;https://app.crunch.io/api/sources/&apos;, {\n   method: &apos;POST&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/": {
      "get": {
        "description": "All users belong to one and only one account. Accounts provide an organization-level scope for Crunch.io customers. This endpoint returns information for the authenticated user's account including branding configuration.\n## What are account managers?\nAccount managers can administer their various users and entities and have visibility on them. A user is an account manager if their `account_permissions.admin_account=true`.",
        "operationId": "get-account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "id": "00001",
                        "logo": {
                          "favicon": "file:///crunch/act_app_icons/account--xgttlb-favicon.ico",
                          "large": "file:///crunch/act_app_icons/account--gthgbb-large.png",
                          "small": "file:///crunch/act_app_icons/account--njwexu-small.png"
                        },
                        "name": "account created for joe@gmail.com",
                        "oauth_providers": [
                          {
                            "id": "google",
                            "name": "Google auth"
                          }
                        ],
                        "palette": {
                          "analysis": [],
                          "brand": {
                            "message": "#722580",
                            "primary": "#0064a4",
                            "secondary": "#107f64"
                          }
                        },
                        "templates": {
                          "powerpoint": "file:///crunch/act_templates/account--uecowj-powerpoint.pptx"
                        }
                      },
                      "catalogs": {
                        "applications": "https://local.crunch.io:28443/api/account/applications/",
                        "datasets": "https://local.crunch.io:28443/api/account/datasets/",
                        "projects": "https://local.crunch.io:28443/api/account/projects/",
                        "teams": "https://local.crunch.io:28443/api/account/teams/",
                        "users": "https://local.crunch.io:28443/api/account/users/"
                      },
                      "description": "Details for an account",
                      "element": "shoji:entity",
                      "self": "https://local.crunch.io:28443/api/account/",
                      "views": {
                        "logo": "https://local.crunch.io:28443/api/account/logo/",
                        "templates": "https://local.crunch.io:28443/api/account/templates/"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "body": {
                      "$ref": "#/components/schemas/Account"
                    },
                    "catalogs": {
                      "$ref": "#/components/schemas/Shoji-catalog-list"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "$ref": "#/components/schemas/Shoji-self"
                    },
                    "views": {
                      "$ref": "#/components/schemas/Shoji-view-list"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Account details",
        "tags": [
          "Account"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const account = await fetch(\n  &apos;https://app.crunch.io/api/account/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n   }\n  })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body);",
            "syntaxLang": "javascript"
          }
        ]
      },
      "patch": {
        "description": "Update the brand color palette for the user's account. Only account admins are authorized to do this.\n\nYou may also specify palettes under the analysis attribute to theme your data display.",
        "operationId": "patch-account",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "palette": {
                        "analysis": [],
                        "brand": {
                          "message": "#722580",
                          "primary": "#0064a4",
                          "secondary": "#107f64"
                        }
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "palette": {
                        "additionalProperties": false,
                        "properties": {
                          "analysis": {
                            "type": "array"
                          },
                          "brand": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "primary": {
                                "type": "string"
                              },
                              "secondary": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "Brand",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "Palette",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "type": "string"
                  }
                },
                "required": [],
                "title": "AccountPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Change account color palette",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"palette\": {\n      \"analysis\": [],\n      \"brand\": {\n        \"primary\": \"#0064a4\",\n        \"secondary\": \"#107f64\",\n        \"message\": \"#722580\"\n      }\n    }\n  }\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchAccount = await fetch(\n  &apos;https://app.crunch.io/api/account/&apos;, {\n   method: &apos;PATCH&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n    \"element\": \"shoji:entity\",\n    \"body\": {\n      \"palette\": {\n        \"analysis\": [],\n        \"brand\": {\n          \"primary\": \"#0064a4\",\n          \"secondary\": \"#107f64\",\n          \"message\": \"#722580\"\n        }\n      }\n    }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/applications/": {
      "get": {
        "description": "List subdomains configured for user's account. ",
        "operationId": "get-account-applications",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/account/applications/heyenrique/": {
                          "name": "Crunch.io",
                          "subdomain": "heyenrique"
                        },
                        "https://app.crunch.io/api/account/applications/local/": {
                          "name": "Localhost development",
                          "subdomain": "local"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/applications/"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "properties": {
                        "subdomain A": {
                          "properties": {
                            "name": {
                              "description": "Name of subdomain",
                              "type": "string"
                            },
                            "subdomain": {
                              "description": "Subdomain prefix",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "subdomain B": {
                          "properties": {
                            "name": {
                              "description": "Name of subdomain",
                              "type": "string"
                            },
                            "subdomain": {
                              "description": "Subdomain prefix",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "self": {
                      "$ref": "#/components/schemas/Shoji-self"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List subdomains",
        "tags": [
          "Account subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/applications/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const subdomains = await fetch(\n  &apos;https://app.crunch.io/api/account/applications/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n   }\n  })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index);",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "post": {
        "description": "Create a new subdomain for the user's account.\n\nThe subdomain:\n\n* must be unique system-wide, case insensitive\n* can only contain letters, numbers, and - (dash)\n* must be between 3 and 32 characters in length\n* cannot start with - or a number\n\nIf the requested subdomain is unavailable or invalid, the server will return a 400 response.\n\nAttributes `name` and `subdomain` are required; `palette` and `manifest` are optional. Note that you cannot specify logos in the this request. Use the created entity\u2019s logo/ endpoint to upload the image files to the subdomain.",
        "operationId": "post-account-applications",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "joe subdomain",
                      "subdomain": "joe"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "subdomain": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "type": "string"
                  }
                },
                "required": [],
                "title": "AccountApplicationsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Create subdomain",
        "tags": [
          "Account subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/applications/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"body\": {\n    \"subdomain\": \"joe\",\n    \"name\": \"joe subdomain\"\n  },\n  \"element\": \"shoji:entity\"\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountApplications = await fetch(\n  &apos;https://app.crunch.io/api/account/applications/&apos;, {\n   method: &apos;POST&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"subdomain\": \"joe\",\n       \"name\": \"joe subdomain\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/applications/{applicationId}/logo/": {
      "get": {
        "description": "",
        "operationId": "get-account-applications-applicationId-logo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/account/applications/testsetuplogos/logo/",
                      "value": {
                        "favicon": "",
                        "large": "",
                        "small": ""
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "favicon": {
                          "type": "string"
                        },
                        "large": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "AccountApplicationsApplicationIDLogoGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List subdomain logos",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/applications/testsetuplogos/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountApplicationsApplicationIdLogo = await fetch(\n  &apos;https://app.crunch.io/api/account/applications/testsetuplogos/logo/&apos;,\n{\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the application you are working with",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "It is possible to remove the logos that have been set up. To do so, PATCH back the contents of the logo/ resource with the specific logos that need to be removed set to the null value.",
        "operationId": "patch-account-applications-applicationId-logo",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "favicon": null,
                      "large": null,
                      "small": null
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "value": {
                    "properties": {
                      "favicon": {
                        "description": "This will remove the favicon logo",
                        "type": "null"
                      },
                      "large": {
                        "description": "This will remove the large log",
                        "type": "null"
                      },
                      "small": {
                        "description": "This will remove the small logo",
                        "type": "null"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Remove subdomain logos",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/applications/{applicationId}/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"favicon\": null,\n    \"large\": null,\n    \"small\": null\n  }\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchAccountApplicationsApplicationIdLogo = await fetch(\n  &apos;https://app.crunch.io/api/account/applications/{applicationId}/logo/&apos;,\n{\n   method: &apos;PATCH&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:view\",\n     \"value\": {\n       \"favicon\": null,\n       \"large\": null,\n       \"small\": null\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "To set/change an application\u2019s logo, you can make a multipart/form-data request containing either or all of the large, small and favicon fields with the desired image files to use. GIF, JPEG, PNG and ICO image files are supported.\n\nOnly account admins are authorized to change subdomain logos.",
        "operationId": "post-account-applications-applicationId-logo",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "favicon": {
                    "description": "16x16 pixel logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "large": {
                    "description": "Large logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "small": {
                    "description": "Small logo image",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid image file"
                      ],
                      "message": "Invalid image file",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Change subdomain logos",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/applications/testsetuplogos/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: multipart/form-data&apos; \\\n  -F &apos;large=@6r7bkQxR5u6X5KEv4DsJ.png&apos; \\\n  -F &apos;favicon=@favicon.ico&apos; \\\n  -F &apos;small=@6r7bkQxR5u6X5KEv4DsJ.png&apos;",
            "syntaxLang": "bash"
          }
        ]
      }
    },
    "/account/datasets/": {
      "get": {
        "deprecated": true,
        "description": "Only account managers have access to this catalog. It is a read only shoji catalog containing all the datasets that users of this account have created (potentially very large catalog).\n\nAccount managers have implicit editor access to all the account datasets.\n",
        "operationId": "get-account-datasets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/12da1cd3659a4b4c9bb4b33a73fb7f8e/": {
                          "access_time": "1970-01-01T00:00:00+00:00",
                          "account": "https://app.crunch.io/api/accounts/5b960e63aabf40f5bb1a92240fd16fb3/",
                          "archived": false,
                          "creation_time": "2020-05-20T19:06:26.003000+00:00",
                          "current_editor": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                          "current_editor_name": "captain-59690949fbfa9f206b49e573ebef2b110267e1de985d3825fc08199f113be304",
                          "description": "",
                          "end_date": "2020-05-20T19:06:26.003000+00:00",
                          "id": "12da1cd3659a4b4c9bb4b33a73fb7f8e",
                          "is_published": true,
                          "modification_time": "2020-05-20T19:06:25.303000+00:00",
                          "name": "Dataset",
                          "owner_id": "https://app.crunch.io/api/users/29d2c9dee6964f6f89e99b791af8e913/",
                          "owner_name": "a272d8541574d7b16fec2f5216e3ad3a76b5b5118082c02a115b93ab50e872df@example.com",
                          "size": {
                            "columns": 35,
                            "rows": 8542,
                            "unfiltered_rows": 5612
                          },
                          "start_date": "2020-05-20T19:06:26.003000+00:00",
                          "streaming": "no",
                          "view_of": "https://app.crunch.io/api/datasets/60284cf788804ca3b59f1c259bf1f85e/"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/datasets/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "datasetURL": {
                          "additionalProperties": false,
                          "properties": {
                            "access_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "account": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "archived": {
                              "type": "boolean"
                            },
                            "creation_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "current_editor": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "current_editor_name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "end_date": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "is_published": {
                              "type": "boolean"
                            },
                            "modification_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "owner_id": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "owner_name": {
                              "type": "string"
                            },
                            "size": {
                              "additionalProperties": false,
                              "properties": {
                                "columns": {
                                  "type": "integer"
                                },
                                "rows": {
                                  "type": "integer"
                                },
                                "unfiltered_rows": {
                                  "type": "integer"
                                }
                              },
                              "required": [],
                              "title": "Size",
                              "type": "object"
                            },
                            "start_date": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "streaming": {
                              "type": "string"
                            },
                            "view_of": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPIDatasets12Da1Cd3659A4B4C9Bb4B33A73Fb7F8E",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountDatasetsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List account datasets",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/datasets/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountDatasets = await fetch(\n  &apos;https://app.crunch.io/api/account/datasets/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/account/logo/": {
      "parameters": [],
      "patch": {
        "description": "To remove any logos that have been set up, submit one more more image names with a null value.",
        "operationId": "patch-account-logo",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "favicon": null,
                      "large": null,
                      "small": null
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "value": {
                    "properties": {
                      "favicon": {
                        "description": "This will remove the favicon logo",
                        "type": "null"
                      },
                      "large": {
                        "description": "This will remove the large log",
                        "type": "null"
                      },
                      "small": {
                        "description": "This will remove the small logo",
                        "type": "null"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Remove account logos",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"large\": null,\n    \"small\": null,\n    \"favicon\": null\n  }\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const removeLogo = await fetch(\n  &apos;https://app.crunch.io/api/account/logo/&apos;, {\n   method: &apos;PATCH&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n    \"element\": \"shoji:view\",\n    \"value\": {\n      \"large\": null,\n      \"small\": null,\n      \"favicon\": null\n    }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Update the logos for the user's account. Only account admins are authorized to do this. Valid file extensions are GIF, JPEG, PNG and ICO image files.",
        "operationId": "post-account-logo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "favicon": {
                    "description": "16x16 pixel logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "large": {
                    "description": "Large logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "small": {
                    "description": "Small logo image",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Change account logos",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: multipart/form-data&apos; \\\n  -F &apos;large=@6r7bkQxR5u6X5KEv4DsJ.png&apos; \\\n  -F &apos;favicon=@favicon.ico&apos; \\\n  -F &apos;small=@6r7bkQxR5u6X5KEv4DsJ.png&apos;",
            "syntaxLang": "bash"
          }
        ]
      }
    },
    "/account/projects/": {
      "get": {
        "description": "This catalog is available for account managers and lists all the projects that the users have created. Account managers have implicit edit access on all projects.",
        "operationId": "get-account-projects",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/projects/8ebf23a3d45144ce810f900bb52abf11/": {
                          "description": "",
                          "id": "8ebf23a3d45144ce810f900bb52abf11",
                          "name": "__users__"
                        },
                        "https://app.crunch.io/api/projects/b63cafbbf4f94b34935eb4858f394102/": {
                          "description": "",
                          "id": "b63cafbbf4f94b34935eb4858f394102",
                          "name": "Project"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/projects/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountProjectsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List account projects",
        "tags": [
          "Projects"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/projects/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountProjects = await fetch(\n  &apos;https://app.crunch.io/api/account/projects/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/account/teams/": {
      "get": {
        "description": "This catalog is available for account managers and lists all the teams that the users have created. Account managers have implicit edit access on all teams.",
        "operationId": "get-account-teams",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/teams/0259fac5367344ceb2c3f8e30923e4ea/": {
                          "creator": "https://app.crunch.io/api/users/93ad4aaea41c4d3184c50e2799e9a67d/",
                          "id": "0259fac5367344ceb2c3f8e30923e4ea",
                          "name": "account_admin_can_add_member"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/teams/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "teamURL": {
                          "additionalProperties": false,
                          "properties": {
                            "creator": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPITeams0259Fac5367344Ceb2C3F8E30923E4Ea",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountTeamsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List account teams",
        "tags": [
          "Teams"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/teams/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountTeams = await fetch(\n  &apos;https://app.crunch.io/api/account/teams/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/account/templates/": {
      "get": {
        "description": "List the PowerPoint template configured for this account.",
        "operationId": "get-account-templates",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/account/templates/",
                      "value": {
                        "powerpoint": ""
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "powerpoint": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "AccountTemplatesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List Powerpoint template",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/templates/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountTemplates = await fetch(\n  &apos;https://app.crunch.io/api/account/templates/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "patch": {
        "description": "To remove a Powerpoint template that has been set up, submit this with a null value.",
        "operationId": "patch-account-templates",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "powerpoint": null
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "value": {
                    "properties": {
                      "powerpoint": {
                        "description": "This will remove the Powerpoint template",
                        "type": "null"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Remove Powerpoint template",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/templates/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"powerpoint\": null\n  }\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const removeTemplate = await fetch(\n  &apos;https://app.crunch.io/api/account/templates/&apos;, {\n   method: &apos;PATCH&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n    \"element\": \"shoji:view\",\n    \"value\": {\n      \"powerpoint\": null\n    }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Update the PowerPoint template for the user's account. Only account admins are authorized to do this. Must be a valid Microsoft PowerPoint file.",
        "operationId": "post-account-templates",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "powerpoint": {
                    "description": "Valid Powerpoint template file",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Change Powerpoint template",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/templates/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: multipart/form-data&apos; \\\n  -F &apos;powerpoint=@PowerpointTemplate.pptx&apos;",
            "syntaxLang": "bash"
          }
        ]
      }
    },
    "/account/users/": {
      "get": {
        "description": "List of users that belong to this account. Any account member may use this api endpoint.",
        "operationId": "get-account-users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of users that belong to this account",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/users/160d3a3c2ef64a57ba4c493503a22049/": {
                          "account_permissions": {
                            "admin_account": false,
                            "alter_users": false,
                            "create_datasets": false
                          },
                          "dataset_permissions": {
                            "edit": false,
                            "view": true
                          },
                          "email": "ae5a67a1fc647c87a2b004166789e9211c5d90f299921f1c348d6f64272f9f62@example.com",
                          "id_method": "pwhash",
                          "id_provider": null,
                          "name": "ae5a67a1fc647c87a2b004166789e9211c5d90f299921f1c348d6f64272f9f62@example.com",
                          "role_code": "viewer",
                          "role_url": "https://app.crunch.io/api/roles/accounts/aed4b97c79e544c098a96e8a2d4832db/"
                        },
                        "https://app.crunch.io/api/users/26936d5b5459497590209e7de5eab977/": {
                          "account_permissions": {
                            "admin_account": true,
                            "alter_users": true,
                            "create_datasets": true
                          },
                          "dataset_permissions": {
                            "edit": true,
                            "view": true
                          },
                          "email": "captain-5ec6eae027c9cc645fa0f18539ecc84d37936494da69ab46591baad87ef4f3a4@example.com",
                          "id_method": "pwhash",
                          "id_provider": null,
                          "name": "captain-5ec6eae027c9cc645fa0f18539ecc84d37936494da69ab46591baad87ef4f3a4",
                          "role_code": "admin",
                          "role_url": "https://app.crunch.io/api/roles/accounts/39e671336232455f989adf8c9878bf40/"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/users/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "account_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "admin_account": {
                                "type": "boolean"
                              },
                              "alter_users": {
                                "type": "boolean"
                              },
                              "create_datasets": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "AccountPermissions",
                            "type": "object"
                          },
                          "dataset_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "DatasetPermissions",
                            "type": "object"
                          },
                          "email": {
                            "type": "string"
                          },
                          "id_method": {
                            "type": "string"
                          },
                          "id_provider": {
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "role_code": {
                            "type": "string"
                          },
                          "role_url": {
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "title": "AccountUsersGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List account users",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/users/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountUsers = await fetch(\n  &apos;https://app.crunch.io/api/account/users/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "patch": {
        "description": "This api endpoint allows account admins to edit user permissions in batch. It is only possible to change the account_permissions attribute. Additionally, it is possible to delete users from the account by sending null.",
        "operationId": "post-account-users",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "value": {
                      "body": {
                        "account_permissions": {
                          "admin_account": false,
                          "alter_users": true,
                          "create_datasets": true,
                          "create_users": true
                        },
                        "projects": [
                          "https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/"
                        ],
                        "teams": [
                          "https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/"
                        ]
                      },
                      "element": "shoji:entity"
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "value": {
                    "additionalProperties": false,
                    "properties": {
                      "body": {
                        "additionalProperties": false,
                        "properties": {
                          "account_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "admin_account": {
                                "type": "boolean"
                              },
                              "alter_users": {
                                "type": "boolean"
                              },
                              "create_datasets": {
                                "type": "boolean"
                              },
                              "create_users": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "AccountPermissions",
                            "type": "object"
                          },
                          "projects": {
                            "items": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "teams": {
                            "items": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [],
                        "title": "Body",
                        "type": "object"
                      },
                      "element": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Value",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "AccountUsersPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid team URLs"
                      ],
                      "message": "Invalid team URLs",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountUsersPatchRequest",
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Update account user",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/users/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"value\": {\n    \"body\": {\n      \"account_permissions\": {\n        \"admin_account\": false,\n        \"alter_users\": true,\n        \"create_datasets\": true,\n        \"create_users\": true\n      },\n      \"projects\": [\n        \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n      ],\n      \"teams\": [\n        \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n      ]\n    },\n    \"element\": \"shoji:entity\"\n  }\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchAccountUsers = await fetch(\n  &apos;https://app.crunch.io/api/account/users/&apos;, {\n   method: &apos;PATCH&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"value\": {\n       \"body\": {\n         \"account_permissions\": {\n           \"admin_account\": false,\n           \"alter_users\": true,\n           \"create_datasets\": true,\n           \"create_users\": true\n         },\n         \"projects\": [\n           \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n         ],\n         \"teams\": [\n           \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n         ]\n       },\n       \"element\": \"shoji:entity\"\n     }\n   })\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "This api endpoint is only available to account administrators. If a user with the provided email address already exists in the application (on another account), the server will return a 400 response. It is possible to create a user that belongs to different teams or projects by including those team or project urls in the payload.",
        "operationId": "post-account-users",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": false,
                        "alter_users": true,
                        "create_datasets": true,
                        "create_users": true
                      },
                      "email": "new_user_with_role@user.com",
                      "id_method": "pwhash",
                      "id_provider": "google",
                      "projects": [
                        "https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/"
                      ],
                      "role_url": "https://app.crunch.io/api/roles/accounts/0a0c5865449a4b0aa6b13bb44bf79635/",
                      "send_invite": false,
                      "teams": [
                        "https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/"
                      ],
                      "url_base": "http://something.com/else/${token}/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-02": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": true,
                        "create_datasets": true,
                        "create_users": true
                      },
                      "email": "add_user_sets_right_role@user.com",
                      "id_method": "pwhash",
                      "send_invite": false
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-03": {
                  "value": {
                    "body": {
                      "email": "new_user@gets_rules.com",
                      "url_base": "http://something.com/else/${token}/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-04": {
                  "value": {
                    "body": {
                      "email": "a_newer@user.com"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-05": {
                  "value": {
                    "body": {
                      "email": "an_even_newer@user.com",
                      "send_invite": true,
                      "url_base": "http://something.com/else/${token}/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-06": {
                  "value": {
                    "body": {
                      "email": "user_send_invite_oauth@user.com",
                      "id_method": "oauth",
                      "id_provider": "google",
                      "send_invite": true
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-07": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "alter_users": true,
                        "create_datasets": true,
                        "create_users": true
                      },
                      "email": "add_user_sets_right_role_legacy@user.com",
                      "id_method": "pwhash",
                      "send_invite": false
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-08": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "alter_users": true,
                        "create_datasets": false
                      },
                      "email": "add_user_to@account_with_legacy_permissions.com"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-09": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": false,
                        "create_datasets": true
                      },
                      "email": "u1@add_to_projects.com",
                      "projects": [
                        "https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-10": {
                  "value": {
                    "body": {
                      "email": "u1@add_to_teams.com",
                      "teams": [
                        "https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-11": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": false,
                        "create_datasets": true
                      },
                      "email": "add_user_to@account_with_permissions.com"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "account_permissions": {
                        "additionalProperties": false,
                        "properties": {
                          "admin_account": {
                            "type": "boolean"
                          },
                          "alter_users": {
                            "type": "boolean"
                          },
                          "create_datasets": {
                            "type": "boolean"
                          },
                          "create_users": {
                            "type": "boolean"
                          }
                        },
                        "required": [],
                        "title": "AccountPermissions",
                        "type": "object"
                      },
                      "email": {
                        "type": "string"
                      },
                      "id_method": {
                        "type": "string"
                      },
                      "id_provider": {
                        "type": "string"
                      },
                      "projects": {
                        "items": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "role_url": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "send_invite": {
                        "type": "boolean"
                      },
                      "teams": {
                        "items": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "url_base": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "enum": [
                      "shoji:entity"
                    ],
                    "title": "Element",
                    "type": "string"
                  }
                },
                "required": [],
                "title": "AccountUsersPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid team URLs"
                      ],
                      "message": "Invalid team URLs",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountUsersPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create account user",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/users/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"body\": {\n    \"account_permissions\": {\n      \"admin_account\": false,\n      \"alter_users\": true,\n      \"create_datasets\": true,\n      \"create_users\": true\n    },\n    \"email\": \"new_user_with_role@user.com\",\n    \"id_method\": \"pwhash\",\n    \"id_provider\": \"google\",\n    \"projects\": [\n      \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n    ],\n    \"role_url\": \"https://app.crunch.io/api/roles/accounts/0a0c5865449a4b0aa6b13bb44bf79635/\",\n    \"send_invite\": false,\n    \"teams\": [\n      \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n    ],\n    \"url_base\": \"http://something.com/else/${token}/\"\n  },\n  \"element\": \"shoji:entity\"\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountUsers = await fetch(\n  &apos;https://app.crunch.io/api/account/users/&apos;, {\n   method: &apos;POST&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"account_permissions\": {\n         \"admin_account\": false,\n         \"alter_users\": true,\n         \"create_datasets\": true,\n         \"create_users\": true\n       },\n       \"email\": \"new_user_with_role@user.com\",\n       \"id_method\": \"pwhash\",\n       \"id_provider\": \"google\",\n       \"projects\": [\n         \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n       ],\n       \"role_url\": \"https://app.crunch.io/api/roles/accounts/0a0c5865449a4b0aa6b13bb44bf79635/\",\n       \"send_invite\": false,\n       \"teams\": [\n         \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n       ],\n       \"url_base\": \"http://something.com/else/${token}/\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/": {
      "get": {
        "description": "Lists root urls available to authenticated requests.",
        "operationId": "get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "catalogs": {
                        "dashboards": "https://app.crunch.io/api/dashboards/",
                        "datasets": "https://app.crunch.io/api/datasets/",
                        "datasets_by_name": "https://app.crunch.io/api/datasets/by_name/{name}/",
                        "geodata": "https://app.crunch.io/api/geodata/",
                        "integrations": "https://app.crunch.io/api/integrations/",
                        "lobs": "https://app.crunch.io/api/lobs/",
                        "projects": "https://app.crunch.io/api/projects/",
                        "public": "https://app.crunch.io/api/public/",
                        "roles": "https://app.crunch.io/api/roles/",
                        "sources": "https://app.crunch.io/api/sources/",
                        "teams": "https://app.crunch.io/api/teams/",
                        "users": "https://app.crunch.io/api/users/"
                      },
                      "description": "The API root. GET user_url to access your Crunch resources. GET logout_url to sign out.",
                      "element": "shoji:catalog",
                      "self": "https://app.crunch.io/api/",
                      "urls": {
                        "account_roles_url": "https://app.crunch.io/api/roles/accounts/",
                        "account_url": "https://app.crunch.io/api/account/",
                        "logout_url": "https://app.crunch.io/api/logout/",
                        "notebook_url": "https://jupyter.crunch.io/",
                        "user_url": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/"
                      },
                      "views": {
                        "account": "https://app.crunch.io/api/account/",
                        "feature_flag": "https://app.crunch.io/api/feature_flag/",
                        "migration": "https://app.crunch.io/api/migration/",
                        "progress": "https://app.crunch.io/api/progress/",
                        "search": "https://app.crunch.io/api/search/",
                        "user": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "dashboards": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "datasets": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "datasets_by_name": {
                          "type": "string"
                        },
                        "geodata": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "integrations": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "lobs": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "projects": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "public": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "roles": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "sources": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "teams": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "users": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "account_roles_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "account_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "logout_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "notebook_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "user_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Urls",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "account": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "feature_flag": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "migration": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "progress": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "search": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "user": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "GetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "You must be authenticated to access this resource. Please login at /public/login/"
                      ],
                      "status": "401 Unauthorized",
                      "urls": {
                        "collect_inquires": "https://app.crunch.io/api/public/inquire/",
                        "email_change_url": "https://app.crunch.io/api/public/change_email/",
                        "login_url": "https://app.crunch.io/api/public/login/",
                        "password_change_url": "https://app.crunch.io/api/public/password_change/",
                        "password_reset_url": "https://app.crunch.io/api/public/password_reset/",
                        "public_url": "https://app.crunch.io/api/public/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "status": {
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "collect_inquires": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "email_change_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "login_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_change_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_reset_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "public_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Urls",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "GetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Root urls",
        "tags": [
          "Catalogs"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const { catalogs, urls, views } = await fetch(\n  &apos;https://app.crunch.io/api/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n   }\n  })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/feature_flag/": {
      "get": {
        "description": "Crunch uses feature flags to enable and disable system-wide features under development. This api endpoint returns the application features the authenticated user has access to.",
        "operationId": "get-feature_flag",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Indicates the status of a given feature",
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/feature_flag/",
                      "value": {
                        "labs": [],
                        "off": [
                          "dataset_history",
                          "labs",
                          "dashboards",
                          "public_widget",
                          "data_cats",
                          "variable-folders",
                          "variable-folders-ui",
                          "old_projects_order",
                          "automatic_frame_collapsing",
                          "skip_folders_integrity_checking"
                        ],
                        "on": [
                          "html_emails",
                          "private_variables",
                          "dataset_search_index",
                          "variable_search_index",
                          "tabbooks",
                          "projects",
                          "variable_folders",
                          "crosstab_upgrade"
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "description": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "element": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "self": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "value": {
                      "properties": {
                        "labs": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "off": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "on": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "Access Token": []
          }
        ],
        "summary": "List feature flags",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/feature_flag/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const featureFlags = await fetch(\n  &apos;https://app.crunch.io/api/feature_flag/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n   }\n  })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value);",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/logout/": {
      "get": {
        "description": "Log user out and expire access token",
        "operationId": "get-logout",
        "responses": {
          "204": {
            "description": "Logged off successfully"
          }
        },
        "summary": "Log out",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/logout/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const logout = await fetch(\n  &apos;https://app.crunch.io/api/logout/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n   }\n  })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/otp/authorize": {
      "post": {
        "description": "This endpoint exchanges an email/password combination for a one-time password (OTP) suitable for creating a link or redirect to automatically log in a user to Crunch's application and API. This should be called as a server-to-server operation, resulting in a link that can be used in the user's browser. Only one OTP may be active at any given time, so a second request will invalidate the previous OTP before generating a new one.\n\nCalling this endpoint with a valid browser session will invalidate the session if the credentials authenticate correctly and the users do not match.\n\nMore information regarding one-time passwords can be found in the [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360045141591-One-time-passwords).",
        "operationId": "post-otp-authorize",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "email": "joe@example.com",
                    "password": "4ZQ8fQlVtP@Z"
                  }
                }
              },
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "expires": "2020-06-17T03:57:02.157592+00:00",
                      "token": "00002:244e07d61193dadc81295b2fd9700aff9fa9a8fe99309f1c3"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "expires": {
                      "description": "Expiration is set for one hour from creation",
                      "format": "date-time",
                      "type": "string"
                    },
                    "token": {
                      "description": "cryptographically secure, encoded id token. Token consists of two hexadecimal numbers separated by a colon.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [],
        "summary": "Create one-time password",
        "tags": [
          "Authenticate"
        ]
      }
    },
    "/otp/login": {
      "get": {
        "description": "**The url for this endpoint is intended to be embedded in a <a href=> tag on a web page in a browser and clicked by the user**\n\nUse a one-time password (OTP) to log a user into Crunch. At the completion of this request, the user is logged in, a browser session is created using a \"permanent\" session cookie, and the browser redirects to the sanitized redirect_uri location.\n\nQuery parameters must be url encoded. Both parameters typically contain characters that break URL parsing if not encoded.\n\nCrunch performs no pre-verification that the user has access to the final destination, so a user may still see permission errors if the resources are not available to their user account.\n\nIf the user already has a browser session, this endpoint's outcome differs based on the session. See the [flow diagram](https://help.crunch.io/hc/en-us/articles/360045141591-One-time-passwords) to see the possible cases and the respective behavior of this endpoint with regard to that session.\n\nThe API is set up to pass-through if the user is already logged in, even if the OTP is bad, expired, used, or missing, or is a new OTP for the same user, though in the latter case, the OTP will be marked as used.\n\nThe API will log out browser sessions that are for a different user than the valid OTP token, however valid sessions and invalid OTP tokens will continue to redirect, even if the user does not have permissions on the final resource.\n\nMore information regarding one-time passwords can be found in the [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360045141591-One-time-passwords).",
        "operationId": "get-otp-login",
        "parameters": [
          {
            "description": "Token generated from the \"create one-time password\" endpoint",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource to display after logging the user in. If not set, the user will redirect to the root path ('/') on the server's configured primary host name. e.g., https://app.crunch.io/. The redirect_uri may be a full url, or a full path, and may include query params and a fragment. Schema, hostname, and port if provided are validated before use, and may be replaced by server configured values to prevent using Crunch as a redirect service or using this endpoint as an XSS target, or exposing session tokens over unencrypted links.",
            "in": "query",
            "name": "redirect_uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "301": {
            "description": "Moved Permanently",
            "headers": {
              "Location": {
                "description": "Sanitized `redirect_uri` for the browser to visit including any path and fragment in the request's value.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [],
        "summary": "Use one-time password",
        "tags": [
          "Authenticate"
        ]
      }
    },
    "/datasets/{dataset_id}/multitables/{multitable_id}/tabbook/": {
      "parameters": [
        {
          "description": "Unique id of the dataset",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique id of the multitable to export",
          "in": "path",
          "name": "multitable_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Exporting a multitable entity produces a \u201ctab-book\u201d, by default an Excel (.xlsx) workbook containing each variable in the dataset cross-tabbed with the specified multitable.\n\nThis endpoint returns a download location to which the exporter will write the generated file (this may take some time for large datasets).\n\nThe server returns a 202 (Accepted) response to a successful POST, indicating the export job has started. The response includes the download URL in its Location header. The response body contains a progress URL which can be accessed (as often as necessary) to monitor the export job status.\n\nClients should note the download URL, monitor progress, and when complete, GET the download location. See Task Progress endpoint for details.\n\nRequesting the same job, if still in progress, will return the same 202 response with the same progress URL; the job is not restarted. If the export is finished, the server responds with 302 (Found), redirecting to the download location.\n\nIf there have been changes on the dataset attributes, a new tab book will be generated regardless of the status of any other pending exports.\n\nAlternatively, you can request a JSON output for your tab book by adding an appropriate Accept request header.\n\n## Available parameters\n\nYou can choose one or more filters for the data, and which variables to include in the tab book. The choice of variables may be expressed either in a machine-friendly form (a where map) or in the more concise variables array. Note that variables can take folder ids as a succinct specifier for groups of variables.\n\n### Filter\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| filter | object | null | Filter by Crunch Expression. Variables used in the filter should be fully-expressed urls. |\n\n\n```\n\"filter\": [\n  {\n    \"filter\": \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/filters/5f14133582f34b8b85b408830f4b4a9b/\"\n  }\n]\n```\n\n### Where\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| where | object | null | Crunch Expression signifying which variables to use. |\n\n\n```\n\"where\": {\n  \"function\": \"select\",\n  \"args\": [\n    {\n      \"map\": {\n        \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000004/\": {\n          \"variable\": \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000004/\"\n        },\n        \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000003/\": {\n          \"variable\": \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000003/\"\n        }\n      }\n    }\n  ]\n}\n```\n\n### Variables\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| variables | array | null | List of variables or folder urls to include. Use this as a simpler way to select the variables to include instead of building a where expression. A folder included in this list will include all variables in that folder and those in all its subfolders. |\n\n```\n\"variables\": [\n   \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000004/\",\n   \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/folders/abcdef/\"\n]\n```\n\n### Weight\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\nweight | URL | null | The weight variable to be used when generating the tabbook. If weight is omitted from the request, the currently selected weight is used. If \u201cnull\u201d is provided, the generated tabbooks will be unweighted. |\n\n### Options\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| options | object | {} | Specifies tabbook layout and data display options. |\n\n```\n\"options\": {\n  \"doc_layout\": {\n    \"toc\": false,\n    \"variable_sheets\": \"many_sheets\"\n  },\n  \"fields\": [\n    \"col_percent\",\n    \"z_score\",\n    \"p_value\",\n    \"count_weighted\"\n  ],\n  \"format\": {\n    \"pval_colors\": false,\n    \"decimal_places\": 1,\n    \"show_empty\": false\n  },\n  \"page_layout\": {\n    \"rows\": {\n      \"top\"\" [\"column_letters\", \"base_weighted\"],\n      \"bottom\": [\"base_unweighted\", \"scale_mean\"]\n    },\n    \"columns\": {\n      \"right\": [\"scale_mean\"]\n    },\n    \"measure_layout\": \"wide\"\n  }\n}\n```\n\n### Options sub-parameters\n\nEach of these top-level option containers is further described in the tables that follow:\n\n| Options sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| doc_layout | object | {} | Define how overall document should be organized. |\n| fields | array | [\u201ccol_percent\u201d] | One or more measures to be displayed in the body of the tab-book. Multiple measures are displayed side-by-side for each body column. |\n| format | object | {} | Define how individual value cells should be displayed. |\n| page_layout | object | {} | Define how individual pages of the document (e.g., worksheets in Excel format) should be displayed. |\n| sig_threshold | number | 0.05 | Level of significance to use for the pairwise_t_test field. |\n\n### Doc_layout sub-parameter\n\nOptions controlling overall organization of exported tab-book (workbook).\n\n| Doc_layout sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| toc | boolean | false | Generate a Table of Contents for the tabbook, to appear as the first worksheet of the Excel workbook. |\n| variable_sheets | string | \u201cmany_sheets\u201d | One of \u201cmany_sheets\u201d or \u201cone_sheet\u201d. The value \u201cmany_sheets\u201d causes each tab to appear on a separate worksheet. The value \u201cone_sheet\u201d causes each tab to be placed on the same worksheet, in a \u201cstack\u201d. |\n\n### Fields sub-parameter\n\nAn array of one or more strings, each specifying a measure to be displayed in the body of each tab. Multiple values are placed side-by-side in successive spreadsheet columns in the order specified.\n\n| Name | Description |\n| --- | --- |\n| col_percent | Proportion, expressed as a percentage, using the column total as its base. |\n| row_percent | Proportion, expressed as a percentage, using the row total as its base. |\n| table_percent | Proportion, expressed as a percentage, using the table total as its base. |\n| z_score | The standardized residual value of each cell from the expected value if rows and columns were independently distributed. |\n| p_value | The two-tailed probability of Z, assuming Z has an approximate standard normal distribution. |\n| pairwise_t_test | Pairwise two-tailed tests that column proportions are equal: All columns are labeled with letters, and letters in cells indicate the larger of pairs where the null hypothesis of equality is rejected at the level _p < sig_threshold_. No adjustment is made for multiple comparisons. |\n| count_weighted | The weighted count in each cell. |\n| count_unweighted | The unweighted count in each cell. |\n| col_index | The index percentage with respect to the column marginal percentage. |\n| population | The estimated population count if a dataset has a defined target population. |\n| col_base_weighted | Total weighted N for each cell, conditioned on the categories of the column variable. (The denominator of col_percent.) |\n| col_base_unweighted | Unweighted N for each cell with respect to the column. |\n| row_base_weighted | Total weighted N for each category of the row variable. (Denominator of row_percent.) |\n| row_base_unweighted | Unweighted N with respect to the row. |\n| table_base_weighted | Total weighted N for table percentages. |\n| table_base_unweighted | Unweighted N for each cell with respect to the total N in both the row and column. |\n\n### Format sub-parameter\n\nOptions controlling the display of individual cells in a tab.\n\n| Format sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| decimal_places | number | 0 | Number of decimal places to display. |\n| pval_colors | boolean | false | Indicate p-value for cell by lighter or darker green or red shading. |\n| show_empty | boolean | false | Display rows and columns having no data. |\n\n### Page_layout sub-parameter\n\nOptions controlling the display of an individual tab \u201ctable\u201d.\n\n| Page_layout sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| columns | object | {} | Container for column-related options (optional). |\n| measure_layout | string | \u201cwide\u201d | One of \u201cwide\u201d or \u201clong\u201d. Only operative for a multi-measure tabbook. Controls whether multiple measures are displayed side-by-side (wide) or stacked (long). |\n| rows | object | {} | Container for row-related options (optional). Can contain a \u201ctop\u201d array and a \u201cbottom\u201d array which specify header/footer rows to appear; both are optional. \u201ctop\u201d can contain any or all of \u201ccolumn_letters\u201d, \u201cbase_unweighted\u201d, and \u201cbase_weighted\u201d. Ordering of the count summary-rows is respected. \u201cbottom\u201d can contain any or all of \u201cbase_weighted\u201d, \u201cbase_unweighted\u201d, \u201csignificant_columns\u201d, and \u201cscale_mean\u201d. Ordering of the count summary-rows is respected. Specifying either \u201cbase_weighted\u201d or \u201cbase_unweighted\u201d in either the \u201ctop\u201d or \u201cbottom\u201d array will suppress the automatic appearance of a default base summary row at the bottom. (The default base summary row is either the weighted or unweighted base, depending on the measure.) In that case, only explicitly specified count summary-rows will appear. |\n",
        "operationId": "post-datasets-datasetId-multitables-multitableId-tabbook",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "filename": "Admit - Multitable.xlsx",
                    "filter": [
                      {
                        "filter": "https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/d5921637e8a84b4183fc44827f45afd9/"
                      },
                      {
                        "filter": "https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/15a4b1ce09114a559e9d663783ba1acf/"
                      }
                    ],
                    "options": {
                      "doc_layout": {
                        "toc": false,
                        "variable_sheets": "many_sheets"
                      },
                      "fields": [
                        "col_percent",
                        "pairwise_t_test",
                        "z_score",
                        "count_weighted",
                        "count_unweighted",
                        "col_index"
                      ],
                      "format": {
                        "decimal_places": 0,
                        "pval_colors": false,
                        "show_empty": false
                      },
                      "page_layout": {
                        "column_letters": true,
                        "measure_layout": "wide",
                        "rows": {
                          "bottom": [
                            "scale_mean",
                            "significant_columns"
                          ],
                          "top": []
                        }
                      },
                      "sig_threshold": 0.01,
                      "variables": [
                        "7NahwyO8bK9zl3DzFvf1SJ000002"
                      ]
                    },
                    "value": {
                      "args": [
                        {
                          "map": {
                            "08IXAZ5yWlTTOAcXijb3Me000000": {
                              "variable": "08IXAZ5yWlTTOAcXijb3Me000000"
                            }
                          }
                        }
                      ],
                      "function": "select"
                    },
                    "variables": [
                      "https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/",
                      "https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/"
                    ],
                    "weight": "https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/",
                    "where": {
                      "args": [
                        {
                          "map": {
                            "https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/": {
                              "variable": "https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/"
                            }
                          }
                        }
                      ],
                      "function": "select"
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "default": "shoji:view",
                    "enum": [
                      "shoji:view"
                    ],
                    "example": "shoji:view",
                    "type": "string"
                  },
                  "filename": {
                    "description": "Filename download will be stored to",
                    "type": "string"
                  },
                  "filter": {
                    "description": "Filter by Crunch Expression. Variables used in the filter should be fully-expressed urls.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "filter": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Filter",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "Specifies tabbook layout and data display options.",
                    "properties": {
                      "doc_layout": {
                        "additionalProperties": false,
                        "description": "Define how overall document should be organized.",
                        "properties": {
                          "toc": {
                            "description": "Generate a Table of Contents for the tabbook, to appear as the first worksheet of the Excel workbook.",
                            "type": "boolean"
                          },
                          "variable_sheets": {
                            "default": "one_sheet",
                            "description": "One of \u201cmany_sheets\u201d or \u201cone_sheet\u201d. The value \u201cmany_sheets\u201d causes each tab to appear on a separate worksheet. The value \u201cone_sheet\u201d causes each tab to be placed on the same worksheet, in a \u201cstack\u201d.",
                            "enum": [
                              "many_sheets",
                              "one_sheet"
                            ],
                            "example": "many_sheets",
                            "type": "string"
                          }
                        },
                        "title": "DocLayout",
                        "type": "object"
                      },
                      "fields": {
                        "description": "One or more measures to be displayed in the body of the tab-book. Multiple measures are displayed side-by-side for each body column.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "format": {
                        "additionalProperties": false,
                        "description": "Define how individual value cells should be displayed.",
                        "properties": {
                          "decimal_places": {
                            "description": "Number of decimal places to display.",
                            "type": "integer"
                          },
                          "pval_colors": {
                            "default": "false",
                            "description": "Indicate p-value for cell by lighter or darker green or red shading.",
                            "type": "boolean"
                          },
                          "show_empty": {
                            "default": "false",
                            "description": "Display rows and columns having no data.",
                            "type": "boolean"
                          }
                        },
                        "title": "Format",
                        "type": "object"
                      },
                      "page_layout": {
                        "additionalProperties": false,
                        "description": "Define how individual pages of the document (e.g., worksheets in Excel format) should be displayed.",
                        "properties": {
                          "column_letters": {
                            "description": "Container for column-related options.",
                            "type": "boolean"
                          },
                          "measure_layout": {
                            "default": "wide",
                            "description": "One of \u201cwide\u201d or \u201clong\u201d. Only operative for a multi-measure tabbook. Controls whether multiple measures are displayed side-by-side (wide) or stacked (long).",
                            "enum": [
                              "wide",
                              "long"
                            ],
                            "example": "long",
                            "type": "string"
                          },
                          "rows": {
                            "additionalProperties": false,
                            "description": "Specifying either \u201cbase_weighted\u201d or \u201cbase_unweighted\u201d in either the \u201ctop\u201d or \u201cbottom\u201d array will suppress the automatic appearance of a default base summary row at the bottom. (The default base summary row is either the weighted or unweighted base, depending on the measure.) In that case, only explicitly specified count summary-rows will appear.",
                            "properties": {
                              "bottom": {
                                "description": "Specify which footer values to appear. Can contain any or all of \u201cbase_weighted\u201d, \u201cbase_unweighted\u201d, \u201csignificant_columns\u201d, and \u201cscale_mean\u201d. Ordering of the count summary-rows is respected.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "top": {
                                "description": "Which specify header rows to appear. Can contain any or all of \u201ccolumn_letters\u201d, \u201cbase_unweighted\u201d, and \u201cbase_weighted\u201d. Ordering of the count summary-rows is respected.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "title": "Rows",
                            "type": "object"
                          }
                        },
                        "title": "PageLayout",
                        "type": "object"
                      },
                      "sig_threshold": {
                        "description": "Level of significance to use for the pairwise_t_test field.",
                        "type": "number"
                      },
                      "variables": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "title": "Options",
                    "type": "object"
                  },
                  "value": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "map": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "variable": {
                                      "qt-uri-protocols": [
                                        "https"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "000000",
                                  "type": "object"
                                }
                              },
                              "title": "PurpleMap",
                              "type": "object"
                            }
                          },
                          "title": "ValueArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "function": {
                        "type": "string"
                      }
                    },
                    "title": "Value",
                    "type": "object"
                  },
                  "variables": {
                    "description": "List of variables or folder urls to include. Use this as a simpler way to select the variables to include instead of building a where expression. A folder included in this list will include all variables in that folder and those in all its subfolders.",
                    "items": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "weight": {
                    "description": "The weight variable to be used when generating the tabbook. If weight is omitted from the request, the currently selected weight is used. If \u201cnull\u201d is provided, the generated tabbooks will be unweighted.",
                    "format": "uri",
                    "qt-uri-protocols": [
                      "https"
                    ],
                    "type": "string"
                  },
                  "where": {
                    "additionalProperties": false,
                    "description": "Crunch Expression signifying which variables to use.",
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "map": {
                              "additionalProperties": false,
                              "properties": {
                                "variableURL": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "variable": {
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "title": "000000",
                                  "type": "object"
                                }
                              },
                              "title": "FluffyMap",
                              "type": "object"
                            }
                          },
                          "title": "WhereArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "function": {
                        "default": "select",
                        "enum": [
                          "select"
                        ],
                        "example": "select",
                        "type": "string"
                      }
                    },
                    "title": "Where",
                    "type": "object"
                  }
                },
                "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/multitables/4e4e2188aef7406d8622e0f98a5c7f9d/tabbook/",
                      "value": "https://app.crunch.io/api/progress/success/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: The request body must be a valid Crunch Expression. Invalid body: bad_options\n"
                      ],
                      "message": "The request body must be a valid Crunch Expression. Invalid body: bad_options",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Export multitable",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/multitables/4e4e2188aef7406d8622e0f98a5c7f9d/tabbook/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:view\",\n  \"filename\": \"Admit - Multitable.xlsx\",\n  \"filter\": [\n    {\n      \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/d5921637e8a84b4183fc44827f45afd9/\"\n    },\n    {\n      \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/15a4b1ce09114a559e9d663783ba1acf/\"\n    }\n  ],\n  \"options\": {\n    \"doc_layout\": {\n      \"toc\": false,\n      \"variable_sheets\": \"many_sheets\"\n    },\n    \"fields\": [\n      \"col_percent\",\n      \"pairwise_t_test\",\n      \"z_score\",\n      \"count_weighted\",\n      \"count_unweighted\",\n      \"col_index\"\n    ],\n    \"format\": {\n      \"decimal_places\": 0,\n      \"pval_colors\": false,\n      \"show_empty\": false\n    },\n    \"page_layout\": {\n      \"column_letters\": true,\n      \"measure_layout\": \"wide\",\n      \"rows\": {\n        \"bottom\": [\n          \"scale_mean\",\n          \"significant_columns\"\n        ],\n        \"top\": []\n      }\n    },\n    \"sig_threshold\": 0.01,\n    \"variables\": [\n      \"7NahwyO8bK9zl3DzFvf1SJ000002\"\n    ]\n  },\n  \"value\": {\n    \"args\": [\n      {\n        \"map\": {\n          \"08IXAZ5yWlTTOAcXijb3Me000000\": {\n            \"variable\": \"08IXAZ5yWlTTOAcXijb3Me000000\"\n          }\n        }\n      }\n    ],\n    \"function\": \"select\"\n  },\n  \"variables\": [\n    \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\",\n    \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\"\n  ],\n  \"weight\": \"https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/\",\n  \"where\": {\n    \"args\": [\n      {\n        \"map\": {\n          \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\":\n{\n            \"variable\": \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\"\n          }\n        }\n      }\n    ],\n    \"function\": \"select\"\n  }\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDatasetIdMultitablesMultitableIdTabbook = await fetch(\n  &apos;https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/multitables/4e4e2188aef7406d8622e0f98a5c7f9d/tabbook/&apos;,\n{\n   method: &apos;POST&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:view\",\n     \"filename\": \"Admit - Multitable.xlsx\",\n     \"filter\": [\n       {\n         \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/d5921637e8a84b4183fc44827f45afd9/\"\n       },\n       {\n         \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/15a4b1ce09114a559e9d663783ba1acf/\"\n       }\n     ],\n     \"options\": {\n       \"doc_layout\": {\n         \"toc\": false,\n         \"variable_sheets\": \"many_sheets\"\n       },\n       \"fields\": [\n         \"col_percent\",\n         \"pairwise_t_test\",\n         \"z_score\",\n         \"count_weighted\",\n         \"count_unweighted\",\n         \"col_index\"\n       ],\n       \"format\": {\n         \"decimal_places\": 0,\n         \"pval_colors\": false,\n         \"show_empty\": false\n       },\n       \"page_layout\": {\n         \"column_letters\": true,\n         \"measure_layout\": \"wide\",\n         \"rows\": {\n           \"bottom\": [\n             \"scale_mean\",\n             \"significant_columns\"\n           ],\n           \"top\": []\n         }\n       },\n       \"sig_threshold\": 0.01,\n       \"variables\": [\n         \"7NahwyO8bK9zl3DzFvf1SJ000002\"\n       ]\n     },\n     \"value\": {\n       \"args\": [\n         {\n           \"map\": {\n             \"08IXAZ5yWlTTOAcXijb3Me000000\": {\n               \"variable\": \"08IXAZ5yWlTTOAcXijb3Me000000\"\n             }\n           }\n         }\n       ],\n       \"function\": \"select\"\n     },\n     \"variables\": [\n       \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\",\n       \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\"\n     ],\n     \"weight\": \"https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/\",\n     \"where\": {\n       \"args\": [\n         {\n           \"map\": {\n             \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\":\n{\n               \"variable\": \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\"\n             }\n           }\n         }\n       ],\n       \"function\": \"select\"\n     }\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/batches/": {
      "get": {
        "description": "A collection of most recent batches for this Dataset. Each batch is a set of rows which were inserted together. Each tuple in the index includes a \u201cstatus\u201d member, which may be one of \u201cerror\u201d, \u201cimporting\u201d, or \u201cimported\u201d.",
        "operationId": "get-datasets-datasetId-batches",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "A collection of most recent batches for this Dataset. Each batch is a set of rows which were inserted together.",
                      "element": "shoji:catalog",
                      "index": {
                        "https://crunch.io/api/datasets/30e4a9/batches/import_batch%3A30e4a92bca%248b10ae1f-7617/": {
                          "id": "import_batch:30e4a92bca$8b10ae1f-7617",
                          "source_id": "d975ceb03ce64ea99d008fd1ac813a12",
                          "status": "imported"
                        },
                        "https://crunch.io/api/datasets/30e4a9/batches/import_batch%3A30e4a92bca%24954151a1-0920/": {
                          "id": "import_batch:30e4a92bca$954151a1-0920",
                          "source_id": "67a8e45bf1ef42c9b919db49f74a835e",
                          "status": "imported"
                        },
                        "https://crunch.io/api/datasets/30e4a9/batches/import_batch%3A30e4a92bca%24aa3f6b85-8215/": {
                          "id": "import_batch:30e4a92bca$aa3f6b85-8215",
                          "source_id": null,
                          "status": "error"
                        }
                      },
                      "self": "https://crunch.io/api/datasets/30e4a9/batches/",
                      "views": {
                        "compare": "https://alpha.crunch.io/api/datasets/30e4a9/batches/compare/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "source_id": {
                            "nullable": true,
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "compare": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dataset batches",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/7548d6652a5e47a183ce9c639763554f/batches/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDatasetIdBatches = await fetch(\n  &apos;https://app.crunch.io/api/datasets/7548d6652a5e47a183ce9c639763554f/batches/&apos;,\n{\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset the batch exists inside",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint adds a new batch. The request payload can contain\n\n1. the URL of another dataset,\n1. the URL of a source object, or \n1. a Crunch table definition with variable metadata, row data, or both.\n\nA successful request will return either 201 status, if sufficiently fast, or 202, if the task is large enough to require processing outside of the request cycle. In both cases, the newly created batch entity\u2019s URL is returned in the Location header. The 202 response contains a body with a Progress resource in it; poll that URL for updates on the completion of the append. See Task Progress endpoint.\n\nBatches are created in importing state and will be advanced through imported state if there are no problems. If there was a problem in processing it, its status will be error. Note that the response status code will always be 202 for asynchronous or 201 for synchronous creation of the batch whether there were conflicts or not. So you need to GET the new batch\u2019s URL to see if the data is ready (status imported).\n\nIf an append is already in process on the dataset, the POST request will return 409 status.\n\n### Appending a dataset\nTo append a Dataset, POST a Shoji Entity with a dataset URL. You must have at least view (read) permissions on this dataset. Internally, this action will create a Source entity pointing to that dataset.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"dataset\": \"<url>\"\n  }\n}\n```\n\nThe variables from the incoming dataset to be included by default will depend on the current user\u2019s permissions. Those with edit permissions on the incoming dataset will append all public and hidden (discarded = true) variables. Those with only view permissions will just include public variables that aren\u2019t hidden.\n\nTo append only certain variables from the incoming dataset, include an where attribute in the entity body. See Frame functions for how to compose the where expression.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"dataset\": \"<url>\",\n      \"where\": {\n          \"function\":\"select\",\n          \"args\": [\n                {\"map\":\n                    {\"000001\": {\"variable\": \"<url>\"},\n                     \"000002\": {\"variable\": \"<url>\"}}\n                }\n          ]\n      }\n  }\n}\n```\n\nUsers with edit permissions on the incoming dataset can select hidden variables to be included, but viewers cannot. Editors and viewers can however both specify their personal variables to be included.\n\nTo select a subset of rows to append, include an filter attribute in the entity body, containing a Crunch filter expression.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"dataset\": \"<url>\",\n      \"where\": {\n          \"function\":\"select\",\n          \"args\": [\n                {\"map\":\n                    {\"000001\": {\"variable\": \"<url>\"},\n                     \"000002\": {\"variable\": \"<url>\"}}\n                }\n          ]\n      },\n      \"filter\": {\n          \"function\":\"<\",\n          \"args\": [\n                {\"variable\": \"<url>\"},\n                {\"value\": \"<value>\"}\n          ]\n      }\n  }\n}\n```\n\n### Appending a source\nPOST a Shoji Entity with a Source URL. The user must have permission to view the Source entity. Use Source appending to send data in CSV format that matches the schema of the Dataset.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"source\": \"<url>\"\n  }\n}\n```\n\n### Append Failures\nFor single appends, if a batch fails, the dataset will be automatically reverted back to the state it was before the append; the batch is automatically deleted.\n\nWhen multiple appends are performed in immediate succession, it\u2019s not efficient to checkpoint the state of each one. In this case, only the first append is rolled back on failure.",
        "operationId": "post-datasets-datasetId-batches",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "body": {
                      "source": "https://app.crunch.io/api/sources/4ef7250316424ca38438781454e88097/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-02": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "522IJqcRL9iAJ82ruPHqb1000000": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000000/"
                              },
                              "522IJqcRL9iAJ82ruPHqb1000003": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000003/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-03": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/",
                      "filter": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000001/"
                          },
                          {
                            "value": 10
                          }
                        ],
                        "function": "<"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-04": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/",
                      "filter": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000001/"
                          },
                          {
                            "value": 10
                          }
                        ],
                        "function": "<"
                      },
                      "where": {
                        "args": [
                          {
                            "map": {
                              "522IJqcRL9iAJ82ruPHqb1000000": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000000/"
                              },
                              "522IJqcRL9iAJ82ruPHqb1000003": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000003/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-05": {
                  "value": {
                    "body": {
                      "stream": null,
                      "type": "ldjson"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-06": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "6FYlrpClfS6m8O7PyIZ9Z0000000": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000000/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000001": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000001/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000002": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000002/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000003": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000003/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000004": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000004/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000005": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000005/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-07": {
                  "value": {
                    "body": {
                      "url": "s3://testing-crunch-io/example-dataset.csv"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-08": {
                  "value": {
                    "autorollback": true,
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000000/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000000/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000002/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000002/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000003/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000003/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000a/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000a/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000b/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000b/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000c/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000c/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000d/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000d/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      },
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": true
                  }
                },
                "example-09": {
                  "value": {
                    "body": {
                      "source": "https://app.crunch.io/api/sources/574da9061383498bac46ae63107f1ace/",
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": false
                  }
                },
                "example-10": {
                  "value": {
                    "body": {
                      "schema": "https://app.crunch.io/api/sources/e56262704e744942805b8a456c8c1ffd/",
                      "source": "https://app.crunch.io/api/sources/0ebf5e32c63b4e01b7756c75f1e61758/",
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": false
                  }
                },
                "example-11": {
                  "value": {
                    "body": {
                      "description": "Created automatically.",
                      "name": "Stream data for dataset a891505a542d4b3bb360adc83f515acf",
                      "stream": null,
                      "type": "ldjson"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-12": {
                  "value": {
                    "autorollback": false,
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/37780ae919034f5c8a5df9d85052a0e1/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-13": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/7UDGSYWUXDJ3tTlSX37GrC000000/": {
                                "variable": "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/7UDGSYWUXDJ3tTlSX37GrC000000/"
                              },
                              "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/8c1802f49fdf407e8d7020ede39df247/": {
                                "variable": "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/8c1802f49fdf407e8d7020ede39df247/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-14": {
                  "value": {
                    "autorollback": true,
                    "body": {
                      "source": "https://app.crunch.io/api/sources/6c09b371a6d4461598455b417022610c/",
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": true
                  }
                },
                "example-15": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/e5b511a459af42c19b0676805ddee064/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "36rAczfqfP1kyp2J1Ctsr0000000": {
                                "variable": "36rAczfqfP1kyp2J1Ctsr0000000"
                              },
                              "36rAczfqfP1kyp2J1Ctsr0000001": {
                                "variable": "36rAczfqfP1kyp2J1Ctsr0000001"
                              }
                            }
                          }
                        ],
                        "frame": {
                          "args": [
                            {
                              "map": {
                                "36rAczfqfP1kyp2J1Ctsr0000000": {
                                  "variable": "36rAczfqfP1kyp2J1Ctsr0000000"
                                },
                                "36rAczfqfP1kyp2J1Ctsr0000001": {
                                  "variable": "36rAczfqfP1kyp2J1Ctsr0000001"
                                },
                                "de61cf8c6f06485495f529c8b1fe60c6": {
                                  "variable": "de61cf8c6f06485495f529c8b1fe60c6"
                                }
                              }
                            }
                          ],
                          "function": "select"
                        },
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "autorollback": {
                    "type": "boolean"
                  },
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "map": {
                              "additionalProperties": {
                                "additionalProperties": false,
                                "properties": {
                                  "variable": {
                                    "qt-uri-protocols": [
                                      "https"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "MapValue",
                                "type": "object"
                              },
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "BodyArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "dataset": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "filter": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                },
                                "variable": {
                                  "format": "uri",
                                  "qt-uri-protocols": [
                                    "https"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [],
                              "title": "FilterArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Filter",
                        "type": "object"
                      },
                      "function": {
                        "enum": [
                          "make_frame",
                          "select"
                        ],
                        "title": "Function",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "source": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "stream": {
                        "nullable": true,
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "where": {
                        "type": "object"
                      },
                      "workflow": {
                        "type": "array"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "enum": [
                      "shoji:entity"
                    ],
                    "title": "Element",
                    "type": "string"
                  },
                  "savepoint": {
                    "type": "boolean"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDBatchesPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/7548d6652a5e47a183ce9c639763554f/batches/",
                      "value": "https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "CrunchUserError: Access Denied\n"
                      ],
                      "message": "Access Denied",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          },
          "409": {
            "description": "Dataset append already in progress"
          }
        },
        "summary": "Add data to a dataset",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/7548d6652a5e47a183ce9c639763554f/batches/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"body\": {\n    \"source\": \"https://app.crunch.io/api/sources/4ef7250316424ca38438781454e88097/\"\n  },\n  \"element\": \"shoji:entity\"\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDatasetIdBatches = await fetch(\n  &apos;https://app.crunch.io/api/datasets/7548d6652a5e47a183ce9c639763554f/batches/&apos;,\n{\n   method: &apos;POST&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"source\": \"https://app.crunch.io/api/sources/4ef7250316424ca38438781454e88097/\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/": {
      "get": {
        "deprecated": true,
        "description": "A Dataset is the primary container of statistical data in Crunch. Each dataset contains a collection of variables, from which analyses can be composed and then saved and exported. These analyses may include filters, which a user can define and save. A user can also share a dataset with another user.\n\nData is added to a dataset as a batch. A new dataset may be created empty (have zero data batches), or dataset creation and adding the first data batch may be combined in certain import operations. In either case, additional batches can be appended to datasets. Similarly, variables from other datasets can be joined onto a dataset.\n\nAs with other Crunch objects, references to the dataset entities available to a user are provided in a catalog. Multiple endpoint-methods described below return a dataset catalog, which may be filtered and/or organized in a hierarchy, depending on the method.\n\nWhen authenticated, this endpoint returns a Shoji Catalog of the datasets to which the authenticated user has access.\n\nA user may have access to a dataset because someone has shared it directly with him, or because someone has shared it with a team of which he is a member. If a user has access to a dataset from different sources, be it by multiple teams or by direct sharing, the final permissions they have on the dataset will be the maximum of all the permissions granted.\n\n### Drafts\nA dataset marked as `is_published: false` can only be accessed by dataset editors. They will still be available on the catalog for all shared users but API clients should know to display these to the appropriate users.\n\nThe is_published flag of a dataset can be changed by editors from the catalog or directly on the dataset entity.\n\n### Dataset properties\n| Name | Type | Default | Description |\n| ---- | ---- | ------- | ----------- |\n| name | string |   | Required. The name of the dataset |\n| description | string | \u201c\u201d | A longer description of the dataset |\n| id | string |   | The dataset\u2019s id |\n| archived | bool | false | Whether the dataset is \u201carchived\u201d or active |\n| account | URL |   | URL of the account entity that owns the dataset |\n| permissions | object | {\"edit\": false} | Authorizations on this dataset; see Permissions |\n| owner_id | URL |   | URL of the user entity of the dataset\u2019s owner (Yourself or a project) |\n| owner_name | string | \u201c\u201d | The owner\u2019s name, for display |\n| size | object | {\"rows\": 0, \"columns\": 0, \"unfiltered_rows\": 0} | Dimensions of the dataset |\n| creation_time | ISO-8601 string |   | Datetime at which the dataset was created in Crunch |\n| modification_time | ISO-8601 string |   | Datetime of the last modification for this dataset globally |\n| start_date | ISO-8601 string |   | Date/time for which the data in the dataset corresponds |\n| end_date | ISO-8601 string |   | End date/time of the dataset\u2019s data, defining a start_date:end_date range |\n| streaming | string |   | Possible values \u201cno\u201d, \u201cfinished\u201d, and \u201cstreaming\u201d to enable/disable streaming |\n| current_editor | URL or null |   | URL of the user entity that is currently editing the dataset, or null if there is no current editor |\n| current_editor_name | string or null |   | That user\u2019s name, for display |\n| is_published | boolean | true | Indicates if the dataset is published to viewers or not |",
        "operationId": "get-datasets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "value": {
                        "catalogs": {
                          "by_name": "https://app.crunch.io/api/datasets/by_name/{name}/",
                          "match": "https://app.crunch.io/api/datasets/match/"
                        },
                        "description": "Catalog of Datasets that belong to this user",
                        "element": "shoji:catalog",
                        "index": {
                          "https://app.crunch.io/api/datasets/038cf018200c4f459f3a6b901be840fc/": {
                            "access_time": "2016-03-21T20:10:04.215000+00:00",
                            "account": "https://app.crunch.io/api/accounts/00001/",
                            "archived": false,
                            "creation_time": "2016-03-21T20:09:51.947000+00:00",
                            "current_editor": "https://app.crunch.io/api/users/00002/",
                            "current_editor_name": "Jean-Luc Picard",
                            "description": "",
                            "end_date": "2016-03-21T20:01:22.711000+00:00",
                            "id": "038cf018200c4f459f3a6b901be840fc",
                            "is_published": true,
                            "modification_time": "2018-06-05T21:49:25.576000+00:00",
                            "name": "Face with cold sweat",
                            "owner_id": "https://app.crunch.io/api/users/00002/",
                            "owner_name": "Jean-Luc Picard",
                            "permissions": {
                              "edit": true,
                              "view": true
                            },
                            "size": {
                              "columns": 8,
                              "rows": 6,
                              "unfiltered_rows": 200
                            },
                            "start_date": "2016-03-21T20:01:22.711000+00:00",
                            "streaming": "no",
                            "view_of": "https://app.crunch.io/api/datasets/038cf018200c4f459f3a6b901be840fc/"
                          },
                          "https://app.crunch.io/api/datasets/a550e1c491a14941a8726a2518e1eee6/": {
                            "access_time": "2016-03-21T20:01:30.004000+00:00",
                            "account": "https://app.crunch.io/api/accounts/00001/",
                            "archived": false,
                            "creation_time": "2016-03-21T20:01:22.711000+00:00",
                            "current_editor": "https://app.crunch.io/api/users/00002/",
                            "current_editor_name": "Jean-Luc Picard",
                            "description": "",
                            "end_date": "2016-03-21T20:01:22.711000+00:00",
                            "id": "a550e1c491a14941a8726a2518e1eee6",
                            "is_published": true,
                            "modification_time": "2018-06-05T21:49:23.339000+00:00",
                            "name": "Smiling face with sunglasses",
                            "owner_id": "https://app.crunch.io/api/users/00002/",
                            "owner_name": "Jean-Luc Picard",
                            "permissions": {
                              "edit": true,
                              "view": true
                            },
                            "size": {
                              "columns": 8,
                              "rows": 6,
                              "unfiltered_rows": 300
                            },
                            "start_date": "2016-03-21T20:01:22.711000+00:00",
                            "streaming": "no",
                            "view_of": "https://app.crunch.io/api/datasets/038cf018200c4f459f3a6b901be840fc/"
                          }
                        },
                        "orders": {
                          "order": "https://app.crunch.io/api/datasets/order/"
                        },
                        "self": "https://app.crunch.io/api/datasets/",
                        "views": {
                          "align": "https://app.crunch.io/api/datasets/align/",
                          "search": "https://app.crunch.io/api/datasets/search/"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "catalogs": {
                          "additionalProperties": false,
                          "properties": {
                            "by_name": {
                              "type": "string"
                            },
                            "match": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Catalogs",
                          "type": "object"
                        },
                        "description": {
                          "type": "string"
                        },
                        "element": {
                          "type": "string"
                        },
                        "index": {
                          "additionalProperties": {
                            "additionalProperties": false,
                            "properties": {
                              "access_time": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "account": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "creation_time": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "current_editor": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "current_editor_name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "end_date": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "is_published": {
                                "type": "boolean"
                              },
                              "modification_time": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "owner_id": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "owner_name": {
                                "type": "string"
                              },
                              "permissions": {
                                "additionalProperties": false,
                                "properties": {
                                  "edit": {
                                    "type": "boolean"
                                  },
                                  "view": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [],
                                "title": "Permissions",
                                "type": "object"
                              },
                              "size": {
                                "additionalProperties": false,
                                "properties": {
                                  "columns": {
                                    "type": "integer"
                                  },
                                  "rows": {
                                    "type": "integer"
                                  },
                                  "unfiltered_rows": {
                                    "type": "integer"
                                  }
                                },
                                "required": [],
                                "title": "Size",
                                "type": "object"
                              },
                              "start_date": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "streaming": {
                                "type": "string"
                              },
                              "view_of": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "Index",
                            "type": "object"
                          },
                          "type": "object"
                        },
                        "orders": {
                          "additionalProperties": false,
                          "properties": {
                            "order": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Orders",
                          "type": "object"
                        },
                        "self": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "views": {
                          "additionalProperties": false,
                          "properties": {
                            "align": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "search": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Views",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List datasets",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasets = await fetch(\n  &apos;https://app.crunch.io/api/datasets/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "patch": {
        "deprecated": true,
        "description": "This endpoint accepts a dataset catalog to update multiple datasets in a single call. Not all dataset attributes can be updated with this method; see below for specifics. Use Dataset Entity PATCH to update dataset attributes not supported by this method.\n\nA successful request returns a 204 (No Content) response. The attributes changed will be seen by all users with access to this dataset; i.e., names, descriptions, and archived state are not merely attributes of your view of the data but of the datasets themselves.\n\nAuthorization is required: you must have edit privileges on the dataset(s) being modified, as shown in the permissions object in the index item for that dataset. If you try to PATCH and are not authorized, you will receive a 403 (Forbidden) response and no changes will be made.\n\n### The following dataset attributes can be modified with this method:\n\n* name\n\n* description\n\n* notes\n\n* start_date\n\n* end_date\n\n* is_published\n\n* streaming\n\n* archived\n\n### Any changes to these attributes will be silently ignored:\n\n* access_time\n\n* creation_time\n\n* modification_time\n\n* permissions\n\n* size\n\nAttempting to modify other attributes, or including new attributes, will return a 400 (Bad Request) response.\nChanging permissions is accomplished by PATCH on the permissions catalog. The current_editor_name attribute is modifiable, assuming authorization, by PATCH on the associated user entity. Dataset size is a cached property of the data, changing only if the number of rows or columns in the dataset change. Dataset id, modification_time and creation_time are immutable/system generated.\n\nWhen PATCHing, you may include only the keys that are being modified, or you may send all keys. As long as the keys that cannot be modified via PATCH are not modified, the request will succeed.\n\nNote that, unlike other Shoji Catalog resources, you cannot PATCH with a null object to delete a dataset. Attempting this will return a 400 (Bad Request) response. Creating a dataset is allowed only by a POST to the catalog, while deleting a dataset is accomplished via a DELETE on the dataset entity.\n\n**Changing dataset ownership Any changes to the ownership of a dataset need to be done by the current editor.**\n\nOnly the dataset owner can change the ownership to another user. This can be done by PATCH request with the new owners email of API URL. The new owner must have advanced permissions on Crunch.\n\nOther editors of the dataset can change the ownership of a dataset only to a Project as long as they and the current owner of the dataset are both editors on such project.",
        "operationId": "post-datasets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/datasets/a598c7/": {
                        "archived": false,
                        "description": "Data collected in 2019",
                        "end_date": "2020-05-20T19:57:26.875000",
                        "is_published": true,
                        "name": "New dataset",
                        "notes": "",
                        "start_date": "2020-05-20T19:57:26.875000",
                        "streaming": "no"
                      },
                      "https://app.crunch.io/api/datasets/a598c8935/": {
                        "archived": true,
                        "description": "Indiana",
                        "end_date": "2005-05-20T19:57:26.875000",
                        "is_published": false,
                        "name": "Consumer preferences 2004",
                        "notes": "Archived",
                        "start_date": "2004-05-20T19:57:26.875000",
                        "streaming": "no"
                      }
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "type": "string"
                  },
                  "index": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "properties": {
                        "archived": {
                          "type": "boolean"
                        },
                        "description": {
                          "type": "string"
                        },
                        "end_date": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "is_published": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string"
                        },
                        "start_date": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "streaming": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid underlying dataset invalid_id"
                      ],
                      "message": "Invalid underlying dataset invalid_id",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Update datasets",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:catalog\",\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/a598c8935/\": {\n      \"name\": \"Consumer preferences 2004\",\n      \"description\": \"Indiana\",\n      \"notes\": \"Archived\",\n      \"start_date\": \"2004-05-20T19:57:26.875000\",\n      \"end_date\": \"2005-05-20T19:57:26.875000\",\n      \"is_published\": false,\n      \"archived\": true,\n      \"streaming\": \"no\"\n    },\n    \"https://app.crunch.io/api/datasets/a598c7/\": {\n      \"name\": \"New dataset\",\n      \"description\": \"Data collected in 2019\",\n      \"notes\": \"\",\n      \"start_date\": \"2020-05-20T19:57:26.875000\",\n      \"end_date\": \"2020-05-20T19:57:26.875000\",\n      \"is_published\": true,\n      \"archived\": false,\n      \"streaming\": \"no\"\n    }\n  }\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasets = await fetch(\n  &apos;https://app.crunch.io/api/datasets/&apos;, {\n   method: &apos;PATCH&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/a598c8935/\": {\n         \"name\": \"Consumer preferences 2004\",\n         \"description\": \"Indiana\",\n         \"notes\": \"Archived\",\n         \"start_date\": \"2004-05-20T19:57:26.875000\",\n         \"end_date\": \"2005-05-20T19:57:26.875000\",\n         \"is_published\": false,\n         \"archived\": true,\n         \"streaming\": \"no\"\n       },\n       \"https://app.crunch.io/api/datasets/a598c7/\": {\n         \"name\": \"New dataset\",\n         \"description\": \"Data collected in 2019\",\n         \"notes\": \"\",\n         \"start_date\": \"2020-05-20T19:57:26.875000\",\n         \"end_date\": \"2020-05-20T19:57:26.875000\",\n         \"is_published\": true,\n         \"archived\": false,\n         \"streaming\": \"no\"\n       }\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "POST a Shoji Entity JSON object to create a new Dataset; The returned Location header refers to the new Dataset resource. A 201 (Created) indicates success. A 202 (Accepted) indicates that dataset creation is happening in the background; read the response body to get a Progress URL.\n\nThe POST body must contain a \u201cname\u201d attribute. You can also include a Crunch Table in a \u201ctable\u201d key, as discussed in the Feature Guide.",
        "operationId": "post-datasets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "x49 Canada",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "v1": {
                            "alias": "v1",
                            "name": "v1",
                            "type": "numeric"
                          },
                          "v2": {
                            "alias": "v2",
                            "name": "v2",
                            "type": "text"
                          },
                          "v3": {
                            "alias": "v3",
                            "name": "v3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          },
                          "v5": {
                            "alias": "v5",
                            "name": "v5",
                            "resolution": "D",
                            "type": "datetime"
                          },
                          "v6": {
                            "alias": "v6",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "True",
                                "numeric_value": 1,
                                "selected": true
                              },
                              {
                                "id": 0,
                                "missing": false,
                                "name": "False",
                                "numeric_value": 0
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v6",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "v1",
                          "v2",
                          "v3",
                          "v4",
                          "v5",
                          "v6"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "name": "2020-04-24 19:25:07.449 MDT"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "description": "A dataset to illustrate the API",
                      "name": "Example dataset",
                      "table": {
                        "element": "crunch:table",
                        "hidden": [
                          "caseid"
                        ],
                        "metadata": {
                          "allpets": {
                            "alias": "allpets",
                            "categories": [
                              {
                                "id": 2,
                                "missing": false,
                                "name": "not selected",
                                "numeric_value": null,
                                "selected": false
                              },
                              {
                                "id": 1,
                                "missing": false,
                                "name": "selected",
                                "numeric_value": null,
                                "selected": true
                              },
                              {
                                "id": 9,
                                "missing": true,
                                "name": "not asked",
                                "numeric_value": 9
                              },
                              {
                                "id": 8,
                                "missing": true,
                                "name": "skipped",
                                "numeric_value": 8
                              }
                            ],
                            "description": "Do you have any of these animals as pets? Please select all that apply.",
                            "name": "All pets owned",
                            "subvariables": [
                              {
                                "alias": "allpets_1",
                                "name": "Cat"
                              },
                              {
                                "alias": "allpets_2",
                                "name": "Dog"
                              },
                              {
                                "alias": "allpets_3",
                                "name": "Bird"
                              }
                            ],
                            "type": "multiple_response"
                          },
                          "caseid": {
                            "alias": "caseid",
                            "name": "Case ID",
                            "type": "numeric"
                          },
                          "country": {
                            "alias": "country",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "Argentina",
                                "numeric_value": null
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "Australia",
                                "numeric_value": null
                              },
                              {
                                "id": 3,
                                "missing": false,
                                "name": "Austria",
                                "numeric_value": null
                              },
                              {
                                "id": 4,
                                "missing": false,
                                "name": "Belgium",
                                "numeric_value": null
                              },
                              {
                                "id": 5,
                                "missing": false,
                                "name": "Brazil",
                                "numeric_value": null
                              }
                            ],
                            "description": "",
                            "name": "Country",
                            "type": "categorical"
                          },
                          "ndogs": {
                            "alias": "ndogs",
                            "description": null,
                            "missing_rules": {
                              "not asked": {
                                "value": -99
                              },
                              "skipped": {
                                "value": -98
                              }
                            },
                            "name": "Number of dogs",
                            "type": "numeric"
                          },
                          "ndogs_a": {
                            "alias": "ndogs_a",
                            "description": "How many dogs do you have?",
                            "name": "Number of dogs -- With papers",
                            "type": "numeric"
                          },
                          "ndogs_b": {
                            "alias": "ndogs_b",
                            "description": "How many dogs do you have?",
                            "name": "Number of dogs -- Mutts",
                            "type": "numeric"
                          },
                          "petloc": {
                            "alias": "petloc",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "Cat",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "Dog",
                                "numeric_value": 2
                              },
                              {
                                "id": 3,
                                "missing": false,
                                "name": "Bird",
                                "numeric_value": 3
                              },
                              {
                                "id": 8,
                                "missing": true,
                                "name": "Skipped",
                                "numeric_value": 8
                              },
                              {
                                "id": 9,
                                "missing": true,
                                "name": "Not Asked",
                                "numeric_value": 9
                              }
                            ],
                            "description": "Name the kinds of pets you have at these locations.",
                            "name": "Pets by location",
                            "subvariables": [
                              {
                                "alias": "petloc_home",
                                "name": "Home"
                              },
                              {
                                "alias": "petloc_work",
                                "name": "Work"
                              }
                            ],
                            "type": "categorical_array"
                          },
                          "q1": {
                            "alias": "q1",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "Cat",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "Dog",
                                "numeric_value": 2
                              },
                              {
                                "id": 3,
                                "missing": false,
                                "name": "Bird",
                                "numeric_value": 3
                              },
                              {
                                "id": 8,
                                "missing": true,
                                "name": "Skipped",
                                "numeric_value": 8
                              },
                              {
                                "id": 9,
                                "missing": true,
                                "name": "Not Asked",
                                "numeric_value": 9
                              }
                            ],
                            "description": "What is your favorite pet?",
                            "name": "Pet",
                            "type": "categorical"
                          },
                          "q3": {
                            "alias": "q3",
                            "description": "What is your favorite pet's maiden name?",
                            "missing_rules": {
                              "Not asked": {
                                "value": ""
                              }
                            },
                            "name": "Pet name",
                            "type": "text"
                          },
                          "wave": {
                            "alias": "wave",
                            "description": "",
                            "name": "Wave",
                            "resolution": "D",
                            "type": "datetime"
                          }
                        },
                        "order": [
                          {
                            "entities": [
                              "allpets",
                              "q1",
                              "petloc"
                            ],
                            "group": "Key Pet Indicators"
                          },
                          {
                            "entities": [
                              "ndogs",
                              {
                                "entities": [
                                  "ndogs_a",
                                  "ndogs_b"
                                ],
                                "group": "Number of dogs by type"
                              }
                            ],
                            "group": "Dog Metrics"
                          },
                          {
                            "entities": [
                              "q3"
                            ],
                            "group": "Details"
                          },
                          {
                            "entities": [
                              "country",
                              "wave"
                            ],
                            "group": "Dimensions"
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "name": "data.frame(x = 1:1024)",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "x": {
                            "alias": "x",
                            "name": "x",
                            "type": "numeric"
                          }
                        },
                        "order": [
                          "x"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-5": {
                  "value": {
                    "body": {
                      "name": "mrdf",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "mr_1": {
                            "alias": "mr_1",
                            "name": "mr_1",
                            "type": "numeric"
                          },
                          "mr_2": {
                            "alias": "mr_2",
                            "name": "mr_2",
                            "type": "numeric"
                          },
                          "mr_3": {
                            "alias": "mr_3",
                            "name": "mr_3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "mr_1",
                          "mr_2",
                          "mr_3",
                          "v4"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-6": {
                  "value": {
                    "body": {
                      "name": "mrdf[c(\"mr_3\", \"v4\")]",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "mr_3": {
                            "alias": "mr_3",
                            "name": "mr_3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "mr_3",
                          "v4"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-7": {
                  "value": {
                    "body": {
                      "name": "df[, 2:5]",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "v2": {
                            "alias": "v2",
                            "name": "v2",
                            "type": "text"
                          },
                          "v3": {
                            "alias": "v3",
                            "name": "v3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          },
                          "v5": {
                            "alias": "v5",
                            "name": "v5",
                            "resolution": "D",
                            "type": "datetime"
                          }
                        },
                        "order": [
                          "v2",
                          "v3",
                          "v4",
                          "v5"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-8": {
                  "value": {
                    "body": {
                      "name": "d2",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "v1": {
                            "alias": "v1",
                            "name": "v1",
                            "type": "numeric"
                          },
                          "v2": {
                            "alias": "v2",
                            "name": "v2",
                            "type": "numeric"
                          },
                          "v3": {
                            "alias": "v3",
                            "name": "v3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          },
                          "v5": {
                            "alias": "v5",
                            "name": "v5",
                            "resolution": "D",
                            "type": "datetime"
                          },
                          "v6": {
                            "alias": "v6",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "True",
                                "numeric_value": 1,
                                "selected": true
                              },
                              {
                                "id": 0,
                                "missing": false,
                                "name": "False",
                                "numeric_value": 0
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v6",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "v1",
                          "v2",
                          "v3",
                          "v4",
                          "v5",
                          "v6"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-9": {
                  "value": {
                    "body": {
                      "name": "df1",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "bar": {
                            "alias": "bar",
                            "name": "bar",
                            "type": "numeric"
                          },
                          "foo": {
                            "alias": "foo",
                            "name": "foo",
                            "type": "numeric"
                          }
                        },
                        "order": [
                          "foo",
                          "bar"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "dataset_id": {
                        "type": "string"
                      },
                      "derivation": {
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "end_date": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "is_published": {
                        "type": "boolean"
                      },
                      "maintainer": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "owner": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "pk": {
                        "title": "PkUnion",
                        "type": "string"
                      },
                      "settings": {
                        "properties": {
                          "complete_cases_default": {
                            "type": "boolean"
                          },
                          "min_base_size": {
                            "type": "integer"
                          },
                          "suppress_on_min_base_size": {
                            "type": "boolean"
                          },
                          "viewers_can_change_weight": {
                            "title": "ViewersCanChangeWeightUnion",
                            "type": "boolean"
                          },
                          "viewers_can_export": {
                            "type": "boolean"
                          },
                          "weight": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Weight",
                            "type": "array"
                          }
                        },
                        "title": "SettingsUnion",
                        "type": "object"
                      },
                      "start_date": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "streaming": {
                        "type": "string"
                      },
                      "table": {
                        "type": "object"
                      },
                      "view_of": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "weight_variables": {
                        "items": {
                          "type": "string"
                        },
                        "title": "Weight",
                        "type": "array"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "enum": [
                      "shoji:entity"
                    ],
                    "title": "DatasetsPostRequestElement",
                    "type": "string"
                  }
                },
                "title": "DatasetsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/",
                      "value": "https://app.crunch.io/api/progress/create_dataset_from_source%3A6b2d093463454c74afb881bc56a128b9%24fd5b49b8-35f9-4260-804e-17c83c66b313/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid underlying dataset invalid_id"
                      ],
                      "message": "Invalid underlying dataset invalid_id",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create dataset",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"body\": {\n    \"name\": \"x49 Canada\",\n    \"table\": {\n      \"element\": \"crunch:table\",\n      \"metadata\": {\n        \"v1\": {\n          \"alias\": \"v1\",\n          \"name\": \"v1\",\n          \"type\": \"numeric\"\n        },\n        \"v2\": {\n          \"alias\": \"v2\",\n          \"name\": \"v2\",\n          \"type\": \"text\"\n        },\n        \"v3\": {\n          \"alias\": \"v3\",\n          \"name\": \"v3\",\n          \"type\": \"numeric\"\n        },\n        \"v4\": {\n          \"alias\": \"v4\",\n          \"categories\": [\n            {\n              \"id\": 1,\n              \"missing\": false,\n              \"name\": \"B\",\n              \"numeric_value\": 1\n            },\n            {\n              \"id\": 2,\n              \"missing\": false,\n              \"name\": \"C\",\n              \"numeric_value\": 2\n            },\n            {\n              \"id\": -1,\n              \"missing\": true,\n              \"name\": \"No Data\",\n              \"numeric_value\": null\n            }\n          ],\n          \"name\": \"v4\",\n          \"type\": \"categorical\"\n        },\n        \"v5\": {\n          \"alias\": \"v5\",\n          \"name\": \"v5\",\n          \"resolution\": \"D\",\n          \"type\": \"datetime\"\n        },\n        \"v6\": {\n          \"alias\": \"v6\",\n          \"categories\": [\n            {\n              \"id\": 1,\n              \"missing\": false,\n              \"name\": \"True\",\n              \"numeric_value\": 1,\n              \"selected\": true\n            },\n            {\n              \"id\": 0,\n              \"missing\": false,\n              \"name\": \"False\",\n              \"numeric_value\": 0\n            },\n            {\n              \"id\": -1,\n              \"missing\": true,\n              \"name\": \"No Data\",\n              \"numeric_value\": null\n            }\n          ],\n          \"name\": \"v6\",\n          \"type\": \"categorical\"\n        }\n      },\n      \"order\": [\n        \"v1\",\n        \"v2\",\n        \"v3\",\n        \"v4\",\n        \"v5\",\n        \"v6\"\n      ]\n    }\n  },\n  \"element\": \"shoji:entity\"\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasets = await fetch(\n  &apos;https://app.crunch.io/api/datasets/&apos;, {\n   method: &apos;POST&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"x49 Canada\",\n       \"table\": {\n         \"element\": \"crunch:table\",\n         \"metadata\": {\n           \"v1\": {\n             \"alias\": \"v1\",\n             \"name\": \"v1\",\n             \"type\": \"numeric\"\n           },\n           \"v2\": {\n             \"alias\": \"v2\",\n             \"name\": \"v2\",\n             \"type\": \"text\"\n           },\n           \"v3\": {\n             \"alias\": \"v3\",\n             \"name\": \"v3\",\n             \"type\": \"numeric\"\n           },\n           \"v4\": {\n             \"alias\": \"v4\",\n             \"categories\": [\n               {\n                 \"id\": 1,\n                 \"missing\": false,\n                 \"name\": \"B\",\n                 \"numeric_value\": 1\n               },\n               {\n                 \"id\": 2,\n                 \"missing\": false,\n                 \"name\": \"C\",\n                 \"numeric_value\": 2\n               },\n               {\n                 \"id\": -1,\n                 \"missing\": true,\n                 \"name\": \"No Data\",\n                 \"numeric_value\": null\n               }\n             ],\n             \"name\": \"v4\",\n             \"type\": \"categorical\"\n           },\n           \"v5\": {\n             \"alias\": \"v5\",\n             \"name\": \"v5\",\n             \"resolution\": \"D\",\n             \"type\": \"datetime\"\n           },\n           \"v6\": {\n             \"alias\": \"v6\",\n             \"categories\": [\n               {\n                 \"id\": 1,\n                 \"missing\": false,\n                 \"name\": \"True\",\n                 \"numeric_value\": 1,\n                 \"selected\": true\n               },\n               {\n                 \"id\": 0,\n                 \"missing\": false,\n                 \"name\": \"False\",\n                 \"numeric_value\": 0\n               },\n               {\n                 \"id\": -1,\n                 \"missing\": true,\n                 \"name\": \"No Data\",\n                 \"numeric_value\": null\n               }\n             ],\n             \"name\": \"v6\",\n             \"type\": \"categorical\"\n           }\n         },\n         \"order\": [\n           \"v1\",\n           \"v2\",\n           \"v3\",\n           \"v4\",\n           \"v5\",\n           \"v6\"\n         ]\n       }\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/": {
      "delete": {
        "description": "With sufficient authorization, a successful DELETE request removes the dataset from the Crunch system and responds with 204 status.",
        "operationId": "delete-datasets-datasetId",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Cannot delete this dataset because it contains views.\n"
                      ],
                      "message": "Cannot delete this dataset because it contains views.",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Deletion failed - item in use"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Delete dataset",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/449a1e2a77804903a170a2844d9c2396/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDatasetId = await fetch(\n  &apos;https://app.crunch.io/api/datasets/449a1e2a77804903a170a2844d9c2396/&apos;,\n{\n   method: &apos;DELETE&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "Returns the details for one given dataset. \n\n### Additional catalogs (related options):\n\n* actions - All actions executed on this dataset.\n* batches - Returns all the batches (successful and failed) used for this dataset.\n* boxdata - Records that correspond to published CrunchBoxes.\n* decks - The list of all decks on this dataset for the authenticated user.\n* filters - Makes available the public and user-created filters.\n* folders\n* forks - Returns all the forks created from this dataset\n* multitables - Similar to filters, displays all available multitables.\n* parent - Indicates the catalog where this dataset is found (project or main dataset catalog).\n* permissions - Returns the list of all users and teams with access to this dataset.\n* project\n* savepoints - Lists the saved versions for this dataset.\n* scripts\n* tags\n* teams - Lists all teams that have access to this dataset via any means, either from project inherited permissions or shares via teams or directly to the team.\n* users - Lists all users that have access to this dataset via any means, either from project inherited permissions or shares via teams or directly to the user.\n* variables - Catalog of all public variables of this dataset.\n* variables_private\n* views",
        "operationId": "get-datasets-datasetId",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "access_time": "2020-05-20T19:57:26.818000",
                        "account": "https://app.crunch.io/api/accounts/c7b69081c146450fa024723cca471c3a/",
                        "app_settings": {},
                        "archived": false,
                        "creation_time": "2020-05-20T19:57:26.955000",
                        "current_editor": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "current_editor_name": "captain-59690949fbfa9f206b49e573ebef2b110267e1de985d3825fc08199f113be304",
                        "description": "",
                        "end_date": "2020-05-20T19:57:26.875000",
                        "id": "7411cd3e09044d879d4537d368e876a7",
                        "is_published": true,
                        "logo": {
                          "favicon": "",
                          "large": "",
                          "small": ""
                        },
                        "maintainer": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "modification_time": "2020-05-20T19:57:26.875000",
                        "name": "New dataset",
                        "notes": "",
                        "owner": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "owner_name": "captain-59690949fbfa9f206b49e573ebef2b110267e1de985d3825fc08199f113be304",
                        "palette": {},
                        "permissions": {
                          "edit": true,
                          "view": true
                        },
                        "size": {
                          "columns": 35,
                          "rows": 8542,
                          "unfiltered_rows": 5612
                        },
                        "start_date": "2020-05-20T19:57:26.875000",
                        "streaming": "no",
                        "view_of": "https://app.crunch.io/api/datasets/60284cf788804ca3b59f1c259bf1f85e/"
                      },
                      "catalogs": {
                        "actions": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/actions/",
                        "batches": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/batches/",
                        "boxdata": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/boxdata/",
                        "decks": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/decks/",
                        "filters": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/filters/",
                        "folders": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/",
                        "forks": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/forks/",
                        "multitables": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/multitables/",
                        "parent": "https://app.crunch.io/api/datasets/",
                        "permissions": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/permissions/",
                        "project": "https://app.crunch.io/api/projects/personal/",
                        "savepoints": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/savepoints/",
                        "scripts": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/scripts/",
                        "tags": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/tags/",
                        "teams": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/teams/",
                        "users": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/users/",
                        "variables": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/",
                        "variables_private": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/private/",
                        "views": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/views/"
                      },
                      "description": "Detail for a given dataset",
                      "element": "shoji:entity",
                      "fragments": {
                        "exclusion": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/exclusion/",
                        "pk": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/pk/",
                        "preferences": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/preferences/",
                        "publish": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/publish/",
                        "schema": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/schema/",
                        "settings": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/settings/",
                        "state": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/state/",
                        "stream": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/stream/",
                        "table": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/table/"
                      },
                      "orders": {
                        "variables_hier": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/hier/",
                        "variables_personal": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/personal/",
                        "variables_weights": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/weights/"
                      },
                      "self": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/",
                      "urls": {
                        "editor_url": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "owner_url": "https://app.crunch.io/api/projects/8259914074b74ac1a922ec0dfc34a7c3/",
                        "user_url": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/"
                      },
                      "views": {
                        "applied_filters": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/filters/applied/",
                        "cube": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/cube/",
                        "export": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/export/",
                        "second_order_analysis": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/second_order_analysis/",
                        "summary": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/summary/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "access_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "account": {
                          "description": "URL of the account entity that owns the dataset.",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "app_settings": {
                          "additionalProperties": false,
                          "description": "A place for API clients to store values they need per dataset; It is recommended that clients namespace their keys to avoid collisions.",
                          "title": "AppSettings",
                          "type": "object"
                        },
                        "archived": {
                          "default": "false",
                          "description": "Whether the dataset is \u201carchived\u201d or active.",
                          "type": "boolean"
                        },
                        "creation_time": {
                          "description": "Datetime at which the dataset was created in Crunch.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "current_editor": {
                          "description": "URL of the user entity that is currently editing the dataset, or null if there is no current editor.",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "current_editor_name": {
                          "description": "Current editor\u2019s name, for display,",
                          "type": "string"
                        },
                        "description": {
                          "description": "A longer description of the dataset.",
                          "type": "string"
                        },
                        "end_date": {
                          "description": "End date/time of the dataset\u2019s data, defining a start_date:end_date range.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "The dataset\u2019s id.",
                          "type": "string"
                        },
                        "is_published": {
                          "description": "Indicates if the dataset is published to viewers or not.",
                          "type": "boolean"
                        },
                        "logo": {
                          "additionalProperties": false,
                          "description": "Contains the read-only URLs for the branding-related logos for the datasset.",
                          "properties": {
                            "favicon": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            }
                          },
                          "title": "Logo",
                          "type": "object"
                        },
                        "maintainer": {
                          "description": "The URL of the dataset maintener. Will always point to a user.",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "modification_time": {
                          "description": "Datetime of the last modification for this dataset globally.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the dataset.",
                          "type": "string"
                        },
                        "notes": {
                          "description": "Additional information you want to associate with this dataset.",
                          "type": "string"
                        },
                        "owner": {
                          "description": "URL of the user entity of the dataset\u2019s owner (Yourself or a project).",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "owner_name": {
                          "description": "The owner\u2019s name, for display.",
                          "type": "string"
                        },
                        "palette": {
                          "additionalProperties": false,
                          "description": "Contains the three branding-related colors that are used to theme the dataset.",
                          "title": "AppSettings",
                          "type": "object"
                        },
                        "permissions": {
                          "additionalProperties": false,
                          "description": "Authorizations on this dataset.",
                          "properties": {
                            "edit": {
                              "type": "boolean"
                            },
                            "view": {
                              "type": "boolean"
                            }
                          },
                          "title": "Permissions",
                          "type": "object"
                        },
                        "population": {
                          "description": "An object with keys size and magnitude, both integers: the total population represented by a sample. magnitude is the default power-of-ten for display; use 3 for thousands (\u201cK\u201d), 6 for millions (\u201cM\u201d), etc. For example, if the total population is 3000: set \u201csize: 3000\u201d and \u201cmagnitude: 3\u201d, rather than size 3 magnitude 3.",
                          "type": "object"
                        },
                        "size": {
                          "additionalProperties": false,
                          "description": "Dimensions of the dataset.",
                          "properties": {
                            "columns": {
                              "type": "integer"
                            },
                            "rows": {
                              "type": "integer"
                            },
                            "unfiltered_rows": {
                              "type": "integer"
                            }
                          },
                          "title": "Size",
                          "type": "object"
                        },
                        "start_date": {
                          "description": "Date/time for which the data in the dataset corresponds.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "streaming": {
                          "description": "Possible values \u201cno\u201d, \u201cfinished\u201d, and \u201cstreaming\u201d to enable/disable streaming.",
                          "enum": [
                            "no",
                            "finished",
                            "streaming"
                          ],
                          "example": "no",
                          "type": "string"
                        },
                        "view_of": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "actions": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "batches": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "boxdata": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "decks": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "filters": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "folders": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "forks": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "multitables": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "parent": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "permissions": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "project": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "savepoints": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "scripts": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "tags": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "teams": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "users": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables_private": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "views": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "default": "shoji:entity",
                      "enum": [
                        "shoji:entity"
                      ],
                      "example": "shoji:entity",
                      "type": "string"
                    },
                    "fragments": {
                      "additionalProperties": false,
                      "properties": {
                        "exclusion": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "pk": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "preferences": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "publish": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "schema": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "settings": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "state": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "stream": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "table": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Fragments",
                      "type": "object"
                    },
                    "orders": {
                      "additionalProperties": false,
                      "properties": {
                        "variables_hier": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables_personal": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables_weights": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Orders",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "editor_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "owner_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "user_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Urls",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "applied_filters": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "cube": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "export": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "second_order_analysis": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "summary": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "DatasetsDatasetIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Dataset details",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/c61d034aeed549d6adcd029d52ad4ff6/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDatasetId = await fetch(\n  &apos;https://app.crunch.io/api/datasets/c61d034aeed549d6adcd029d52ad4ff6/&apos;,\n{\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "A successful PATCH request returns a 204 response. The attributes changed will be seen by all users with access to this dataset; i.e., names, descriptions, and archived state are not merely attributes of your view of the data but of the datasets themselves.\n\nAuthorization is required: you must have \"edit\" privileges on this dataset. If you try to PATCH and are not authorized, you will receive a 403 response and no changes will be made. If you have edit permissions but are not the current editor of this dataset, PATCH requests of anything other than \"current_editor\" will respond with 409 status. You will need first to PATCH to make yourself the current editor and then proceed to make the desired changes.\n\nWhen PATCHing, you may include only the keys that are being modified, or you may send the complete entity. As long as the keys that cannot be modified via PATCH here are not modified, the request will succeed.\n\n### Changing dataset ownership\nIf you are the current editor of a dataset you can change its owner by PATCHing the owner attribute with the URL of the new owner.\n\nOnly Users or Projects can be set as owners of a dataset.\n\n* Users: New owner needs to be advanced users to be owner of a dataset.\n* Projects: Authenticated user needs to have edit permissions on the project.\n\n### Copying over from another dataset\nIn the needed case to copy over the work from another dataset to the current one, it is possible to issue a PATCH request with the copy_from attribute pointing to the URL of the source dataset to use.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"copy_from\": \"https://app.crunch.io/api/datasets/1234/\"\n  }\n}\n```\n\nAll dataset attributes, permissions, derivations, private variables, etc will be brought over to the current dataset:\n\n* Decks\n* Filters\n* Multitables\n* Comparisons\n* Personal variable order\n* Derived variables\n* Personal variables\n* Permissions\n* Variable Tags\n\nThe endpoint will return a 202 (Accepted) status code. The response will be a shoji:entity containing the Progress URL that provides status information on the completion of the operation. The Location header URL in the output response is referred to the source dataset.\n\nIt is possible to copy information only for one user from another dataset, the payload will need the extra user key. It can contain either a user URL or a user email:\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"copy_from\": \"https://app.crunch.io/api/datasets/1234/\",\n    \"user\": \"https://app.crunch.io/api/users/abcd/\"\n  }\n}\n```\n\nIf the current dataset already contains Variable Tags, the incoming ones (if any) will be merged with the existing ones.",
        "operationId": "patch-datasets-datasetId",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "description": "",
                      "name": "oyster 123"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "app_settings": {
                        "whaam": {
                          "dashboardName": "Dashboard name",
                          "dashboardType": "deck",
                          "dashboardUrl": "https://app.crunch.io/api/dashboards/rb7/",
                          "hideViewDatasetControls": false,
                          "isDashboardTheLandingPage": true
                        }
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "app_settings": {
                        "additionalProperties": false,
                        "properties": {
                          "whaam": {
                            "additionalProperties": false,
                            "properties": {
                              "dashboardName": {
                                "type": "string"
                              },
                              "dashboardType": {
                                "type": "string"
                              },
                              "dashboardUrl": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "hideViewDatasetControls": {
                                "type": "boolean"
                              },
                              "isDashboardTheLandingPage": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Whaam",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "AppSettings",
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "type": "string"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid value, must be a string or a date object on field: start_date\n"
                      ],
                      "message": "Invalid value, must be a string or a date object on field: start_date",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPatchRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Update dataset",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/3a339aca80564f94a1aa31cd242d31e6/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"body\": {\n    \"description\": \"\",\n    \"name\": \"oyster 123\"\n  },\n  \"element\": \"shoji:entity\"\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDatasetId = await fetch(\n  &apos;https://app.crunch.io/api/datasets/3a339aca80564f94a1aa31cd242d31e6/&apos;,\n{\n   method: &apos;PATCH&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"description\": \"\",\n       \"name\": \"oyster 123\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/projects/shared/": {
      "get": {
        "description": "Returns a list of datasets other users have shared with the authenticated user.",
        "operationId": "get-projects-shared",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "access_time": null,
                        "description": "Items that other users have shared with you",
                        "modification_time": null,
                        "name": "Shared",
                        "owner": "https://app.crunch.io/api/users/c4ded60d11e245c1841ecd36bd5b8764/",
                        "owner_id": "https://app.crunch.io/api/users/c4ded60d11e245c1841ecd36bd5b8764/",
                        "permissions": {
                          "edit": false,
                          "view": true
                        }
                      },
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/20299cf436764a21bc2b96242cc63800/": {
                          "access_time": "1970-01-01T00:00:00+00:00",
                          "account": "https://app.crunch.io/api/accounts/6e211cae2ca446e2bfa349459c89d750/",
                          "archived": false,
                          "creation_time": "2020-05-20T19:04:50.332000+00:00",
                          "current_editor": "https://app.crunch.io/api/users/59ed91afa81843c68388e575c0267e7d/",
                          "current_editor_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "description": "",
                          "end_date": null,
                          "id": "20299cf436764a21bc2b96242cc63800",
                          "is_published": true,
                          "modification_time": null,
                          "name": "Dataset 1",
                          "owner_id": "https://app.crunch.io/api/projects/05dd0d6e20a24f75b5e4db4d10aea7a3/",
                          "owner_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "size": {
                            "columns": null,
                            "rows": null,
                            "unfiltered_rows": null
                          },
                          "start_date": null,
                          "streaming": "no",
                          "type": "dataset",
                          "view_of": null
                        },
                        "https://app.crunch.io/api/datasets/2ef557af7b0948caa3a52a65e207ed4b/": {
                          "access_time": "1970-01-01T00:00:00+00:00",
                          "account": "https://app.crunch.io/api/accounts/6e211cae2ca446e2bfa349459c89d750/",
                          "archived": false,
                          "creation_time": "2020-05-20T19:04:51.590000+00:00",
                          "current_editor": "https://app.crunch.io/api/users/59ed91afa81843c68388e575c0267e7d/",
                          "current_editor_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "description": "",
                          "end_date": null,
                          "id": "2ef557af7b0948caa3a52a65e207ed4b",
                          "is_published": true,
                          "modification_time": null,
                          "name": "Dataset 2",
                          "owner_id": "https://app.crunch.io/api/projects/05dd0d6e20a24f75b5e4db4d10aea7a3/",
                          "owner_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "size": {
                            "columns": null,
                            "rows": null,
                            "unfiltered_rows": null
                          },
                          "start_date": null,
                          "streaming": "no",
                          "type": "dataset",
                          "view_of": null
                        }
                      },
                      "self": "https://app.crunch.io/api/projects/shared/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "access_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "modification_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "owner": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "owner_id": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "permissions": {
                          "additionalProperties": false,
                          "properties": {
                            "edit": {
                              "type": "boolean"
                            },
                            "view": {
                              "type": "boolean"
                            }
                          },
                          "title": "Permissions",
                          "type": "object"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "access_time": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "account": {
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "type": "string"
                          },
                          "archived": {
                            "type": "boolean"
                          },
                          "creation_time": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "current_editor": {
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "type": "string"
                          },
                          "current_editor_name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "end_date": {
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "is_published": {
                            "type": "boolean"
                          },
                          "modification_time": {
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "owner_id": {
                            "format": "uri",
                            "type": "string"
                          },
                          "owner_name": {
                            "type": "string"
                          },
                          "permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Permissions",
                            "type": "object"
                          },
                          "size": {
                            "additionalProperties": false,
                            "properties": {
                              "columns": {
                                "nullable": true,
                                "type": "number"
                              },
                              "rows": {
                                "nullable": true,
                                "type": "number"
                              },
                              "unfiltered_rows": {
                                "nullable": true,
                                "type": "number"
                              }
                            },
                            "required": [],
                            "title": "Size",
                            "type": "object"
                          },
                          "start_date": {
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "streaming": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "view_of": {
                            "format": "uri",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ProjectsSharedGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Datasets shared with me",
        "tags": [
          "Projects"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/projects/shared/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const sharedProjects = await fetch(\n  &apos;https://app.crunch.io/api/projects/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n   }\n  })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index);"
          }
        ]
      }
    },
    "/dashboards/": {
      "get": {
        "description": "A dashboard is a deck that has been configured to be displayed in presentation mode by default. Dashboards can be accessed directly by a client URL where only the Deck ID is made available.\n\nThis endpoint works as a helper to obtain a direct reference to the deck without necessarily knowing under which Dataset it is located. It should be used to discover available dashboards that have been shared with you directly.\n\nTo discover a specific dashboard, it must be searched by ID via a query string parameter.\n\nDashboards that are available for searching are any of those that the user has view access to. These are the decks that are either public or shared through a team on any of the datasets the authenticated user has at least view permissions on.\n\nNote that when accessing a dashboard URL from the catalog, the server will 303 redirect to the associated deck entity. So it is safe for clients to guess the dashboard entity URL by appending the dashboard ID to the catalog URL.",
        "operationId": "get-dashboards",
        "parameters": [
          {
            "description": "Dashboard ID",
            "in": "query",
            "name": "id",
            "schema": {
              "default": "vy3",
              "example": "vy3",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {},
                      "self": "https://app.crunch.io/api/dashboards/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DashboardsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dashboards",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/dashboards/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDashboards = await fetch(\n  &apos;https://app.crunch.io/api/dashboards/&apos;, {\n   method: &apos;GET&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "post": {
        "description": "In order to create new dashboards for decks, clients need to issue a POST request to the dashboards catalog containing the desired deck in the body.\n\nThe server will return a Location header with the newly created Dashboard\u2019s URL.\n\nAfter creating a new dashboard, the deck will now contain two new keys on its payload, fragments.dashboard which points to the dashboard and body.dashboard_id which is the ID of the new dashboard, which can be used on the dashboards catalog to search for it.\n\nNote that decks can only have one single dashboard associated, trying to create multiple dashboards for a deck will raise 400 errors. The relationship is 1:1.\n\nWhen decks are deleted, the associated dashboard is also deleted.",
        "operationId": "post-dashboards",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "deck": "https://app.crunch.io/api/datasets/4d088db2d5a841b49879f0847e67d0cc/decks/d3cec6197eb94dcabc7c87a1baa0f2b1/",
                      "name": "Dashboard",
                      "project": "https://app.crunch.io/api/projects/059f11f42b8245a2bf16a589899a0592/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "deck": "https://app.crunch.io/api/datasets/628a307bb38f47848fdb36f44067fb6d/decks/c404e953143940ee897958bbc7f390d3/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "name": "Test dashboard",
                      "project": "https://app.crunch.io/api/projects/05e5e5cdaace4f95a34b06a88a758083/"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "deck": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "enum": [
                      "shoji:entity"
                    ],
                    "title": "Element",
                    "type": "string"
                  }
                },
                "required": [],
                "title": "DashboardsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid project URL\n"
                      ],
                      "message": "Invalid project URL",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DashboardsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create dashboard",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/dashboards/ \\\n  -H &apos;Authorization: Bearer 598d9e1105&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"body\": {\n    \"deck\": \"https://app.crunch.io/api/datasets/4d088db2d5a841b49879f0847e67d0cc/decks/d3cec6197eb94dcabc7c87a1baa0f2b1/\",\n    \"name\": \"Dashboard\",\n    \"project\": \"https://app.crunch.io/api/projects/059f11f42b8245a2bf16a589899a0592/\"\n  },\n  \"element\": \"shoji:entity\"\n}\n&apos;",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDashboards = await fetch(\n  &apos;https://app.crunch.io/api/dashboards/&apos;, {\n   method: &apos;POST&apos;,\n   headers: {\n    &apos;Authorization&apos;: &apos;Bearer 598d9e1105&apos;,\n    &apos;Content-Type&apos;: &apos;application/json&apos;\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"deck\": \"https://app.crunch.io/api/datasets/4d088db2d5a841b49879f0847e67d0cc/decks/d3cec6197eb94dcabc7c87a1baa0f2b1/\",\n       \"name\": \"Dashboard\",\n       \"project\": \"https://app.crunch.io/api/projects/059f11f42b8245a2bf16a589899a0592/\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Crunch API (local environment)",
      "url": "https://local.crunch.io:28443/api"
    },
    {
      "description": "Crunch API (testing sandbox 1)",
      "url": "https://alpha.crunch.io/api"
    },
    {
      "description": "Crunch API (testing sandbox 2)",
      "url": "https://stable.crunch.io/api"
    },
    {
      "description": "Crunch API (testing sandbox 3)",
      "url": "https://unstable.crunch.io/api"
    },
    {
      "description": "Crunch API (production). EXERCISE EXTREME CAUTION as all non-GET requests to this server can be destructive to real data.",
      "url": "https://app.crunch.io/api"
    }
  ],
  "security": [
    {
      "Access Token": []
    }
  ],
  "x-api-id": "crunch-api"
}