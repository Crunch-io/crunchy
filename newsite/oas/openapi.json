{
  "components": {
    "schemas": {
      "Account": {
        "description": "",
        "properties": {
          "id": {
            "description": "Account ID",
            "type": "string"
          },
          "logo": {
            "properties": {
              "favicon": {
                "description": "Url of favicon logo image",
                "type": "string"
              },
              "large": {
                "description": "Url of large logo image",
                "type": "string"
              },
              "small": {
                "description": "Url to small logo image",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Account name",
            "type": "string"
          },
          "palette": {
            "$ref": "#/components/schemas/Color-Palette"
          },
          "templates": {
            "properties": {
              "powerpoint": {
                "description": "Url to custom powerpoint template",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "Account",
        "type": "object",
        "x-examples": {
          "example-1": {
            "body": {
              "id": "00001",
              "logo": {
                "favicon": "",
                "large": "",
                "small": ""
              },
              "name": "Crunch",
              "palette": {
                "analysis": [
                  {
                    "Black Hats are black": {
                      "default": false,
                      "palette": [
                        "#ffa299",
                        "#9100bf",
                        "#ff6f00",
                        "#7f6702"
                      ]
                    }
                  },
                  {
                    "White Hats are not": {
                      "default": false,
                      "palette": [
                        "#9d7dc9",
                        "#7f0a00",
                        "#0074bf",
                        "#005283",
                        "#bf1001",
                        "#ffac7f",
                        "#ffac7f",
                        "#bf1001"
                      ]
                    }
                  },
                  {
                    "Just blue": {
                      "default": false,
                      "palette": [
                        "#019cff",
                        "#80cdff"
                      ]
                    }
                  },
                  {
                    "Not a new color palette": {
                      "default": true,
                      "palette": [
                        "#005283",
                        "#bf1001",
                        "#bf9a00"
                      ]
                    }
                  },
                  {
                    "New color palette": {
                      "default": false,
                      "palette": [
                        "#ff5900"
                      ]
                    }
                  }
                ]
              },
              "templates": {
                "powerpoint": "https://t.crunch.io/act_templates/account-crunch-jcfojm-powerpoint.pptx"
              }
            },
            "catalogs": {
              "applications": "https://app.crunch.io/api/account/applications/",
              "users": "https://app.crunch.io/api/account/users/"
            },
            "description": "Details for an account",
            "element": "shoji:entity",
            "self": "https://app.crunch.io/api/account/",
            "views": {
              "logo": "https://app.crunch.io/api/account/logo/",
              "templates": "https://app.crunch.io/api/account/templates/"
            }
          }
        }
      },
      "Analysis-color-palette": {
        "properties": {
          "default": {
            "description": "Is this the default color palette to use",
            "type": "boolean"
          },
          "palette": {
            "items": {
              "$ref": "#/components/schemas/Hex-color-code"
            },
            "type": "array"
          }
        },
        "title": "Analysis-color-palette",
        "type": "object"
      },
      "Brand-Palette": {
        "description": "Brand custom colors",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/Hex-color-code"
          },
          "primary": {
            "$ref": "#/components/schemas/Hex-color-code"
          },
          "secondary": {
            "$ref": "#/components/schemas/Hex-color-code"
          }
        },
        "title": "Brand palette",
        "type": "object",
        "x-examples": {
          "example-1": {
            "message": "#BAA5E7",
            "primary": "#FFAABB",
            "secondary": "#G4EEBB"
          }
        }
      },
      "Color-Palette": {
        "description": "",
        "properties": {
          "analysis": {
            "description": "Colors for data display",
            "items": {
              "properties": {
                "Color palette name": {
                  "$ref": "#/components/schemas/Analysis-color-palette"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand-Palette"
          }
        },
        "title": "Color palette",
        "type": "object",
        "x-examples": {
          "example-1": {
            "analysis": [
              {
                "Black Hats are black": {
                  "default": false,
                  "palette": [
                    "#ffa299",
                    "#9100bf",
                    "#ff6f00",
                    "#7f6702"
                  ]
                }
              },
              {
                "White Hats are not": {
                  "default": false,
                  "palette": [
                    "#9d7dc9",
                    "#7f0a00",
                    "#0074bf",
                    "#005283",
                    "#bf1001",
                    "#ffac7f",
                    "#ffac7f",
                    "#bf1001"
                  ]
                }
              },
              {
                "Just blue": {
                  "default": false,
                  "palette": [
                    "#019cff",
                    "#80cdff"
                  ]
                }
              }
            ],
            "brand": {
              "message": "#BAA5E7",
              "primary": "#FFAABB",
              "secondary": "#G4EEBB"
            }
          }
        }
      },
      "Dataset": {
        "properties": {
          "access_time": {
            "description": "Datetime this dataset was last accessed",
            "type": "string"
          },
          "account": {
            "description": "Url to the account this dataset belongs to",
            "type": "string"
          },
          "archived": {
            "description": "This dataset has been archived",
            "type": "boolean"
          },
          "creation_time": {
            "description": "Datetime dataset was created",
            "type": "string"
          },
          "current_editor": {
            "description": "Url to user specified as the current editor",
            "type": "string"
          },
          "current_editor_name": {
            "description": "Name of the user marked as the current dataset editor",
            "type": "string"
          },
          "description": {
            "description": "Dataset description",
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "id": {
            "description": "Dataset id",
            "type": "string"
          },
          "is_published": {
            "description": "Has this dataset been published",
            "type": "boolean"
          },
          "midification_time": {
            "description": "Datetime this dataset was last modified",
            "type": "string"
          },
          "name": {
            "description": "Dataset name",
            "type": "string"
          },
          "owner_id": {
            "description": "Url to this dataset's parent project",
            "type": "string"
          },
          "owner_name": {
            "description": "Name of this dataset's parent project",
            "type": "string"
          },
          "permissions": {
            "properties": {
              "edit": {
                "description": "Does authenticated user have the ability to edit this dataset",
                "type": "boolean"
              },
              "view": {
                "description": "Does authenticated user have the ability to view this dataset",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "size": {
            "properties": {
              "columns": {
                "description": "Number of columns this dataset contains",
                "type": "string"
              },
              "rows": {
                "description": "Number of rows this dataset contains",
                "type": "string"
              },
              "unfiltered_rows": {
                "description": "Number of unfiltered rows this dataset contains",
                "type": "string"
              }
            },
            "type": "object"
          },
          "start_date": {
            "type": "string"
          },
          "streaming": {
            "description": "Is data being streamed into this dataset",
            "type": "boolean"
          },
          "type": {
            "description": "Always &apos;dataset&apos; for this object type",
            "example": "dataset",
            "type": "string"
          },
          "view_of": {
            "type": "string"
          }
        },
        "title": "Dataset",
        "type": "object",
        "x-examples": {
          "example-1": {
            "access_time": "2020-03-27T23:39:30.536000+00:00",
            "account": "https://app.crunch.io/api/accounts/8f04c13804e94ca8b3cf568f8da36cf0/",
            "archived": false,
            "creation_time": "2020-03-25T20:36:10.238000+00:00",
            "current_editor": "https://app.crunch.io/api/users/df3e3c5f7ce74365960d1305373564f0/",
            "current_editor_name": "Crunch Support",
            "description": "",
            "end_date": null,
            "id": "69ec37de2efe483fb81e910ec360b97c",
            "is_published": true,
            "modification_time": "2020-04-02T14:18:20.032000+00:00",
            "name": "Just Eat BX data",
            "owner_id": "https://app.crunch.io/api/projects/70bc37797d734a868fb9bb641cbbcd80/",
            "owner_name": "Just Eat",
            "permissions": {
              "edit": false,
              "view": true
            },
            "size": {
              "columns": 6364,
              "rows": 10596,
              "unfiltered_rows": 10596
            },
            "start_date": null,
            "streaming": "no",
            "type": "dataset",
            "view_of": null
          }
        }
      },
      "Dataset-list": {
        "properties": {
          "url to dataset A": {
            "$ref": "#/components/schemas/Dataset"
          },
          "url to dataset B": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "title": "Dataset-list",
        "type": "object"
      },
      "Hex-color-code": {
        "description": "Hex (RGB) color code",
        "example": "#7f0a00",
        "title": "Hex-color-code",
        "type": "string"
      },
      "Oauth-redirect": {
        "description": "",
        "properties": {
          "authorize_url": {
            "example": "https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=71778389871-ev84c1qhkfsg2fpqd7tv0hhkrsdtqdr5.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fapp.crunch.io%2Fapi%2Fpublic%2Foauth2redirect%2F&scope=openid+profile+email&state=YRR6SCtvzwbsG9gWmssOqD0VVq3QFA&nonce=6974180560616078291587000412&login_hint=joe%40crunch.io&access_type=online",
            "format": "uri",
            "type": "string"
          },
          "email": {
            "example": "joe@gmail.com",
            "format": "email",
            "type": "string"
          },
          "method": {
            "example": "oauth",
            "type": "string"
          }
        },
        "title": "Oauth-redirect",
        "type": "object",
        "x-tags": [
          "Integrating Crunch"
        ]
      },
      "Shoji-catalog": {
        "description": "",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/Shoji-catalog-body"
          },
          "catalogs": {
            "$ref": "#/components/schemas/Shoji-catalog-list"
          },
          "description": {
            "description": "Catalog description",
            "type": "string"
          },
          "element": {
            "$ref": "#/components/schemas/Shoji-catalog-element"
          },
          "index": {
            "properties": {
              "list item A url": {
                "description": "POJO of item A contained in this catalog",
                "type": "object"
              },
              "list item B url": {
                "description": "POJO of item A contained in this catalog",
                "type": "object"
              }
            },
            "type": "object"
          },
          "self": {
            "description": "Url to this api endpoint",
            "format": "uri",
            "title": "Shoji self",
            "type": "string"
          },
          "urls": {
            "$ref": "#/components/schemas/Shoji-url-list"
          },
          "views": {
            "$ref": "#/components/schemas/Shoji-view-list"
          }
        },
        "title": "Shoji catalog",
        "type": "object",
        "x-examples": {}
      },
      "Shoji-catalog-body": {
        "properties": {
          "access_time": {
            "description": "Time catalog was last accessed",
            "type": "string"
          },
          "description": {
            "description": "Catalog description",
            "type": "string"
          },
          "modification_time": {
            "description": "Datetime catalog was last modified",
            "type": "string"
          },
          "name": {
            "description": "Catalog name",
            "type": "string"
          },
          "owner": {
            "description": "Url to catalog owner's user details",
            "type": "string"
          },
          "owner_id": {
            "description": "Url to catalog owner's user details",
            "format": "uri",
            "type": "string"
          },
          "permissions": {
            "properties": {
              "edit": {
                "description": "Is authenticated user allowed to edit catalog",
                "type": "boolean"
              },
              "view": {
                "description": "Is authenticated user allowed to view catalog",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "title": "Shoji catalog body",
        "type": "object"
      },
      "Shoji-catalog-element": {
        "type": "string",
        "description": "Always shoji:catalog for this api endpoint",
        "title": "Shoji catalog element",
        "x-examples": {
          "example-1": "shoji:catalog"
        },
        "enum": [
          "shoji:catalog"
        ],
        "default": "shoji:catalog",
        "example": "shoji:catalog"
      },
      "Shoji-order-element": {
        "type": "string",
        "description": "Always shoji:order for this api endpoint",
        "title": "Shoji order element",
        "x-examples": {
          "example-1": "shoji:order"
        },
        "enum": [
          "shoji:order"
        ],
        "default": "shoji:order",
        "example": "shoji:order"
      },
      "Shoji-catalog-list": {
        "properties": {
          "sub-catalog A url": {
            "description": "Url to this sub-catalog",
            "format": "uri",
            "type": "string"
          },
          "sub-catalog B url": {
            "description": "Url to this sub-catalog",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "Shoji catalog list",
        "type": "object"
      },
      "Shoji-entity": {
        "properties": {
          "body": {
            "description": "A plain-old javascript object (POJO) containing the contents of this entity",
            "type": "object"
          },
          "element": {
            "default": "shoji-entity",
            "description": "Type of shoji element this is",
            "type": "string"
          },
          "self": {
            "description": "Url for this entity",
            "type": "string"
          }
        },
        "required": [
          "element",
          "self",
          "body"
        ],
        "title": "Shoji entity",
        "type": "object",
        "x-tags": [
          "Shoji"
        ]
      },
      "Shoji-entity-element": {
        "type": "string",
        "description": "Always &apos;shoji:entity&apos; for this api endpoint",
        "title": "Shoji entity element",
        "x-examples": {
          "example-1": "shoji:entity"
        },
        "default": "shoji:entity",
        "example": "shoji:entity"
      },
      "Shoji-self": {
        "description": "Url to this api endpoint",
        "format": "uri",
        "title": "Shoji self",
        "type": "string"
      },
      "Shoji-url-list": {
        "properties": {
          "name of url A": {
            "description": "Url A",
            "format": "uri",
            "type": "string"
          },
          "name of url B": {
            "description": "Url B",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "Shoji url list",
        "type": "object"
      },
      "Shoji-view-element": {
        "type": "string",
        "description": "Always &apos;shoji:view&apos; for this api endpoint",
        "title": "Shoji view element",
        "x-examples": {
          "example-1": "shoji:view"
        },
        "default": "shoji:view",
        "enum": [
          "shoji:view"
        ],
        "example": "shoji:view"
      },
      "Crunch-table-element": {
        "type": "string",
        "description": "Always crunch:table for this api endpoint",
        "title": "Crunch table element",
        "x-examples": {
          "example-1": "crunch:table"
        },
        "enum": [
          "crunch:table"
        ],
        "default": "crunch:table",
        "example": "crunch:table"
      },
      "Shoji-view-list": {
        "properties": {
          "url to view A": {
            "description": "Url to this view",
            "format": "uri",
            "type": "string"
          },
          "url to view B": {
            "description": "Url to this view",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "Shoji view list",
        "type": "object"
      },
      "User": {
        "enum": [
          "pwhash",
          "oauth"
        ],
        "example": "pwhash",
        "properties": {
          "account_permissions": {
            "properties": {
              "admin_account": {
                "description": "Is user an account administrator",
                "type": "boolean"
              },
              "alter_users": {
                "description": "Can user edit other users",
                "type": "boolean"
              },
              "create_datasets": {
                "description": "Can user create datasets",
                "type": "boolean"
              },
              "create_users": {
                "description": "Can user create other users",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "creation_time": {
            "description": "Datetime user was created",
            "type": "string"
          },
          "email": {
            "description": "User's email address",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "User ID",
            "type": "string"
          },
          "id_method": {
            "description": "Authentication method for this user",
            "type": "string"
          },
          "id_provider": {
            "description": "If user has oauth authentication, which oauth provider to use",
            "type": "string"
          },
          "name": {
            "description": "User's full name",
            "type": "string"
          },
          "preferences": {
            "description": "User preferences",
            "properties": {
              "datasetDisplaySettings": {
                "type": "object"
              },
              "displaySettings": {
                "type": "object"
              },
              "dsVisibleProps": {
                "type": "object"
              },
              "features": {
                "type": "object"
              },
              "notificationsReadDate": {
                "format": "date-time",
                "type": "string"
              },
              "notificationsSnoozeDate": {
                "format": "date-time",
                "type": "string"
              },
              "openedDecks": {
                "type": "object"
              },
              "projectBrowser": {
                "type": "object"
              },
              "projectId": {
                "format": "uri",
                "type": "string"
              },
              "search_settings": {
                "type": "object"
              },
              "varCardSettings": {
                "type": "string"
              }
            },
            "type": [
              "string",
              "object"
            ]
          }
        },
        "title": "User",
        "type": "object",
        "x-examples": {
          "example-1": {
            "account_permissions": {
              "admin_account": false,
              "alter_users": false,
              "create_datasets": true,
              "create_users": false
            },
            "creation_time": "2019-06-19T15:29:06+00:00",
            "email": "sim-editor-1@crunch.io",
            "id": "f94d0f8486f14689b1c9fdd982d51700",
            "id_method": "pwhash",
            "id_provider": null,
            "name": "Sim Editor 1",
            "preferences": {
              "datasetDisplaySettings": {
                "displayArchivedDatasets": true
              },
              "displaySettings": {
                "columnSignificance": null,
                "countsOrPercents": "percent",
                "decimalPlaces": 0,
                "geoChart": true,
                "percentageDirection": "colPct",
                "populationMagnitude": 3,
                "separateOrCombined": "separate",
                "showCategoriesSubtotals": "both",
                "showDescription": true,
                "showEmpty": false,
                "showMean": false,
                "showSignif": false,
                "showValueLabels": false,
                "showVisualization": true,
                "simpleOrExtended": "simple"
              },
              "dsVisibleProps": {
                "access_time": true,
                "modification_time": true,
                "name": true
              },
              "features": {},
              "notificationsReadDate": "2020-04-16T20:04:05.281Z",
              "notificationsSnoozeDate": null,
              "openedDecks": {
                "018ca6872e0e4b5b9cdc0745f4b11ef8": "https://app.crunch.io/api/datasets/018ca6872e0e4b5b9cdc0745f4b11ef8/decks/d333732f3aed4f95ac3e8a27cdcf03af/",
                "0700211987ee4599a9fa0924a58c9af0": "https://app.crunch.io/api/datasets/0700211987ee4599a9fa0924a58c9af0/decks/2b5ec4e80fcb42358d3e4e764b1319cb/",
                "0be895b02a054e0e9e742b95ebdcfca0": "https://app.crunch.io/api/datasets/0be895b02a054e0e9e742b95ebdcfca0/decks/c3a7ca0a71904afeb9624fb713dad354/",
                "2ff0e33046984f838a4cb330291d2edb": "https://app.crunch.io/api/datasets/2ff0e33046984f838a4cb330291d2edb/decks/26887165af584599a98ba51cb12a6811/",
                "4c44283be4b24942ad11e8363e054cc3": "https://app.crunch.io/api/datasets/4c44283be4b24942ad11e8363e054cc3/decks/27572276d8d848bbaaeef361fe6fc123/",
                "6284ae2013ae4f6bbb0fc8eaa606d7e3": "https://app.crunch.io/api/datasets/6284ae2013ae4f6bbb0fc8eaa606d7e3/decks/7bccfa13b3ff42a29a1be7032f7f4d2c/",
                "68f6997042ed4f19b536fa7b6daf1e2f": "https://app.crunch.io/api/datasets/68f6997042ed4f19b536fa7b6daf1e2f/decks/c658efaf87c945d892b68ee950881a4f/",
                "a2223646a2854fbf98495f6dc3e264b4": "https://app.crunch.io/api/datasets/a2223646a2854fbf98495f6dc3e264b4/decks/f42eac179f6d47ecb698f758e49895c5/",
                "d682f3f648c6473ea0b79fb2b23d4acb": "https://app.crunch.io/api/datasets/d682f3f648c6473ea0b79fb2b23d4acb/decks/59e851c6a5e84da0b473ef95695795a7/",
                "eb4ea0e51e5e45caabebdb75c5147db4": "https://app.crunch.io/api/datasets/eb4ea0e51e5e45caabebdb75c5147db4/decks/c3a7ca0a71904afeb9624fb713dad354/"
              },
              "projectBrowser": {},
              "projectId": "https://app.crunch.io/api/projects/d22b37e0258a4986b29598fc79ccc24f/",
              "search_settings": {
                "grouping": "datasets",
                "matchMode": "any-terms",
                "scope": null,
                "timeCriteria": null,
                "timeRange": null,
                "view": "ranked"
              },
              "varCardSettings": {}
            }
          }
        }
      },
      "subdomain-configuration": {
        "description": "subdomain configuration",
        "properties": {
          "logo": {
            "properties": {
              "favicon": {
                "description": "Url of favicon image",
                "type": "string"
              },
              "large": {
                "description": "Url of large logo image",
                "type": "string"
              },
              "small": {
                "description": "Url of small logo image",
                "type": "string"
              }
            },
            "type": "object"
          },
          "manifest": {
            "type": "object"
          },
          "name": {
            "description": "Company name",
            "type": "string"
          },
          "oauth_redirect": {
            "description": "User logging into this subdomain will use oauth authentication",
            "type": "boolean"
          },
          "palette": {
            "description": "Custom color palette",
            "type": "object"
          }
        },
        "title": "Subdomain configuration",
        "type": "object",
        "x-examples": {
          "example-1": {
            "logo": {
              "favicon": "https://s.crunch.io/act_app_icons/mycompany-kyzdnb-favicon.ico",
              "large": "https://s.crunch.io/act_app_icons/mycompany-wcaran-large.png",
              "small": "https://s.crunch.io/act_app_icons/mycompany-nchvcz-small.png"
            },
            "manifest": {},
            "name": "My Company",
            "oauth_redirect": true,
            "palette": {}
          }
        },
        "x-tags": [
          "OEM"
        ]
      }
    },
    "securitySchemes": {
      "Access Token": {
        "description": "Enter Crunch access token received from the login api endpoint:",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "Developer API for Crunch.io\n\n# API conventions\n\nThe Crunch REST API follows some common conventions across all endpoints. You can assume these to be the case except where explicitly documented otherwise.\n\n## Successful requests\nSuccessful GET requests return 200 (OK) status with Content-Type: application/json response content.\n\nPATCH is generally preferred for partial updating of resources, though some endpoints do support PUT. A successful request returns 204 (No Content) status.\n\nPOST is used to create entities on the server. The URL to the created entity is returned in the Location response header, and the response status is either 201 (Created) or 202 (Accepted).\n\n202 (Accepted) is used for requests that continue to process outside of the request cycle; for example, import or export jobs that may be long running and benefit from reporting progress to clients. See Progress for how to handle the 202 response content. Requests that would otherwise return 201 (Location) will still include the Location header in the 202 response; requests that would otherwise return 204 (No Content) will have no additional response headers.\n\n## Unsuccessful requests\n\u201cBad\u201d requests returning with a 4xx status may contain JSON response content with an error message.\n\nUnauthenticated requests to non-public resources return 401 (Unauthorized).\n\nAuthenticated but unauthorized responses return 404 (Not Found) rather than 403 (Forbidden) in cases where returning 403 would leak information about the existence of resources. The 403 response is reserved for cases when, for example, a user is authorized to GET a resource but not PATCH it.\n\nThe 409 (Conflict) response is used when the request may be retried and may succeed if changes are first made at a different resource. Example: when a user who has edit privileges on a dataset but is not the \u201ccurrent editor\u201d attempts to PATCH a dataset resource.\n\n## Error responses\nTo avoid duplicating error responses on every endpoint description, the most common responses are listed here and only any additional, endpoint-specific responses will be documented with each api endpoint.\n\n### HTTP status codes\n| Status Code | Description |\n| :-: | :-- |\n| 400 | Bad request, invalid input |\n| 401 | Invalid access token |\n| 403 | Account locked - please contact Crunch support |\n\n## Deprecated endpoints\nWhen API resources are deprecated, responses will contain a Warning header with a message about the deprecation and a recommendation for upgrading. Our client libraries look for this response header and will alert you to upgrade your version of the library if you receive a response with this header.\n\nEndpoints that have been removed respond with a 410 (Gone) status, optionally with a message instructing you where to look instead.\n\n# API response envelopes\nCrunch API endpoints do not return plain old javascript objects (POJOs) directly but instead deliver POJOs inside a property of machine-readable custom envelopes that facilitate endpoint exploration and traversal. Click here to read the [envelope spec](https://bitbucket.org/fumanchu/shoji/src/default/spec.txt).\n\nUsing crunch api envelopes can be summarized like this:\n```javascript\nlet data = {}\nswitch (response.element) {\n  case 'shoji:entity':\n    data = response.body\n    break\n  case 'shoji:catalog':\n    data = response.index\n    break\n  case 'shoji:view':\n    data = response.value\n    break\n}\n```\n\n## ENTITY envelope\nA Shoji entity is identified by `element: \"shoji:entity\"`. Its principal attribute is the `body` key, which is an object containing the attributes that describe the entity.\n\n## CATALOG envelope\nA catalog is identified by `element: \"shoji:catalog\"` with its principal attribute being `index` that contains an object keyed by the URLs of the entities it contains and for each key an object (tuple) with attributes from the referenced entity.\n\nShoji catalogs are **not** ordered. For its ordered representations they may provide an `orders` set of Shoji order resources.\n\n## VIEW envelope\nA Shoji view is identified by `element: \"shoji:view\"` with its principal attribute being `value`. This can contain any arbitrary JSON object.\n\n## ORDER envelope\nShoji orders are identified by `element: \"shoji:order\"`. The principal attribute is the `graph` key which is an array containing the order of present resources.\n\nA shoji order may be associated with a catalog. In such case it will contain a subset or totality of the entities present in the catalog. The catalog remains as the authoritative source of available entities.\n\nAny entity not present on the order but present in the catalog may be considered to belong at the bottom of the root of the graph in an arbitrary order, or may be excluded from view.\n",
    "title": "Crunch API",
    "version": "1.1",
    "contact": {
      "email": "support@crunch.io",
      "name": "Crunch Support",
      "url": "https://help.crunch.io"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/public/": {
      "get": {
        "description": "Lists all the options available to non authenticated requests.",
        "operationId": "get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "config": "https://app.crunch.io/api/public/config/",
                      "description": "Lists all the options available to non authenticated requests",
                      "element": "shoji:catalog",
                      "self": "https://app.crunch.io/api/public/",
                      "urls": {
                        "config_url": "https://app.crunch.io/api/public/config/"
                      },
                      "views": {
                        "change_email": "https://app.crunch.io/api/public/change_email/",
                        "inquire": "https://app.crunch.io/api/public/inquire/",
                        "login": "https://app.crunch.io/api/public/login/",
                        "oauth2redirect": "https://app.crunch.io/api/public/oauth2redirect/",
                        "password_change": "https://app.crunch.io/api/public/password_change/",
                        "password_reset": "https://app.crunch.io/api/public/password_reset/",
                        "signup": "https://app.crunch.io/api/public/signup/",
                        "signup_resend": "https://app.crunch.io/api/public/signup_resend/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "config_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Urls",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "change_email": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "inquire": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "login": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "oauth2redirect": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_change": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_reset": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "signup": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "signup_resend": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "PublicGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Unauthenticated urls",
        "tags": [
          "Catalogs"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const get = await fetch(\n  'https://app.crunch.io/api/public/', {\n   method: 'GET',\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/public/config/": {
      "get": {
        "description": "Returns a subdomain's configuration, if configured. If none exists, the body will be empty.\n\n**NOTE**: This api request is designed to run against a **company subdomain** not against `app.crunch.io`.\n\n`https://yougov.crunch.io/api/public/config/`\n\nAPI response.body contains the subdomain\u2019s current configuration. if no configuration exists, response.body will be an empty object.",
        "operationId": "get-public-config",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "logo": {
                          "favicon": "https://s.crunch.io/act_app_icons/mycompany-kyzdnb-favicon.ico",
                          "large": "https://s.crunch.io/act_app_icons/mycompany-wcaran-large.png",
                          "small": "https://s.crunch.io/act_app_icons/mycompany-nchvcz-small.png"
                        },
                        "manifest": {},
                        "name": "My Company",
                        "oauth_redirect": true,
                        "palette": {}
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/public/config/"
                    }
                  }
                },
                "schema": {
                  "default": {},
                  "properties": {
                    "body": {
                      "default": {},
                      "examples": [
                        {
                          "logo": {
                            "favicon": "https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico",
                            "large": "https://s.crunch.io/act_app_icons/yougov-wcaran-large.png",
                            "small": "https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png"
                          },
                          "manifest": {},
                          "name": "YouGov",
                          "oauth_redirect": true,
                          "palette": {}
                        }
                      ],
                      "properties": {
                        "logo": {
                          "default": {},
                          "examples": [
                            {
                              "favicon": "https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico",
                              "large": "https://s.crunch.io/act_app_icons/yougov-wcaran-large.png",
                              "small": "https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png"
                            }
                          ],
                          "properties": {
                            "favicon": {
                              "default": "",
                              "examples": [
                                "https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico"
                              ],
                              "type": "string"
                            },
                            "large": {
                              "default": "",
                              "examples": [
                                "https://s.crunch.io/act_app_icons/yougov-wcaran-large.png"
                              ],
                              "type": "string"
                            },
                            "small": {
                              "default": "",
                              "examples": [
                                "https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "manifest": {
                          "default": {},
                          "examples": [
                            {}
                          ],
                          "properties": null,
                          "type": "object"
                        },
                        "name": {
                          "default": "",
                          "examples": [
                            "YouGov"
                          ],
                          "type": "string"
                        },
                        "oauth_redirect": {
                          "default": false,
                          "examples": [
                            true
                          ],
                          "type": "boolean"
                        },
                        "palette": {
                          "default": {},
                          "examples": [
                            {}
                          ],
                          "properties": null,
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "default": "",
                      "examples": [
                        "https://yougov.crunch.io/api/public/config/"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "Subdomain configuration",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/config/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getPublicConfig = await fetch(\n  'https://app.crunch.io/api/public/config/', {\n   method: 'GET',\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/public/crunchbox/preview/": {
      "parameters": [],
      "post": {
        "description": "A CrunchBox represents a snapshot of a crunch dataset. These snapshots are intended for public proliferation and therefore the endpoints for interacting with this data is housed under the unauthenticated API path.\n\nThe preview endpoint is used to preemptively initiate rendering a given CrunchBox configuration to a raster image. This image will be requested by social network platform crawlers during construction of the post share preview. The preview-rendering process can be time-consuming. Therefore, it is preferable to initiate it as soon as is reasonable before a request for the image data.\n\nThis endpoint returns no data.",
        "operationId": "post-crunchbox-preview",
        "parameters": [
          {
            "description": "Url to Crunchbox widget",
            "in": "query",
            "name": "data",
            "schema": {
              "default": "https://s.crunch.io/widget/index.html#/ds/a1b2c3d4e5f6g7h8/row/000001/column/000000",
              "example": "",
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": ""
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {}
          }
        },
        "security": [],
        "summary": "Generate Crunchbox preview",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/public/crunchbox/preview/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postCrunchboxPreview = await fetch(\n  'https://app.crunch.io/api/public/crunchbox/preview/', {\n   method: 'POST',\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/public/crunchbox/share/": {
      "get": {
        "description": "Crunchboxes\u00a0are intended to be a snapshot of a dataset for analysis in a public-facing website. The pre-generated data for the analyses are stored in a non-secure, content delivery network (CDN) for best performance. \n\nThis endpoint generates a snippet of code that can be used to link to that public entity.\n\nThis endpoint also generates the HTML markup for the crunchbox sharing page containing all of the metadata necessary to satisfy the requirements of social platform crawlers to result in a rich sharing content preview. This preview is necessarily constructed as part of the request as to avoid javascript processing which will be ignored by these crawlers.\n\nSee: https://developers.facebook.com/docs/sharing/webmasters/crawler.\n\n# Endpoint usage in HTML file\n```html\n<html>\n<head>\n    <title>Link to CrunchBox</title>\n</head>\n<body>\nClick here to\n<a target='_blank'\n   href='https://app.crunch.io/api/public/crunchbox/share/?data=%2F%2Fs.crunch.io%2Fwidget%2Findex.html%23%2Fds%2F72c27f64a12028b887d7cae248143b6b%2Frow%2F000886%2Fcolumn%2F000480%3Fviz%3DstackedBarPlot%26amp%3Bcp%3Dpercent%26amp%3Bdp%3D0%26amp%3Bgrp%3Dstack&ref=https%3A%2F%2Fwww.whitehouse.gov/'>view\n    CrunchBox</a>.\n</body>\n</html>\n```",
        "operationId": "get-crunchbox-share",
        "parameters": [
          {
            "description": "CrunchBox widget url",
            "in": "query",
            "name": "data",
            "required": true,
            "schema": {
              "default": "//s.crunch.io/widget/index.html#/ds/d4b2945f727f4eccbc31544ddabf9fa4?viz=groupedBarPlot&cp=percent&dp=0&grp=stack",
              "type": "string"
            }
          },
          {
            "description": "Url to use inside the CrunchBox to link user back to referring webpage",
            "in": "query",
            "name": "ref",
            "schema": {
              "default": "https://google.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/html": {
                "examples": {
                  "example-1": {
                    "value": "<html><head>...</head><body>...</body></html>"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "security": [],
        "summary": "Share Crunchbox html",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/crunchbox/share/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getCrunchboxShare = await fetch(\n  'https://app.crunch.io/api/public/crunchbox/share/', {\n   method: 'GET',\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/public/login/": {
      "get": {
        "description": "Every crunch user account authenticates with the crunch api via a username/password combination or via one of many customer single-signon oauth providers that Crunch integrates with.\nThis endpoint receives a crunch account username/email and returns which authentication method is required for that user account.",
        "operationId": "get-public-login",
        "parameters": [
          {
            "description": "Crunch username",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "default": "joe@gmail.com",
              "example": "joe@gmail.com",
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "Crunch app url to redirect user to after oauth login",
            "in": "query",
            "name": "redirect_uri",
            "schema": {
              "default": "https://app.crunch.io/shared",
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/public/login/?email=fred@example.com",
                      "value": {
                        "email": "fred@example.com",
                        "method": "pwhash"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Oauth-redirect"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "Authentication method",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/login/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getPublicLogin = await fetch(\n  'https://app.crunch.io/api/public/login/', {\n   method: 'GET',\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Log user in and receive an access token to be used on subsequent api requests. Nearly all interactions with the Crunch API need to be authenticated. The authentication method involves POSTing login credentials and receiving an access token. The api client should then store the access token returned and pass it in on each subsequent request in the Authorization HTTP header like this.\n\nExample header variable: `Authorization: Bearer 796f025f019ad8299337ba7b0924afbf`\n\nCrunch also supports OAuth 2.0 w/OpenID Connect or RFC 7662. However, OAuth\ndoesn't work well with unattended scripts. If your user is set up with OAuth\nand you want to create applications that use Crunch's API, contact us to set up\na secondary password. To set one yourself, POST a JSON document containing\n`{'email': 'youremail@example.com'}` to the `/api/public/password_reset/` API\nendpoint, and follow the instructions in the email you receive. No\nAuthentication is required to use this endpoint. Log out of your current Crunch\nWeb App session before clicking the reset password link in the email.\n\nWe do not recommend using OAuth to authenticate API requests outside of a\nbrowser. The redirect after the ID provider login will load the Crunch Web\nApplication, and a manual step is required to copy the authorization bearer\ntoken into the running state of the application that requests API access.\nAutomated retrieval of Bearer Tokens for Users with OAuth logins is not\ncurrently available.\n\nIf you'd like to add your OAuth OpenIDConnect or RFC7442 provider to the set of supported\nproviders, contact support@crunch.io\n",
        "operationId": "post-public-login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "Login example": {
                  "summary": "Login example",
                  "value": {
                    "email": "joe@gmail.com",
                    "password": "^IsR49LC5!%",
                    "token": true
                  }
                }
              },
              "schema": {
                "properties": {
                  "email": {
                    "description": "Crunch username",
                    "example": "joe@gmail.com",
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "description": "Crunch password",
                    "example": "^IsR49LC5!%",
                    "format": "password",
                    "type": "string"
                  },
                  "token": {
                    "default": "false",
                    "description": "True results in the access token coming back in the response body for api use. False results in api server setting access token inside httpOnly cookie for browser use.",
                    "example": "true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "access_token": "0650012b49b643b8d5a60fb209ce74a9",
                      "token_type": "Bearer"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "access_token": {
                      "default": "f1e0b74c79e85b7158e721e831f1c853",
                      "type": "string"
                    },
                    "token_type": {
                      "default": "Bearer",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "Log in",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/public/login/ \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"email\": \"joe@gmail.com\",\n  \"password\": \"^IsR49LC5!%\",\n  \"token\": true\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postPublicLogin = await fetch(\n  'https://app.crunch.io/api/public/login/', {\n   method: 'POST',,\n   body: JSON.stringify({\n     \"email\": \"joe@gmail.com\",\n     \"password\": \"^IsR49LC5!%\",\n     \"token\": true\n   })\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/public/openapi/": {
      "get": {
        "description": "Crunch API documentation as [OpenAPI Specification 3.0.3](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md) file.",
        "operationId": "get-public-openapi",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Crunch API openapi spec",
        "tags": [
          "Miscellaneous"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/public/openapi/",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getPublicOpenapi = await fetch(\n  'https://app.crunch.io/api/public/openapi/', {\n   method: 'GET',\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/exclusion/": {
      "get": {
        "description": "Exclusion filters allow you to hide/exclude rows of data without permanently deleting them. This endpoint returns a Shoji Entity with a filter expression attribute in its body. Rows that match the filter expression are be excluded from all views of the data.",
        "operationId": "get-datasets-dataset_id-exclusion",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "expression": {
                          "args": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/6d7a770/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/"
                            },
                            {
                              "column": [
                                1,
                                2,
                                4,
                                -1
                              ],
                              "type": {
                                "args": [
                                  {
                                    "variable": "https://app.crunch.io/api/datasets/6d7a770/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/"
                                  }
                                ],
                                "function": "typeof"
                              }
                            }
                          ],
                          "function": "in"
                        }
                      },
                      "description": "Detail information dataset's exclusion filter",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/6d7a770/exclusion/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "expression": {
                          "properties": {
                            "args": {
                              "items": {},
                              "type": "array"
                            },
                            "function": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDExclusionGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "View the current row exclusion filter",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/exclusion/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idExclusion = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/exclusion/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint allows you to submit a new expression to set row exclusions. Sending is an empty expression object (see example 2) resets the row exclusion so that no rows are excluded.",
        "operationId": "patch-datasets-dataset_id-exclusion",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/ea035166a2c6498eaba5625d3f4fd84a/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/"
                          },
                          {
                            "column": [
                              1,
                              2,
                              4,
                              -1
                            ],
                            "type": {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/ea035166a2c6498eaba5625d3f4fd84a/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/"
                                }
                              ],
                              "function": "typeof"
                            }
                          }
                        ],
                        "function": "in"
                      },
                      "name": "",
                      "parentheses": [
                        1
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "expression": {}
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "expression": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "column": {
                                  "items": {
                                    "type": "integer"
                                  },
                                  "type": "array"
                                },
                                "type": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "args": {
                                      "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "variable": {
                                            "format": "uri",
                                            "type": "string",
                                            "x-qt-uri-protocols": [
                                              "https"
                                            ]
                                          }
                                        },
                                        "required": [],
                                        "title": "TypeArg",
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "function": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [],
                                  "title": "Type",
                                  "type": "object"
                                },
                                "variable": {
                                  "format": "uri",
                                  "type": "string",
                                  "x-qt-uri-protocols": [
                                    "https"
                                  ]
                                }
                              },
                              "required": [],
                              "title": "PurpleArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "BodyExpression",
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parentheses": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDExclusionPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated"
          }
        },
        "summary": "Update row exclusions",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/exclusion/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"expression\": {\n      \"args\": [\n        {\n          \"variable\": \"https://app.crunch.io/api/datasets/ea035166a2c6498eaba5625d3f4fd84a/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/\"\n        },\n        {\n          \"column\": [\n            1,\n            2,\n            4,\n            -1\n          ],\n          \"type\": {\n            \"args\": [\n              {\n                \"variable\": \"https://app.crunch.io/api/datasets/ea035166a2c6498eaba5625d3f4fd84a/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/\"\n              }\n            ],\n            \"function\": \"typeof\"\n          }\n        }\n      ],\n      \"function\": \"in\"\n    },\n    \"name\": \"\",\n    \"parentheses\": [\n      1\n    ]\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idExclusion = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/exclusion/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n    \"body\": {\n      \"expression\": {\n        \"args\": [\n          {\n            \"variable\": \"https://app.crunch.io/api/datasets/ea035166a2c6498eaba5625d3f4fd84a/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/\"\n          },\n          {\n            \"column\": [\n              1,\n              2,\n              4,\n              -1\n            ],\n            \"type\": {\n              \"args\": [\n                {\n                  \"variable\": \"https://app.crunch.io/api/datasets/ea035166a2c6498eaba5625d3f4fd84a/variables/3ukk1Pf2K0iyNdFOc1ct0d000231/\"\n                }\n              ],\n              \"function\": \"typeof\"\n            }\n          }\n        ],\n        \"function\": \"in\"\n      },\n      \"name\": \"\",\n      \"parentheses\": [\n        1\n      ]\n    },\n    \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/filters/": {
      "get": {
        "description": "This endpoint returns a Shoji Catalog with the list of filters that the current user can use on this dataset.\n\nThe index contains two kinds of filters - public and personal - denoted by the is_public attribute. Personal filters are those created by the authenticated user, and they cannot be accessed by other users. Public filters are available to all users who are authorized to view the dataset.",
        "operationId": "get-datasets-dataset_id-filters",
        "parameters": [
          {
            "description": "id",
            "in": "query",
            "name": "id",
            "schema": {
              "default": "8ef184d6d68643c89cda1437f89bdef1",
              "example": "8ef184d6d68643c89cda1437f89bdef1",
              "type": "string"
            }
          },
          {
            "description": "name",
            "in": "query",
            "name": "name",
            "schema": {
              "default": "mambo number two",
              "example": "mambo number two",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of available filters for this dataset",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/5f24ab21cafd4362932f9529fcbe8e87/": {
                          "creation_time": "2020-05-20T19:50:15.423000+00:00",
                          "id": "5f24ab21cafd4362932f9529fcbe8e87",
                          "is_public": false,
                          "name": "My personal filter",
                          "owner_id": "https://app.crunch.io/api/users/d9e55dc2296d498fb19ed064a5016093/",
                          "team": null
                        }
                      },
                      "orders": {
                        "applied": "https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/applied/",
                        "flat": "https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/flat/"
                      },
                      "self": "https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/5f24ab21cafd4362932f9529fcbe8e87/": {
                          "additionalProperties": false,
                          "properties": {
                            "creation_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "is_public": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "owner_id": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            },
                            "team": {
                              "nullable": true
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPIDatasets79B64C40E1414722B4F8D74E0726A86DFilters5F24Ab21Cafd4362932F9529Fcbe8E87",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "orders": {
                      "additionalProperties": false,
                      "properties": {
                        "applied": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "flat": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Orders",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List filters",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/filters/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFilters = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint accepts a shoji catalog and allows you to rename any filters returned after listing filters. The only editable attribute is `name`. The endpoint can only be used to change the name of filters the user has permission to.\n\nThis endpoint will return a 400 error if:\n* incorrect shoji document submitted.\n* attempt to delete filter (send null as tuple).\n* attempt to edit read only attribute.\n* attempt to edit inexisting attribute.\n\n\n",
        "operationId": "patch-datasets-dataset_id-filters",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/5f24ab21cafd4362932f9529fcbe8e87/": {
                        "name": "My personal filter"
                      }
                    },
                    "self": "https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/"
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "index": {
                    "properties": {
                      "filter_url": {
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "self": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Change can only be made by a dataset editor."
          }
        },
        "summary": "Batch rename filters",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/filters/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/5f24ab21cafd4362932f9529fcbe8e87/\":\n{\n      \"name\": \"My personal filter\"\n    }\n  },\n  \"self\": \"https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idFilters = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/5f24ab21cafd4362932f9529fcbe8e87/\":\n{\n         \"name\": \"My personal filter\"\n       }\n     },\n     \"self\": \"https://app.crunch.io/api/datasets/79b64c40e1414722b4f8d74e0726a86d/filters/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "You can post a Shoji Entity to this endpoint to create a new filter. Required fields are **name** and **expression**. Attribute `is_public` defaults to false if omitted. A successful request returns a 201 response that will contain a Location header with the URL of the newly created filter.\n\nAll users with access to the dataset can create personal filters. However, only the current dataset editor can create public filters (`is_public: true`). Attempting to create a public filter when not the current dataset editor results in a 403 response.\n\nPublic filters cannot contain references to secure variables. Attempting to create one results in a 400 response. Hidden variables, however, are permitted.",
        "operationId": "post-datasets-dataset_id-filters",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "4H35lODsaGiK9eQ0gTvzqm000000"
                          },
                          {
                            "value": 1
                          }
                        ],
                        "function": "in"
                      },
                      "is_public": false,
                      "name": "My personal filter",
                      "team": "https://app.crunch.io/api/teams/acd1c4de1ff5456c8d28e0de3e27de2f/",
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity",
                    "expression": {
                      "args": [
                        {
                          "variable": "3BgVgqM7XKH4X0zZVkhRWM000001"
                        },
                        {
                          "value": 12
                        }
                      ],
                      "function": "=="
                    },
                    "is_public": true,
                    "name": "My private filter"
                  }
                },
                "example-02": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "args": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/c6f1f53da89c424584baf4e4786bfa1b/variables/5iznUueCrNzPELShW2ckpV000000/"
                              },
                              {
                                "column": [
                                  3,
                                  4
                                ],
                                "type": {
                                  "args": [
                                    {
                                      "variable": "https://app.crunch.io/api/datasets/c6f1f53da89c424584baf4e4786bfa1b/variables/5iznUueCrNzPELShW2ckpV000000/"
                                    }
                                  ],
                                  "function": "typeof"
                                }
                              }
                            ],
                            "function": "in"
                          }
                        ],
                        "function": "not"
                      },
                      "is_public": true,
                      "name": "test",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-03": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "args": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/02dff3f38ff348be827a752b647dc44f/variables/1unTrGoPPBUgwNtPsDPKXZ000000/"
                              },
                              {
                                "column": [
                                  3,
                                  4
                                ],
                                "type": {
                                  "args": [
                                    {
                                      "variable": "https://app.crunch.io/api/datasets/02dff3f38ff348be827a752b647dc44f/variables/1unTrGoPPBUgwNtPsDPKXZ000000/"
                                    }
                                  ],
                                  "function": "typeof"
                                }
                              }
                            ],
                            "function": "in"
                          }
                        ],
                        "function": "not"
                      },
                      "is_public": true,
                      "name": "test",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-04": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "args": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/bccf380d9f5f4565a070a8e32e6fc2ca/variables/5HDEWkCuwq1iNjg1VD9xQH000000/"
                              },
                              {
                                "column": [
                                  3,
                                  4
                                ],
                                "type": {
                                  "args": [
                                    {
                                      "variable": "https://app.crunch.io/api/datasets/bccf380d9f5f4565a070a8e32e6fc2ca/variables/5HDEWkCuwq1iNjg1VD9xQH000000/"
                                    }
                                  ],
                                  "function": "typeof"
                                }
                              }
                            ],
                            "function": "in"
                          }
                        ],
                        "function": "not"
                      },
                      "is_public": true,
                      "name": "test",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-05": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "args": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/5354f9f3bb024af6a7be4414c131aed9/variables/2EW4ao2kiOf5ATzsllGiqp000000/"
                              },
                              {
                                "column": [
                                  3,
                                  4
                                ],
                                "type": {
                                  "args": [
                                    {
                                      "variable": "https://app.crunch.io/api/datasets/5354f9f3bb024af6a7be4414c131aed9/variables/2EW4ao2kiOf5ATzsllGiqp000000/"
                                    }
                                  ],
                                  "function": "typeof"
                                }
                              }
                            ],
                            "function": "in"
                          }
                        ],
                        "function": "not"
                      },
                      "is_public": true,
                      "name": "test",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-06": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "args": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/8d3ced9eb1dd4e6fba6d47a473583bb7/variables/1zmE4VtLvgOIPj1dxkpZey000000/"
                              },
                              {
                                "column": [
                                  3,
                                  4
                                ],
                                "type": {
                                  "args": [
                                    {
                                      "variable": "https://app.crunch.io/api/datasets/8d3ced9eb1dd4e6fba6d47a473583bb7/variables/1zmE4VtLvgOIPj1dxkpZey000000/"
                                    }
                                  ],
                                  "function": "typeof"
                                }
                              }
                            ],
                            "function": "in"
                          }
                        ],
                        "function": "not"
                      },
                      "is_public": true,
                      "name": "test",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-07": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000000/"
                          },
                          {
                            "column": [
                              2
                            ],
                            "type": {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000000/"
                                }
                              ],
                              "function": "typeof"
                            }
                          }
                        ],
                        "function": "in"
                      },
                      "is_public": true,
                      "name": "Thanks Santa",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-08": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000000/"
                          },
                          {
                            "column": [
                              2
                            ],
                            "type": {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000000/"
                                }
                              ],
                              "function": "typeof"
                            }
                          }
                        ],
                        "function": "in"
                      },
                      "is_public": true,
                      "name": "public filter",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-09": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/b0f37d850c254ee7b9363877d5e1cae7/variables/3qJLzNY7RET6OqP0jb4XSs000000/"
                          },
                          {
                            "column": [
                              1
                            ],
                            "type": {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/b0f37d850c254ee7b9363877d5e1cae7/variables/3qJLzNY7RET6OqP0jb4XSs000000/"
                                }
                              ],
                              "function": "typeof"
                            }
                          }
                        ],
                        "function": "in"
                      },
                      "is_public": true,
                      "name": "filter name",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-10": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/b0f37d850c254ee7b9363877d5e1cae7/variables/3qJLzNY7RET6OqP0jb4XSs000000/"
                          },
                          {
                            "column": [
                              1
                            ],
                            "type": {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/b0f37d850c254ee7b9363877d5e1cae7/variables/3qJLzNY7RET6OqP0jb4XSs000000/"
                                }
                              ],
                              "function": "typeof"
                            }
                          }
                        ],
                        "function": "in"
                      },
                      "is_public": true,
                      "name": "Copy of filter name",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-11": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/4e84b4ccd49343f486fc7657db7fbdd2/variables/6rZp7q6Dv5tgVGCsHaI2vj000000/"
                          },
                          {
                            "column": [
                              1
                            ],
                            "type": {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/4e84b4ccd49343f486fc7657db7fbdd2/variables/6rZp7q6Dv5tgVGCsHaI2vj000000/"
                                }
                              ],
                              "function": "typeof"
                            }
                          }
                        ],
                        "function": "in"
                      },
                      "is_public": false,
                      "name": "filter name 1",
                      "team": null,
                      "view": {
                        "parentheses": [
                          1
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-12": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/e9e2f21932014c0ca7e52e3be630898b/variables/1Yzs1wNWT0957huHvxOSUm000001/"
                          },
                          {
                            "value": 12
                          }
                        ],
                        "function": "=="
                      },
                      "name": "f1"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-13": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "42PJDJYWRuyfZUAkOU9QH1000000"
                          },
                          {
                            "column": [
                              2
                            ]
                          }
                        ],
                        "function": "in"
                      },
                      "name": "Female"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "expression": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "args": {
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "args": {
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "column": {
                                              "items": {
                                                "type": "integer"
                                              },
                                              "type": "array"
                                            },
                                            "type": {
                                              "additionalProperties": false,
                                              "properties": {
                                                "args": {
                                                  "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                      "variable": {
                                                        "format": "uri",
                                                        "type": "string",
                                                        "x-qt-uri-protocols": [
                                                          "https"
                                                        ]
                                                      }
                                                    },
                                                    "required": [],
                                                    "title": "TypeArg",
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "function": {
                                                  "enum": [
                                                    "typeof"
                                                  ],
                                                  "title": "TypeFunction",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [],
                                              "title": "Type",
                                              "type": "object"
                                            },
                                            "variable": {
                                              "format": "uri",
                                              "type": "string",
                                              "x-qt-uri-protocols": [
                                                "https"
                                              ]
                                            }
                                          },
                                          "required": [],
                                          "title": "TentacledArg",
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "column": {
                                        "items": {
                                          "anyOf": [
                                            {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            {
                                              "type": "integer"
                                            }
                                          ],
                                          "title": "Column"
                                        },
                                        "type": "array"
                                      },
                                      "function": {
                                        "enum": [
                                          "in",
                                          "not",
                                          "and",
                                          "or",
                                          "==",
                                          ">",
                                          "!="
                                        ],
                                        "title": "ArgFunction",
                                        "type": "string"
                                      },
                                      "type": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "args": {
                                            "items": {
                                              "additionalProperties": false,
                                              "properties": {
                                                "variable": {
                                                  "format": "uri",
                                                  "type": "string",
                                                  "x-qt-uri-protocols": [
                                                    "https"
                                                  ]
                                                }
                                              },
                                              "required": [],
                                              "title": "TypeArg",
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "function": {
                                            "enum": [
                                              "typeof"
                                            ],
                                            "title": "TypeFunction",
                                            "type": "string"
                                          }
                                        },
                                        "required": [],
                                        "title": "Type",
                                        "type": "object"
                                      },
                                      "value": {
                                        "type": "integer"
                                      },
                                      "variable": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      }
                                    },
                                    "required": [],
                                    "title": "FluffyArg",
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "column": {
                                  "items": {
                                    "anyOf": [
                                      {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      {
                                        "type": "integer"
                                      }
                                    ],
                                    "title": "Column"
                                  },
                                  "type": "array"
                                },
                                "filter": {
                                  "format": "uri",
                                  "type": "string",
                                  "x-qt-uri-protocols": [
                                    "https"
                                  ]
                                },
                                "function": {
                                  "enum": [
                                    "in",
                                    "not",
                                    "and",
                                    "or",
                                    "==",
                                    ">",
                                    "!="
                                  ],
                                  "title": "ArgFunction",
                                  "type": "string"
                                },
                                "type": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "args": {
                                      "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "variable": {
                                            "format": "uri",
                                            "type": "string",
                                            "x-qt-uri-protocols": [
                                              "https"
                                            ]
                                          }
                                        },
                                        "required": [],
                                        "title": "TypeArg",
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "function": {
                                      "enum": [
                                        "typeof"
                                      ],
                                      "title": "TypeFunction",
                                      "type": "string"
                                    }
                                  },
                                  "required": [],
                                  "title": "Type",
                                  "type": "object"
                                },
                                "value": {
                                  "type": "integer"
                                },
                                "variable": {
                                  "type": "string",
                                  "x-qt-uri-protocols": [
                                    "https"
                                  ]
                                }
                              },
                              "required": [],
                              "title": "PurpleArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "enum": [
                              "in",
                              "not",
                              "and",
                              "or",
                              "==",
                              ">",
                              "!="
                            ],
                            "title": "ArgFunction",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "BodyExpression",
                        "type": "object"
                      },
                      "is_public": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "team": {
                        "anyOf": [
                          {
                            "nullable": true
                          },
                          {
                            "format": "uri",
                            "type": "string",
                            "x-qt-uri-protocols": [
                              "https"
                            ]
                          }
                        ]
                      },
                      "view": {
                        "additionalProperties": false,
                        "properties": {
                          "parentheses": {
                            "items": {
                              "type": "integer"
                            },
                            "type": "array"
                          }
                        },
                        "required": [],
                        "title": "View",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "expression": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "integer"
                            },
                            "variable": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "StickyArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "function": {
                        "enum": [
                          "in",
                          "not",
                          "and",
                          "or",
                          "==",
                          ">",
                          "!="
                        ],
                        "title": "ArgFunction",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "DatasetsDatasetIDFiltersPostRequestExpression",
                    "type": "object"
                  },
                  "is_public": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFiltersPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Filter error: The 'all' function requires argument 'column be of type {'class': 'categorical'}."
                      ],
                      "message": "Filter error: The 'all' function requires argument 'column' be of type {'class': 'categorical'}.",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Create filter",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/filters/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"expression\": {\n      \"args\": [\n        {\n          \"variable\": \"4H35lODsaGiK9eQ0gTvzqm000000\"\n        },\n        {\n          \"value\": 1\n        }\n      ],\n      \"function\": \"in\"\n    },\n    \"is_public\": false,\n    \"name\": \"My personal filter\",\n    \"team\": \"https://app.crunch.io/api/teams/acd1c4de1ff5456c8d28e0de3e27de2f/\",\n    \"view\": {\n      \"parentheses\": [\n        1\n      ]\n    }\n  },\n  \"element\": \"shoji:entity\",\n  \"expression\": {\n    \"args\": [\n      {\n        \"variable\": \"3BgVgqM7XKH4X0zZVkhRWM000001\"\n      },\n      {\n        \"value\": 12\n      }\n    ],\n    \"function\": \"==\"\n  },\n  \"is_public\": true,\n  \"name\": \"My private filter\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idFilters = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"expression\": {\n         \"args\": [\n           {\n             \"variable\": \"4H35lODsaGiK9eQ0gTvzqm000000\"\n           },\n           {\n             \"value\": 1\n           }\n         ],\n         \"function\": \"in\"\n       },\n       \"is_public\": false,\n       \"name\": \"My personal filter\",\n       \"team\": \"https://app.crunch.io/api/teams/acd1c4de1ff5456c8d28e0de3e27de2f/\",\n       \"view\": {\n         \"parentheses\": [\n           1\n         ]\n       }\n     },\n     \"element\": \"shoji:entity\",\n     \"expression\": {\n       \"args\": [\n         {\n           \"variable\": \"3BgVgqM7XKH4X0zZVkhRWM000001\"\n         },\n         {\n           \"value\": 12\n         }\n       ],\n       \"function\": \"==\"\n     },\n     \"is_public\": true,\n     \"name\": \"My private filter\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/filters/applied/": {
      "get": {
        "description": "List of filters currently applied on the dataset by this user.",
        "operationId": "get-datasets-dataset_id-filters-applied",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of filters currently applied on the dataset by this user.",
                      "element": "shoji:order",
                      "graph": [
                        "https://app.crunch.io/api/datasets/9cf34075d6b0475296ffdbd30ecb54b5/filters/934fd2907ad9478b91bb4e04cf660f88/"
                      ],
                      "self": "https://app.crunch.io/api/datasets/9cf34075d6b0475296ffdbd30ecb54b5/filters/applied/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-order-element"
                    },
                    "graph": {
                      "items": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "type": "array"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDFiltersAppliedGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List applied filters",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/filters/applied/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFiltersApplied = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/applied/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "This endpoint changes the applied filters for the current user - it does not make a global change that affects other users.\n\nThis endpoint will return a 400 error if:\n\n* shoji:order object submitted is malformed.\n* submitted filter URLs are invalid.\n",
        "operationId": "put-datasets-dataset_id-filters-applied",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:order",
                    "graph": [
                      "https://app.crunch.io/api/datasets/9cf34075d6b0475296ffdbd30ecb54b5/filters/934fd2907ad9478b91bb4e04cf660f88/"
                    ]
                  }
                },
                "example-2": {
                  "value": {
                    "element": "shoji:order",
                    "graph": [
                      "https://app.crunch.io/api/datasets/db8d46e78a024a058ed400e823f39824/filters/1965693fe637453bb3152333016f6c50/",
                      "https://app.crunch.io/api/datasets/db8d46e78a024a058ed400e823f39824/filters/3eed02b808214e359c170a4824e85c94/"
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-order-element"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  }
                },
                "title": "DatasetsDatasetIDFiltersAppliedPutRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "body should be a JSON Object."
                      ],
                      "message": "body should be a JSON Object.",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersAppliedPutRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Change applied filters",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PUT https://app.crunch.io/api/datasets/{dataset_id}/filters/applied/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:order\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/9cf34075d6b0475296ffdbd30ecb54b5/filters/934fd2907ad9478b91bb4e04cf660f88/\"\n  ]\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const putDatasetsDataset_idFiltersApplied = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/applied/', {\n   method: 'PUT',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:order\",\n     \"graph\": [\n       \"https://app.crunch.io/api/datasets/9cf34075d6b0475296ffdbd30ecb54b5/filters/934fd2907ad9478b91bb4e04cf660f88/\"\n     ]\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/filters/flat/": {
      "get": {
        "description": "",
        "operationId": "get-datasets-dataset_id-filters-flat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:order",
                      "graph": [
                        "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/",
                        "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/"
                      ],
                      "self": "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/flat/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "type": "string"
                    },
                    "graph": {
                      "items": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "type": "array"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersFlatGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List filter order (flat)",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/filters/flat/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFiltersFlat = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/flat/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "This endpoint affects how the list of filters is rendered visually. It can only be used by the current editor of the dataset.\n\nA 400 error will result if:\n\n* shoji:order object submitted is malformed.\n* submitted filter URLs are invalid.\n",
        "operationId": "put-datasets-dataset_id-filters-flat",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:order",
                    "graph": [
                      "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/",
                      "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/"
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-order-element"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  }
                },
                "title": "DatasetsDatasetIDFiltersFlatPutRequest",
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Missing filters with ids: /datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/\n"
                      ],
                      "message": "Missing filters with ids: /datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersFlatPutRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Change filters display order",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PUT https://app.crunch.io/api/datasets/{dataset_id}/filters/flat/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:order\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/\",\n    \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/\"\n  ]\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const putDatasetsDataset_idFiltersFlat = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/flat/', {\n   method: 'PUT',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:order\",\n     \"graph\": [\n       \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/\",\n       \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/\"\n     ]\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/filters/order/": {
      "get": {
        "description": "This endpoint returns a shoji:order document containing the order in which the available filters should be displayed in a visual interface.",
        "operationId": "get-datasets-dataset_id-filters-flat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:order",
                      "graph": [
                        "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/",
                        "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/"
                      ],
                      "self": "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/flat/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-order-element"
                    },
                    "graph": {
                      "items": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "type": "array"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDFiltersFlatGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Filters display order",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/filters/order/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFiltersFlat = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/order/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint changes the order of the filters. The graph parameter indicates the order. Private filters are not included in the order. Any filters that are missing are automatically appended to the end of the order array.",
        "operationId": "put-datasets-dataset_id-filters-flat",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:order",
                    "graph": [
                      "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/",
                      "https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/"
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "type": "string"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFiltersFlatPutRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Missing filters with ids: /datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/\n"
                      ],
                      "message": "Missing filters with ids: /datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersFlatPutRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Change filter order",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/filters/order/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:order\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/\",\n    \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/\"\n  ]\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const putDatasetsDataset_idFiltersFlat = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/order/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:order\",\n     \"graph\": [\n       \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/87c4a50f2a64474ea0d6129d120a6101/\",\n       \"https://app.crunch.io/api/datasets/a4e731c94da34c2295b4685ae2e30861/filters/c80c160bec8b48079e18c76bf8992efd/\"\n     ]\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/filters/{filter_id}/": {
      "delete": {
        "description": "This endpoint deletes the specified filter. If you are a dataset viewer, you can delete only personal filters. If you are a dataset editor, you can delete any public dataset filter. Otherwise the endpoint will return a 403 error.\n",
        "operationId": "delete-datasets-dataset_id-filters-filter_id",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete filter",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idFiltersFilter_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/',\n{\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "This endpoint returns all of the details about one filter. \n\nThe `expression` attribute must contain a valid Crunch filter expression.\n\nThe `team` attribute will point to the team this filter is shared with. If it isn\u2019t shared with any team, the value will be null.",
        "operationId": "get-datasets-dataset_id-filters-filter_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "creation_time": "2020-05-20T19:43:51.970000+00:00",
                        "expression": {
                          "args": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/ac8d50b553fb4c959fcce5ff09e2fd2c/variables/4yQZH2PBRwSLbYjPE2EK4J000000/"
                            },
                            {
                              "column": [
                                2
                              ]
                            }
                          ],
                          "function": "in"
                        },
                        "id": "e90f1435324a4ea28b7fdd588c18f232",
                        "is_public": false,
                        "last_update": "2020-05-20T19:43:51.953000+00:00",
                        "name": "Female",
                        "owner_id": "https://app.crunch.io/api/users/ecbf2d4e7352416fa381b8ef04979faa/",
                        "team": "https://app.crunch.io/api/teams/acd1c4de1ff5456c8d28e0de3e27de2f/",
                        "view": {}
                      },
                      "description": "Detail information for one filter",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/ac8d50b553fb4c959fcce5ff09e2fd2c/filters/e90f1435324a4ea28b7fdd588c18f232/",
                      "views": {
                        "applied": "https://app.crunch.io/api/datasets/ac8d50b553fb4c959fcce5ff09e2fd2c/filters/e90f1435324a4ea28b7fdd588c18f232/applied/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "creation_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "expression": {
                          "additionalProperties": false,
                          "properties": {
                            "args": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "column": {
                                    "items": {
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "variable": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  }
                                },
                                "required": [],
                                "title": "Arg",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "function": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Expression",
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "last_update": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "owner_id": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "team": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "view": {
                          "additionalProperties": false,
                          "title": "View",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "applied": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersFilterIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Filter details",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFiltersFilter_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the filter you are working with",
          "in": "path",
          "name": "filter_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint allows you to update a filter's expression, name, team and is_public attributes. Successful requests return 204 status. Only the dataset's current editor can update a public filter. Likewise, attempting to change `is_public: true` for a filter containing a secure variable will result in a 400 response.",
        "operationId": "patch-datasets-dataset_id-filters-filter_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "expression": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/ddd7e521241d4195aa26316217a30fea/variables/5lFyFGlIbChQOpjzUErTCT000003/"
                          },
                          {
                            "value": 1
                          }
                        ],
                        "function": "=="
                      },
                      "is_public": false,
                      "team": null
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "is_public": true
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "team": "https://app.crunch.io/api/teams/3c8d1fa3e3ef4089b22f3ceb55d95e96/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "team": null
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "properties": {
                      "test": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "expression": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "integer"
                            },
                            "variable": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            }
                          },
                          "title": "Arg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "function": {
                        "type": "string"
                      }
                    },
                    "title": "Expression",
                    "type": "object"
                  },
                  "is_public": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "team": {
                    "anyOf": [
                      {
                        "nullable": true
                      },
                      {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      }
                    ]
                  }
                },
                "title": "DatasetsDatasetIDFiltersFilterIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Update filter",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"expression\": {\n    \"args\": [\n      {\n        \"variable\": \"https://app.crunch.io/api/datasets/ddd7e521241d4195aa26316217a30fea/variables/5lFyFGlIbChQOpjzUErTCT000003/\"\n      },\n      {\n        \"value\": 1\n      }\n    ],\n    \"function\": \"==\"\n  },\n  \"is_public\": false,\n  \"team\": null\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idFiltersFilter_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"expression\": {\n       \"args\": [\n         {\n           \"variable\": \"https://app.crunch.io/api/datasets/ddd7e521241d4195aa26316217a30fea/variables/5lFyFGlIbChQOpjzUErTCT000003/\"\n         },\n         {\n           \"value\": 1\n         }\n       ],\n       \"function\": \"==\"\n     },\n     \"is_public\": false,\n     \"team\": null\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/filters/{filter_id}/applied/": {
      "get": {
        "description": "This endpoint returns a valid up-to-date expression of the persisted  filter, excluding any invalid references that the platonic filter may contain.",
        "operationId": "get-datasets-dataset_id-filters-filter_id-applied",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Detail information for one applied filter",
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/32ff01cc5516401db62341c19e2f520a/filters/b70df8e12e7c47d5af1730da44506da5/applied/",
                      "value": {
                        "creation_time": "2020-05-20T18:14:40.489000+00:00",
                        "expression": {},
                        "id": "b70df8e12e7c47d5af1730da44506da5",
                        "is_applied": false,
                        "is_public": false,
                        "last_update": "2020-05-20T18:14:40.485000+00:00",
                        "name": "mambo number three",
                        "owner_id": "https://app.crunch.io/api/users/3b7d4c93af6144e98f26814b3fd0930b/",
                        "team": null,
                        "view": {}
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "creation_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "expression": {
                          "additionalProperties": false,
                          "title": "Expression",
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_applied": {
                          "type": "boolean"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "last_update": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "owner_id": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "team": {
                          "nullable": true
                        },
                        "view": {
                          "additionalProperties": false,
                          "title": "Expression",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFiltersFilterIDAppliedGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "View applied filter details",
        "tags": [
          "Filters"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/applied/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFiltersFilter_idApplied = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/filters/{filter_id}/applied/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the filter you are working with",
          "in": "path",
          "name": "filter_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/progress/{task_id}/": {
      "get": {
        "description": "Progress resources provide information about the current state of a long-running server process in Crunch. Some requests at certain endpoints may return 202 status containing a progress URL in the body, at which one can monitor the progress of the request that was accepted and not yet completed.\n\nThe progress value reported here is an integer between -1 and 100. Positive progress values indicate that the job is being processed. A negative value indicates that an error occurred in processing. 0 indicates that the job has not been started. 100 indicates the task has been completed.",
        "operationId": "get-progress-taskId",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/",
                      "value": {
                        "message": "complete",
                        "progress": 100
                      },
                      "views": {
                        "result": "https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/result/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "progress": {
                          "description": "An integer between -1 and 100. Positive progress values indicate that the job is being processed. A negative value indicates that an error occurred in processing. 0 indicates that the job has not been started. 100 indicates the task has been completed.",
                          "type": "integer"
                        }
                      },
                      "title": "Value",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "result": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "ProgressTaskIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "ProgressTaskIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Task progress",
        "tags": [
          "Task Progress"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/progress/{task_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getProgressTaskId = await fetch(\n  'https://app.crunch.io/api/progress/{task_id}/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the task you want progress for",
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/sources/": {
      "get": {
        "description": "List data sources added by this user.",
        "operationId": "get-sources",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of data sources added by this user",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/sources/05ae98333b8c410bb5715f73bceb094a/": {
                          "description": "Source A",
                          "name": "file"
                        },
                        "https://app.crunch.io/api/sources/05ae98333b8c410bb57agf73bceb094a/": {
                          "description": "Source C",
                          "name": "file"
                        },
                        "https://app.crunch.io/api/sources/arty98333b8c410bb5715f73bceb094a/": {
                          "description": "Source B",
                          "name": "file"
                        }
                      },
                      "self": "https://app.crunch.io/api/sources/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "SourcesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List sources",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/sources/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getSources = await fetch(\n  'https://app.crunch.io/api/sources/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "post": {
        "description": "Use this endpoint to upload data to Crunch. Once the data file has been uploaded to Crunch, the data contained in the file can then be added to any dataset.\n\nThe following three alternative payloads are supported.\n\n### Upload file as part of multipart/form-data POST request\n\nPOST a multipart form with an uploaded_file field containing the file to upload. A 201 (Created) response indicates success and returns the URL of the new source in its Location header.\n\nThe filename field provided for each file is used for the source name. A source added in this way receives the empty string (\u201c\u201d) as its description.\n\nWhile a multipart form request can contain multiple files, only the file contained in the uploaded_file field will be used to create a source; each source requires a separate POST request.\n\nSupported file types include:\n* text/csv\n* application/csv\n* application/x-spss-sav\n* application/x-parquet\n\nThe Content-Type value (MIME-type) provided for the file determines the parser used for that file. Care should be taken to, for example, distinguish a CSV file (text/csv) from a plain text file (text/plain), etc.\n\n```\nPOST /sources/ HTTP/1.1\nContent-Length: 8874357\nContent-Type: multipart/form-data; boundary=df5b17ff463a4cb3aa61cf02224c7303\n\n--df5b17ff463a4cb3aa61cf02224c7303\nContent-Disposition: form-data; name=\"uploaded_file\"; filename=\"my.csv\"\nContent-Type: text/csv\n\n\"case_id\",\"q1\",\"q2\"\n234375,3,\"sometimes\"\n234376,2,\"always\"\n...\n--------\n201 Created\nLocation: /sources/{source_id}/\n```\n\n### POST a shoji:entity with a file URL as location\nA source can also be created by POSTing a shoji:entity that references the file to be used as a URL.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"location\": \"<url>\",\n    \"name\": \"Optional name\",\n    \"description\": \"Optional description\"\n  }\n}\n```\n\nThe description attribute is optional, but will appear as the description attribute on the created source.\n\n### POST a form (urlencoded or multipart/form) with a source_url field\n\nAlternately, you may POST a form with a source_url field that points to a publicly accessible URL. Both the \u201chttp\u201d and the \u201cs3\u201d scheme are supported. This endpoint will download that file synchronously and verify it as a valid source file.",
        "operationId": "post-sources",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "examples": {
                "example-1": {}
              },
              "schema": {
                "properties": {
                  "filename": {
                    "description": "",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/sources/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "SourcesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Must include a `location` field pointing to a publicly accessible URL\n"
                      ],
                      "message": "Must include a `location` field pointing to a publicly accessible URL",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "SourcesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Upload data to Crunch",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/sources/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postSources = await fetch(\n  'https://app.crunch.io/api/sources/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/teams/": {
      "get": {
        "description": "This endpoint returns a full list of teams that have access to a given dataset via the different sources:\n\n* Team is member of the project or parents of the containing project.\n* Team has direct share access to the dataset.\n\nThe response will be a catalog with each team as member with the tuple indicating the coalesced permissions and information about the type of access.",
        "operationId": "get-datasets-dataset_id-teams",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/teams/d0a8bc6f88454a28bb7103e5bcfe7638/": {
                          "id": "d0a8bc6f88454a28bb7103e5bcfe7638",
                          "name": "x",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "team": "https://app.crunch.io/api/teams/d0a8bc6f88454a28bb7103e5bcfe7638/"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/ac88662254a04833bcb14de351a12ac9/teams/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "https://app.crunch.io/api/teams/d0a8bc6f88454a28bb7103e5bcfe7638/": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "permissions": {
                              "additionalProperties": false,
                              "properties": {
                                "edit": {
                                  "type": "boolean"
                                },
                                "view": {
                                  "type": "boolean"
                                }
                              },
                              "required": [],
                              "title": "Permissions",
                              "type": "object"
                            },
                            "team": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPITeamsD0A8Bc6F88454A28Bb7103E5Bcfe7638",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTeamsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dataset teams",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/teams/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idTeams = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/teams/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/": {
      "get": {
        "description": "All users belong to one and only one account. Accounts provide an organization-level scope for Crunch.io customers. This endpoint returns information for the authenticated user's account including branding configuration.\n## What are account managers?\nAccount managers can administer their various users and entities and have visibility on them. A user is an account manager if their `account_permissions.admin_account=true`.",
        "operationId": "get-account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "id": "00001",
                        "logo": {
                          "favicon": "file:///crunch/act_app_icons/account--xgttlb-favicon.ico",
                          "large": "file:///crunch/act_app_icons/account--gthgbb-large.png",
                          "small": "file:///crunch/act_app_icons/account--njwexu-small.png"
                        },
                        "name": "account created for joe@gmail.com",
                        "oauth_providers": [
                          {
                            "id": "google",
                            "name": "Google auth"
                          }
                        ],
                        "palette": {
                          "analysis": [],
                          "brand": {
                            "message": "#722580",
                            "primary": "#0064a4",
                            "secondary": "#107f64"
                          }
                        },
                        "templates": {
                          "powerpoint": "file:///crunch/act_templates/account--uecowj-powerpoint.pptx"
                        }
                      },
                      "catalogs": {
                        "applications": "https://local.crunch.io:28443/api/account/applications/",
                        "datasets": "https://local.crunch.io:28443/api/account/datasets/",
                        "projects": "https://local.crunch.io:28443/api/account/projects/",
                        "teams": "https://local.crunch.io:28443/api/account/teams/",
                        "users": "https://local.crunch.io:28443/api/account/users/"
                      },
                      "description": "Details for an account",
                      "element": "shoji:entity",
                      "self": "https://local.crunch.io:28443/api/account/",
                      "views": {
                        "logo": "https://local.crunch.io:28443/api/account/logo/",
                        "templates": "https://local.crunch.io:28443/api/account/templates/"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "body": {
                      "$ref": "#/components/schemas/Account"
                    },
                    "catalogs": {
                      "$ref": "#/components/schemas/Shoji-catalog-list"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "$ref": "#/components/schemas/Shoji-self"
                    },
                    "views": {
                      "$ref": "#/components/schemas/Shoji-view-list"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "My account details",
        "tags": [
          "Account"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccount = await fetch(\n  'https://app.crunch.io/api/account/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "patch": {
        "description": "Update the brand color palette for the user's account. Only account admins are authorized to do this.\n\nYou may also specify palettes under the analysis attribute to theme your data display.",
        "operationId": "patch-account",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "palette": {
                        "analysis": [],
                        "brand": {
                          "message": "#722580",
                          "primary": "#0064a4",
                          "secondary": "#107f64"
                        }
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "palette": {
                        "additionalProperties": false,
                        "properties": {
                          "analysis": {
                            "type": "array"
                          },
                          "brand": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "primary": {
                                "type": "string"
                              },
                              "secondary": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "Brand",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "Palette",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "AccountPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Change account color palette",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"palette\": {\n      \"analysis\": [],\n      \"brand\": {\n        \"message\": \"#722580\",\n        \"primary\": \"#0064a4\",\n        \"secondary\": \"#107f64\"\n      }\n    }\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchAccount = await fetch(\n  'https://app.crunch.io/api/account/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"palette\": {\n         \"analysis\": [],\n         \"brand\": {\n           \"message\": \"#722580\",\n           \"primary\": \"#0064a4\",\n           \"secondary\": \"#107f64\"\n         }\n       }\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/applications/": {
      "get": {
        "description": "List subdomains configured for user's account. ",
        "operationId": "get-account-applications",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/account/applications/local/": {
                          "name": "Localhost development",
                          "subdomain": "local"
                        },
                        "https://app.crunch.io/api/account/applications/superman/": {
                          "name": "Crunch.io",
                          "subdomain": "superman"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/applications/"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "properties": {
                        "subdomain A": {
                          "properties": {
                            "name": {
                              "description": "Name of subdomain",
                              "type": "string"
                            },
                            "subdomain": {
                              "description": "Subdomain prefix",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "subdomain B": {
                          "properties": {
                            "name": {
                              "description": "Name of subdomain",
                              "type": "string"
                            },
                            "subdomain": {
                              "description": "Subdomain prefix",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "self": {
                      "$ref": "#/components/schemas/Shoji-self"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List subdomains",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/applications/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountApplications = await fetch(\n  'https://app.crunch.io/api/account/applications/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "patch": {
        "description": "Create a new subdomain for the user's account.\n\nThe subdomain:\n\n* must be unique system-wide, case insensitive\n* can only contain letters, numbers, and - (dash)\n* must be between 3 and 32 characters in length\n* cannot start with - or a number\n\nIf the requested subdomain is unavailable or invalid, the server will return a 400 response.\n\nAttributes `name` and `subdomain` are required; `palette` and `manifest` are optional. Note that you cannot specify logos in the this request. Use the created entity\u2019s logo/ endpoint to upload the image files to the subdomain.",
        "operationId": "post-account-applications",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "joe subdomain",
                      "subdomain": "joe"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "subdomain": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "AccountApplicationsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Create subdomain",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/applications/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"joe subdomain\",\n    \"subdomain\": \"joe\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountApplications = await fetch(\n  'https://app.crunch.io/api/account/applications/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"joe subdomain\",\n       \"subdomain\": \"joe\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/applications/{subdomain}/": {
      "get": {
        "description": "This endpoint provides all the details about one account subdomain.",
        "operationId": "get-account-applications-application_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "logo": {
                          "favicon": "",
                          "large": "",
                          "small": ""
                        },
                        "manifest": {},
                        "name": "joe subdomain",
                        "palette": {
                          "brand": {
                            "message": "#BAA5E7",
                            "primary": "#FFAABB",
                            "secondary": "#G4EEBB"
                          }
                        },
                        "subdomain": "joe"
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/account/applications/joe/",
                      "views": {
                        "logo": "https://app.crunch.io/api/account/applications/joe/logo/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "logo": {
                          "additionalProperties": false,
                          "description": "Urls for the subdomain logo in different resolutions",
                          "properties": {
                            "favicon": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            }
                          },
                          "title": "Logo",
                          "type": "object"
                        },
                        "manifest": {
                          "additionalProperties": false,
                          "description": "Additional client configurations",
                          "title": "Manifest",
                          "type": "object"
                        },
                        "name": {
                          "type": "string"
                        },
                        "palette": {
                          "additionalProperties": false,
                          "properties": {
                            "brand": {
                              "properties": {
                                "message": {
                                  "type": "string"
                                },
                                "primary": {
                                  "description": "Hex color code of links and interactable things",
                                  "type": "string"
                                },
                                "secondary": {
                                  "description": "Hex color code of titles",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "title": "Manifest",
                          "type": "object"
                        },
                        "subdomain": {
                          "type": "string"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "logo": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "AccountApplicationsApplicationIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Subdomain details",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/applications/{subdomain}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountApplicationsApplication_id = await fetch(\n  'https://app.crunch.io/api/account/applications/{subdomain}/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique subdomain you are working with",
          "in": "path",
          "name": "subdomain",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Using this endpoint, you can change a subdomain's name, palette, or manifest. Subdomain logos are updated through the \"Change subdomain logos\" endpoint.",
        "operationId": "post-account-applications-application_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "manifest": {
                        "key": "val"
                      },
                      "name": "my company",
                      "palette": {
                        "brand": {
                          "message": "#000000",
                          "primary": "#123456",
                          "secondary": "#654321"
                        }
                      },
                      "subdomain": "mycompany"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "name": "my company",
                      "subdomain": "mysubdomain"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "manifest": {
                        "key": "val"
                      },
                      "name": "my company2",
                      "palette": {
                        "brand": {
                          "message": "#000000",
                          "primary": "#123456",
                          "secondary": "#654321"
                        }
                      },
                      "subdomain": "mysubdomain3"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "manifest": {
                        "additionalProperties": false,
                        "properties": {
                          "key": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Manifest",
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "palette": {
                        "additionalProperties": false,
                        "properties": {
                          "brand": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "primary": {
                                "type": "string"
                              },
                              "secondary": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "Brand",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "Palette",
                        "type": "object"
                      },
                      "subdomain": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "AccountApplicationsApplicationIDPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Subdomain is not available"
                      ],
                      "message": "Subdomain is not available",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountApplicationsApplicationIDPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Change subdomain details",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/applications/{subdomain}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"manifest\": {\n      \"key\": \"val\"\n    },\n    \"name\": \"my company\",\n    \"palette\": {\n      \"brand\": {\n        \"message\": \"#000000\",\n        \"primary\": \"#123456\",\n        \"secondary\": \"#654321\"\n      }\n    },\n    \"subdomain\": \"mycompany\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountApplicationsApplication_id = await fetch(\n  'https://app.crunch.io/api/account/applications/{subdomain}/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"manifest\": {\n         \"key\": \"val\"\n       },\n       \"name\": \"my company\",\n       \"palette\": {\n         \"brand\": {\n           \"message\": \"#000000\",\n           \"primary\": \"#123456\",\n           \"secondary\": \"#654321\"\n         }\n       },\n       \"subdomain\": \"mycompany\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/applications/{subdomain}/logo/": {
      "get": {
        "description": "",
        "operationId": "get-account-applications-applicationId-logo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/account/applications/testsetuplogos/logo/",
                      "value": {
                        "favicon": "",
                        "large": "",
                        "small": ""
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "favicon": {
                          "type": "string"
                        },
                        "large": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "AccountApplicationsApplicationIDLogoGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List subdomain logos",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/applications/{subdomain}/logo/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountApplicationsApplicationIdLogo = await fetch(\n  'https://app.crunch.io/api/account/applications/{subdomain}/logo/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique subdomain you are working with",
          "in": "path",
          "name": "subdomain",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "It is possible to remove the logos that have been set up. To do so, PATCH back the contents of the logo/ resource with the specific logos that need to be removed set to the null value.",
        "operationId": "patch-account-applications-applicationId-logo",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "favicon": null,
                      "large": null,
                      "small": null
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "value": {
                    "properties": {
                      "favicon": {
                        "description": "This will remove the favicon logo",
                        "type": "null"
                      },
                      "large": {
                        "description": "This will remove the large log",
                        "type": "null"
                      },
                      "small": {
                        "description": "This will remove the small logo",
                        "type": "null"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Remove subdomain logos",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/applications/{subdomain}/logo/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"favicon\": null,\n    \"large\": null,\n    \"small\": null\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchAccountApplicationsApplicationIdLogo = await fetch(\n  'https://app.crunch.io/api/account/applications/{subdomain}/logo/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:view\",\n     \"value\": {\n       \"favicon\": null,\n       \"large\": null,\n       \"small\": null\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "To set/change an application\u2019s logo, you can make a multipart/form-data request containing either or all of the large, small and favicon fields with the desired image files to use. GIF, JPEG, PNG and ICO image files are supported.\n\nOnly account admins are authorized to change subdomain logos.",
        "operationId": "post-account-applications-applicationId-logo",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "favicon": {
                    "description": "16x16 pixel logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "large": {
                    "description": "Large logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "small": {
                    "description": "Small logo image",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid image file"
                      ],
                      "message": "Invalid image file",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Change subdomain logos",
        "tags": [
          "Account Subdomains"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/applications/{subdomain}/logo/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountApplicationsApplicationIdLogo = await fetch(\n  'https://app.crunch.io/api/account/applications/{subdomain}/logo/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/datasets/": {
      "get": {
        "deprecated": true,
        "description": "Only account managers have access to this catalog. It is a read only shoji catalog containing all the datasets that users of this account have created (potentially very large catalog).\n\nAccount managers have implicit editor access to all the account datasets.\n",
        "operationId": "get-account-datasets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/12da1cd3659a4b4c9bb4b33a73fb7f8e/": {
                          "access_time": "1970-01-01T00:00:00+00:00",
                          "account": "https://app.crunch.io/api/accounts/5b960e63aabf40f5bb1a92240fd16fb3/",
                          "archived": false,
                          "creation_time": "2020-05-20T19:06:26.003000+00:00",
                          "current_editor": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                          "current_editor_name": "captain-59690949fbfa9f206b49e573ebef2b110267e1de985d3825fc08199f113be304",
                          "description": "",
                          "end_date": "2020-05-20T19:06:26.003000+00:00",
                          "id": "12da1cd3659a4b4c9bb4b33a73fb7f8e",
                          "is_published": true,
                          "modification_time": "2020-05-20T19:06:25.303000+00:00",
                          "name": "Dataset",
                          "owner_id": "https://app.crunch.io/api/users/29d2c9dee6964f6f89e99b791af8e913/",
                          "owner_name": "a272d8541574d7b16fec2f5216e3ad3a76b5b5118082c02a115b93ab50e872df@example.com",
                          "size": {
                            "columns": 35,
                            "rows": 8542,
                            "unfiltered_rows": 5612
                          },
                          "start_date": "2020-05-20T19:06:26.003000+00:00",
                          "streaming": "no",
                          "view_of": "https://app.crunch.io/api/datasets/60284cf788804ca3b59f1c259bf1f85e/"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/datasets/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "datasetURL": {
                          "additionalProperties": false,
                          "properties": {
                            "access_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "account": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "archived": {
                              "type": "boolean"
                            },
                            "creation_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "current_editor": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "current_editor_name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "end_date": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "is_published": {
                              "type": "boolean"
                            },
                            "modification_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "owner_id": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "owner_name": {
                              "type": "string"
                            },
                            "size": {
                              "additionalProperties": false,
                              "properties": {
                                "columns": {
                                  "type": "integer"
                                },
                                "rows": {
                                  "type": "integer"
                                },
                                "unfiltered_rows": {
                                  "type": "integer"
                                }
                              },
                              "required": [],
                              "title": "Size",
                              "type": "object"
                            },
                            "start_date": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "streaming": {
                              "type": "string"
                            },
                            "view_of": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPIDatasets12Da1Cd3659A4B4C9Bb4B33A73Fb7F8E",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountDatasetsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List account datasets",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/datasets/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountDatasets = await fetch(\n  'https://app.crunch.io/api/account/datasets/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/account/logo/": {
      "parameters": [],
      "patch": {
        "description": "To remove any logos that have been set up, submit one more more image names with a null value.",
        "operationId": "patch-account-logo",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "favicon": null,
                      "large": null,
                      "small": null
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "value": {
                    "properties": {
                      "favicon": {
                        "description": "This will remove the favicon logo",
                        "type": "null"
                      },
                      "large": {
                        "description": "This will remove the large log",
                        "type": "null"
                      },
                      "small": {
                        "description": "This will remove the small logo",
                        "type": "null"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Remove account logos",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/logo/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"favicon\": null,\n    \"large\": null,\n    \"small\": null\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchAccountLogo = await fetch(\n  'https://app.crunch.io/api/account/logo/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:view\",\n     \"value\": {\n       \"favicon\": null,\n       \"large\": null,\n       \"small\": null\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Update the logos for the user's account. Only account admins are authorized to do this. Valid file extensions are GIF, JPEG, PNG and ICO image files.",
        "operationId": "post-account-logo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "favicon": {
                    "description": "16x16 pixel logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "large": {
                    "description": "Large logo image",
                    "format": "binary",
                    "type": "string"
                  },
                  "small": {
                    "description": "Small logo image",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Change account logos",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/logo/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountLogo = await fetch(\n  'https://app.crunch.io/api/account/logo/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/projects/": {
      "get": {
        "description": "This catalog is available for account managers and lists all the projects that the users have created. Account managers have implicit edit access on all projects.",
        "operationId": "get-account-projects",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/projects/8ebf23a3d45144ce810f900bb52abf11/": {
                          "description": "",
                          "id": "8ebf23a3d45144ce810f900bb52abf11",
                          "name": "__users__"
                        },
                        "https://app.crunch.io/api/projects/b63cafbbf4f94b34935eb4858f394102/": {
                          "description": "",
                          "id": "b63cafbbf4f94b34935eb4858f394102",
                          "name": "Project"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/projects/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountProjectsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List projects",
        "tags": [
          "Account"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/projects/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountProjects = await fetch(\n  'https://app.crunch.io/api/account/projects/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/account/teams/": {
      "get": {
        "description": "This catalog is available for account managers and lists all the teams that the users have created. Account managers have implicit edit access on all teams.",
        "operationId": "get-account-teams",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/teams/0259fac5367344ceb2c3f8e30923e4ea/": {
                          "creator": "https://app.crunch.io/api/users/93ad4aaea41c4d3184c50e2799e9a67d/",
                          "id": "0259fac5367344ceb2c3f8e30923e4ea",
                          "name": "account_admin_can_add_member"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/teams/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "teamURL": {
                          "additionalProperties": false,
                          "properties": {
                            "creator": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPITeams0259Fac5367344Ceb2C3F8E30923E4Ea",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountTeamsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List account teams",
        "tags": [
          "Account"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/teams/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountTeams = await fetch(\n  'https://app.crunch.io/api/account/teams/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/account/templates/": {
      "get": {
        "description": "List the PowerPoint template configured for this account.",
        "operationId": "get-account-templates",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/account/templates/",
                      "value": {
                        "powerpoint": ""
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "powerpoint": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "AccountTemplatesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List Powerpoint template",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/templates/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountTemplates = await fetch(\n  'https://app.crunch.io/api/account/templates/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "patch": {
        "description": "To remove a Powerpoint template that has been set up, submit this with a null value.",
        "operationId": "patch-account-templates",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "powerpoint": null
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "value": {
                    "properties": {
                      "powerpoint": {
                        "description": "This will remove the Powerpoint template",
                        "type": "null"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Remove Powerpoint template",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/templates/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"powerpoint\": null\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchAccountTemplates = await fetch(\n  'https://app.crunch.io/api/account/templates/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:view\",\n     \"value\": {\n       \"powerpoint\": null\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Update the PowerPoint template for the user's account. Only account admins are authorized to do this. Must be a valid Microsoft PowerPoint file.",
        "operationId": "post-account-templates",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "powerpoint": {
                    "description": "Valid Powerpoint template file",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Change Powerpoint template",
        "tags": [
          "Branding"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/templates/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountTemplates = await fetch(\n  'https://app.crunch.io/api/account/templates/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/users/": {
      "get": {
        "description": "List of users that belong to this account. Any account member may use this api endpoint.",
        "operationId": "get-account-users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of users that belong to this account",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/users/160d3a3c2ef64a57ba4c493503a22049/": {
                          "account_permissions": {
                            "admin_account": false,
                            "alter_users": false,
                            "create_datasets": false
                          },
                          "dataset_permissions": {
                            "edit": false,
                            "view": true
                          },
                          "email": "ae5a67a1fc647c87a2b004166789e9211c5d90f299921f1c348d6f64272f9f62@example.com",
                          "id_method": "pwhash",
                          "id_provider": null,
                          "name": "ae5a67a1fc647c87a2b004166789e9211c5d90f299921f1c348d6f64272f9f62@example.com",
                          "role_code": "viewer",
                          "role_url": "https://app.crunch.io/api/roles/accounts/aed4b97c79e544c098a96e8a2d4832db/"
                        },
                        "https://app.crunch.io/api/users/26936d5b5459497590209e7de5eab977/": {
                          "account_permissions": {
                            "admin_account": true,
                            "alter_users": true,
                            "create_datasets": true
                          },
                          "dataset_permissions": {
                            "edit": true,
                            "view": true
                          },
                          "email": "captain-5ec6eae027c9cc645fa0f18539ecc84d37936494da69ab46591baad87ef4f3a4@example.com",
                          "id_method": "pwhash",
                          "id_provider": null,
                          "name": "captain-5ec6eae027c9cc645fa0f18539ecc84d37936494da69ab46591baad87ef4f3a4",
                          "role_code": "admin",
                          "role_url": "https://app.crunch.io/api/roles/accounts/39e671336232455f989adf8c9878bf40/"
                        }
                      },
                      "self": "https://app.crunch.io/api/account/users/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "account_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "admin_account": {
                                "type": "boolean"
                              },
                              "alter_users": {
                                "type": "boolean"
                              },
                              "create_datasets": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "AccountPermissions",
                            "type": "object"
                          },
                          "dataset_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "DatasetPermissions",
                            "type": "object"
                          },
                          "email": {
                            "type": "string"
                          },
                          "id_method": {
                            "type": "string"
                          },
                          "id_provider": {
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "role_code": {
                            "type": "string"
                          },
                          "role_url": {
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "title": "AccountUsersGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List account users",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/users/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountUsers = await fetch(\n  'https://app.crunch.io/api/account/users/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "patch": {
        "description": "This api endpoint allows account admins to edit user permissions in batch. It is only possible to change the account_permissions attribute. Additionally, it is possible to delete users from the account by sending null.",
        "operationId": "post-account-users",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "value": {
                      "body": {
                        "account_permissions": {
                          "admin_account": false,
                          "alter_users": true,
                          "create_datasets": true,
                          "create_users": true
                        },
                        "projects": [
                          "https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/"
                        ],
                        "teams": [
                          "https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/"
                        ]
                      },
                      "element": "shoji:entity"
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "value": {
                    "additionalProperties": false,
                    "properties": {
                      "body": {
                        "additionalProperties": false,
                        "properties": {
                          "account_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "admin_account": {
                                "type": "boolean"
                              },
                              "alter_users": {
                                "type": "boolean"
                              },
                              "create_datasets": {
                                "type": "boolean"
                              },
                              "create_users": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "AccountPermissions",
                            "type": "object"
                          },
                          "projects": {
                            "items": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "teams": {
                            "items": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [],
                        "title": "Body",
                        "type": "object"
                      },
                      "element": {
                        "$ref": "#/components/schemas/Shoji-entity-element"
                      }
                    },
                    "required": [],
                    "title": "Value",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "AccountUsersPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid team URLs"
                      ],
                      "message": "Invalid team URLs",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountUsersPatchRequest",
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Update account user",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/account/users/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"value\": {\n    \"body\": {\n      \"account_permissions\": {\n        \"admin_account\": false,\n        \"alter_users\": true,\n        \"create_datasets\": true,\n        \"create_users\": true\n      },\n      \"projects\": [\n        \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n      ],\n      \"teams\": [\n        \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n      ]\n    },\n    \"element\": \"shoji:entity\"\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountUsers = await fetch(\n  'https://app.crunch.io/api/account/users/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"value\": {\n       \"body\": {\n         \"account_permissions\": {\n           \"admin_account\": false,\n           \"alter_users\": true,\n           \"create_datasets\": true,\n           \"create_users\": true\n         },\n         \"projects\": [\n           \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n         ],\n         \"teams\": [\n           \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n         ]\n       },\n       \"element\": \"shoji:entity\"\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "This api endpoint is only available to account administrators. If a user with the provided email address already exists in the application (on another account), the server will return a 400 response. It is possible to create a user that belongs to different teams or projects by including those team or project urls in the payload.",
        "operationId": "post-account-users",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": false,
                        "alter_users": true,
                        "create_datasets": true,
                        "create_users": true
                      },
                      "email": "new_user_with_role@user.com",
                      "id_method": "pwhash",
                      "id_provider": "google",
                      "projects": [
                        "https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/"
                      ],
                      "role_url": "https://app.crunch.io/api/roles/accounts/0a0c5865449a4b0aa6b13bb44bf79635/",
                      "send_invite": false,
                      "teams": [
                        "https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/"
                      ],
                      "url_base": "http://something.com/else/${token}/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-02": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": true,
                        "create_datasets": true,
                        "create_users": true
                      },
                      "email": "add_user_sets_right_role@user.com",
                      "id_method": "pwhash",
                      "send_invite": false
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-03": {
                  "value": {
                    "body": {
                      "email": "new_user@gets_rules.com",
                      "url_base": "http://something.com/else/${token}/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-04": {
                  "value": {
                    "body": {
                      "email": "a_newer@user.com"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-05": {
                  "value": {
                    "body": {
                      "email": "an_even_newer@user.com",
                      "send_invite": true,
                      "url_base": "http://something.com/else/${token}/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-06": {
                  "value": {
                    "body": {
                      "email": "user_send_invite_oauth@user.com",
                      "id_method": "oauth",
                      "id_provider": "google",
                      "send_invite": true
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-07": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "alter_users": true,
                        "create_datasets": true,
                        "create_users": true
                      },
                      "email": "add_user_sets_right_role_legacy@user.com",
                      "id_method": "pwhash",
                      "send_invite": false
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-08": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "alter_users": true,
                        "create_datasets": false
                      },
                      "email": "add_user_to@account_with_legacy_permissions.com"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-09": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": false,
                        "create_datasets": true
                      },
                      "email": "u1@add_to_projects.com",
                      "projects": [
                        "https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-10": {
                  "value": {
                    "body": {
                      "email": "u1@add_to_teams.com",
                      "teams": [
                        "https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-11": {
                  "value": {
                    "body": {
                      "account_permissions": {
                        "admin_account": false,
                        "create_datasets": true
                      },
                      "email": "add_user_to@account_with_permissions.com"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "account_permissions": {
                        "additionalProperties": false,
                        "properties": {
                          "admin_account": {
                            "type": "boolean"
                          },
                          "alter_users": {
                            "type": "boolean"
                          },
                          "create_datasets": {
                            "type": "boolean"
                          },
                          "create_users": {
                            "type": "boolean"
                          }
                        },
                        "required": [],
                        "title": "AccountPermissions",
                        "type": "object"
                      },
                      "email": {
                        "type": "string"
                      },
                      "id_method": {
                        "type": "string"
                      },
                      "id_provider": {
                        "type": "string"
                      },
                      "projects": {
                        "items": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "role_url": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "send_invite": {
                        "type": "boolean"
                      },
                      "teams": {
                        "items": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "url_base": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "AccountUsersPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid team URLs"
                      ],
                      "message": "Invalid team URLs",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountUsersPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create account user",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/account/users/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"account_permissions\": {\n      \"admin_account\": false,\n      \"alter_users\": true,\n      \"create_datasets\": true,\n      \"create_users\": true\n    },\n    \"email\": \"new_user_with_role@user.com\",\n    \"id_method\": \"pwhash\",\n    \"id_provider\": \"google\",\n    \"projects\": [\n      \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n    ],\n    \"role_url\": \"https://app.crunch.io/api/roles/accounts/0a0c5865449a4b0aa6b13bb44bf79635/\",\n    \"send_invite\": false,\n    \"teams\": [\n      \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n    ],\n    \"url_base\": \"http://something.com/else/${token}/\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postAccountUsers = await fetch(\n  'https://app.crunch.io/api/account/users/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"account_permissions\": {\n         \"admin_account\": false,\n         \"alter_users\": true,\n         \"create_datasets\": true,\n         \"create_users\": true\n       },\n       \"email\": \"new_user_with_role@user.com\",\n       \"id_method\": \"pwhash\",\n       \"id_provider\": \"google\",\n       \"projects\": [\n         \"https://app.crunch.io/api/projects/55c50cae6fd045dbab1f26b8b013b054/\"\n       ],\n       \"role_url\": \"https://app.crunch.io/api/roles/accounts/0a0c5865449a4b0aa6b13bb44bf79635/\",\n       \"send_invite\": false,\n       \"teams\": [\n         \"https://app.crunch.io/api/teams/4e559f3c1e9a4dbb83637a17e87b39a6/\"\n       ],\n       \"url_base\": \"http://something.com/else/${token}/\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/account/users/{user_id}/": {
      "get": {
        "description": "This endpoint retrieves the details about one account user.",
        "operationId": "get-account-users-user_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "account_permissions": {
                          "admin_account": true,
                          "create_datasets": true
                        },
                        "creation_time": "2020-03-24T21:09:46+00:00",
                        "email": "joe@gmail.com",
                        "id": "1168fb80e331419e9e0b2695714b32b3",
                        "id_method": "pwhash",
                        "id_provider": "",
                        "name": "joe@gmail.com"
                      },
                      "catalogs": {
                        "datasets": "https://app.crunch.io/api/account/users/1168fb80e331419e9e0b2695714b32b3/datasets/",
                        "integrations": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/integrations/",
                        "sources": "https://app.crunch.io/api/sources/",
                        "visible_datasets": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/visible_datasets/"
                      },
                      "description": "Details for a User",
                      "element": "shoji:entity",
                      "fragments": {
                        "reassign": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/reassign/"
                      },
                      "invite": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/invite/",
                      "password": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/password/",
                      "self": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/",
                      "urls": {
                        "account_url": "https://app.crunch.io/api/account/",
                        "change_email_url": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/change_email/",
                        "invite_url": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/invite/",
                        "password_reset_url": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/password_reset/",
                        "password_url": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/password/",
                        "role_url": "https://app.crunch.io/api/roles/accounts/0001/"
                      },
                      "views": {
                        "actions": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/actions/",
                        "change_email": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/change_email/",
                        "password_reset": "https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/password_reset/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "account_permissions": {
                          "additionalProperties": false,
                          "properties": {
                            "admin_account": {
                              "type": "boolean"
                            },
                            "create_datasets": {
                              "type": "boolean"
                            }
                          },
                          "title": "AccountPermissions",
                          "type": "object"
                        },
                        "creation_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "id_method": {
                          "type": "string"
                        },
                        "id_provider": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "datasets": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "integrations": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "sources": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "visible_datasets": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "fragments": {
                      "additionalProperties": false,
                      "properties": {
                        "reassign": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Fragments",
                      "type": "object"
                    },
                    "invite": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "password": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "account_url": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "change_email_url": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "invite_url": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "password_reset_url": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "password_url": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "role_url": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Urls",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "actions": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "change_email": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "password_reset": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "AccountUsersUserIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Either the requested entity does not exist, or you do not have authorization to access it."
                      ],
                      "message": "Either the requested entity does not exist, or you do not have authorization to access it.",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountUsersUserIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "User details",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/account/users/{user_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountUsersUser_id = await fetch(\n  'https://app.crunch.io/api/account/users/{user_id}/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the user you are working with",
          "in": "path",
          "name": "user_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accounts/{account_id}/": {
      "get": {
        "description": "This endpoint provides all the details about the account you specify.",
        "operationId": "get-accounts-account_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "id": "69babd3a2e474f889f4b653cc298fbc2",
                        "logo": {
                          "favicon": "",
                          "large": "https://t.crunch.io/act_app_icons/account-crunch-ifjlvd-large.jpeg",
                          "small": ""
                        },
                        "name": "main account",
                        "oauth_providers": [
                          {
                            "id": "google",
                            "name": "Google auth"
                          }
                        ],
                        "palette": {
                          "analysis": [
                            {
                              "default": false,
                              "name": "Dark",
                              "palette": [
                                "#AAAAAA",
                                "#BBBBBB",
                                "#CCCCCC"
                              ],
                              "type": "qualitative"
                            },
                            {
                              "default": false,
                              "name": "Light",
                              "palette": [
                                "#DDDDDD",
                                "#EEEEEE",
                                "#FFFFFF"
                              ],
                              "type": "qualitative"
                            }
                          ],
                          "brand": {
                            "message": "#000000",
                            "primary": "#123456",
                            "secondary": "#654321"
                          }
                        },
                        "templates": {
                          "powerpoint": "https://t.crunch.io/account-main account-eesqnp-powerpoint.pptx"
                        }
                      },
                      "description": "Details for an account",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/accounts/69babd3a2e474f889f4b653cc298fbc2/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "logo": {
                          "additionalProperties": false,
                          "properties": {
                            "favicon": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Logo",
                          "type": "object"
                        },
                        "name": {
                          "type": "string"
                        },
                        "oauth_providers": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "OauthProvider",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "palette": {
                          "additionalProperties": false,
                          "properties": {
                            "analysis": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "default": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "palette": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "Analysis",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "brand": {
                              "additionalProperties": false,
                              "properties": {
                                "message": {
                                  "type": "string"
                                },
                                "primary": {
                                  "type": "string"
                                },
                                "secondary": {
                                  "type": "string"
                                }
                              },
                              "required": [],
                              "title": "Brand",
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "Palette",
                          "type": "object"
                        },
                        "templates": {
                          "additionalProperties": false,
                          "properties": {
                            "powerpoint": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Templates",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "AccountsAccountIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "message": {
                        "id": "notanaccount"
                      },
                      "status": 404,
                      "url": "/accounts/notanaccount/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Message",
                      "type": "object"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "AccountsAccountIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Account details",
        "tags": [
          "Account"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/accounts/{account_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getAccountsAccount_id = await fetch(\n  'https://app.crunch.io/api/accounts/{account_id}/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the account you are working with",
          "in": "path",
          "name": "account_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/": {
      "get": {
        "description": "Lists root urls available to authenticated requests.",
        "operationId": "get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "catalogs": {
                        "dashboards": "https://app.crunch.io/api/dashboards/",
                        "datasets": "https://app.crunch.io/api/datasets/",
                        "datasets_by_name": "https://app.crunch.io/api/datasets/by_name/{name}/",
                        "geodata": "https://app.crunch.io/api/geodata/",
                        "integrations": "https://app.crunch.io/api/integrations/",
                        "lobs": "https://app.crunch.io/api/lobs/",
                        "projects": "https://app.crunch.io/api/projects/",
                        "public": "https://app.crunch.io/api/public/",
                        "roles": "https://app.crunch.io/api/roles/",
                        "sources": "https://app.crunch.io/api/sources/",
                        "teams": "https://app.crunch.io/api/teams/",
                        "users": "https://app.crunch.io/api/users/"
                      },
                      "description": "The API root. GET user_url to access your Crunch resources. GET logout_url to sign out.",
                      "element": "shoji:catalog",
                      "self": "https://app.crunch.io/api/",
                      "urls": {
                        "account_roles_url": "https://app.crunch.io/api/roles/accounts/",
                        "account_url": "https://app.crunch.io/api/account/",
                        "logout_url": "https://app.crunch.io/api/logout/",
                        "notebook_url": "https://jupyter.crunch.io/",
                        "user_url": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/"
                      },
                      "views": {
                        "account": "https://app.crunch.io/api/account/",
                        "feature_flag": "https://app.crunch.io/api/feature_flag/",
                        "migration": "https://app.crunch.io/api/migration/",
                        "progress": "https://app.crunch.io/api/progress/",
                        "search": "https://app.crunch.io/api/search/",
                        "user": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "dashboards": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "datasets": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "datasets_by_name": {
                          "type": "string"
                        },
                        "geodata": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "integrations": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "lobs": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "projects": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "public": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "roles": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "sources": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "teams": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "users": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "account_roles_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "account_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "logout_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "notebook_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "user_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Urls",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "account": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "feature_flag": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "migration": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "progress": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "search": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "user": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "GetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "You must be authenticated to access this resource. Please login at /public/login/"
                      ],
                      "status": "401 Unauthorized",
                      "urls": {
                        "collect_inquires": "https://app.crunch.io/api/public/inquire/",
                        "email_change_url": "https://app.crunch.io/api/public/change_email/",
                        "login_url": "https://app.crunch.io/api/public/login/",
                        "password_change_url": "https://app.crunch.io/api/public/password_change/",
                        "password_reset_url": "https://app.crunch.io/api/public/password_reset/",
                        "public_url": "https://app.crunch.io/api/public/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "status": {
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "collect_inquires": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "email_change_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "login_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_change_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "password_reset_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "public_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Urls",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "GetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Root urls",
        "tags": [
          "Catalogs"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const get = await fetch(\n  'https://app.crunch.io/api/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": []
    },
    "/feature_flag/": {
      "get": {
        "description": "Crunch uses feature flags to enable and disable system-wide features under development. This api endpoint returns the application features the authenticated user has access to.",
        "operationId": "get-feature_flag",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Indicates the status of a given feature",
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/feature_flag/",
                      "value": {
                        "labs": [],
                        "off": [
                          "dataset_history",
                          "labs",
                          "dashboards",
                          "public_widget",
                          "data_cats",
                          "variable-folders",
                          "variable-folders-ui",
                          "old_projects_order",
                          "automatic_frame_collapsing",
                          "skip_folders_integrity_checking"
                        ],
                        "on": [
                          "html_emails",
                          "private_variables",
                          "dataset_search_index",
                          "variable_search_index",
                          "tabbooks",
                          "projects",
                          "variable_folders",
                          "crosstab_upgrade"
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "description": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "value": {
                      "properties": {
                        "labs": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "off": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "on": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "Access Token": []
          }
        ],
        "summary": "List feature flags",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/feature_flag/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getFeature_flag = await fetch(\n  'https://app.crunch.io/api/feature_flag/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/logout/": {
      "get": {
        "description": "Log user out and expire access token",
        "operationId": "get-logout",
        "responses": {
          "204": {
            "description": "Logged off successfully"
          }
        },
        "summary": "Log out",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/logout/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getLogout = await fetch(\n  'https://app.crunch.io/api/logout/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/otp/authorize": {
      "post": {
        "description": "This endpoint exchanges an email/password combination for a one-time password (OTP) suitable for creating a link or redirect to automatically log in a user to Crunch's application and API. This should be called as a server-to-server operation, resulting in a link that can be used in the user's browser. Only one OTP may be active at any given time, so a second request will invalidate the previous OTP before generating a new one.\n\nCalling this endpoint with a valid browser session will invalidate the session if the credentials authenticate correctly and the users do not match.\n\nMore information regarding one-time passwords can be found in the [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360045141591-One-time-passwords).",
        "operationId": "post-otp-authorize",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "email": "joe@example.com",
                    "password": "4ZQ8fQlVtP@Z"
                  }
                }
              },
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "expires": "2020-06-17T03:57:02.157592+00:00",
                      "token": "00002:244e07d61193dadc81295b2fd9700aff9fa9a8fe99309f1c3"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "expires": {
                      "description": "Expiration is set for one hour from creation",
                      "format": "date-time",
                      "type": "string"
                    },
                    "token": {
                      "description": "cryptographically secure, encoded id token. Token consists of two hexadecimal numbers separated by a colon.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [],
        "summary": "Create one-time password",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/otp/authorize \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"email\": \"joe@example.com\",\n  \"password\": \"4ZQ8fQlVtP@Z\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postOtpAuthorize = await fetch(\n  'https://app.crunch.io/api/otp/authorize', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"email\": \"joe@example.com\",\n     \"password\": \"4ZQ8fQlVtP@Z\"\n   })\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/otp/login": {
      "get": {
        "description": "**The url for this endpoint is intended to be used as the Location header for a 302 redirect from a redirect service as described in the [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360045141591-One-time-passwords).**\n\nUse a one-time password (OTP) to log a user into Crunch and redirect to a specified URI.\n\nAt the completion of this request, the valid `token` is deleted, the user referred to in the `token` is logged in, a browser session is created using a browser cookie, and the browser redirects to the sanitized `redirect_uri` location.\n\nQuery parameters must be url encoded. Both parameters typically contain characters that break URL parsing if not encoded.\n\nCrunch performs no pre-verification that the user has access to the final destination, so a user may see permission errors if the resource is not available to their user account after the redirect.\n\nIf a valid browser session already exists (that is, if the user has already logged in or used a previous `/otp/login` redirect), this endpoint's behavior varies based on the `token`:\n\n* If the session user matches the valid, unused `token`'s user the existing browser session is re-used, but the request otherwise continues as in the default operation.\n* If the browser session user does not match the `token`'s user, the existing browser session is logged out. The request then continues as if no user is logged in.\n* If the `token` is invalid, expired, or used, it is ignored, and the existing browser session is re-used, even if the users do not match. The redirect continues normally.\n\nIf no valid browser session exists, and the `token` is invalid, expired, or deleted, the endpoint returns `401 Unauthorized`.\n\nMore information regarding one-time passwords and the redirect service, can be found in the [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360045141591-One-time-passwords).",
        "operationId": "get-otp-login",
        "parameters": [
          {
            "description": "Token generated from the \"create one-time password\" endpoint",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource to display after logging the user in. If not set, the user will redirect to the root path ('/') on the server's configured primary host name. e.g., https://app.crunch.io/. The redirect_uri may be a full url, or a full path, and may include query params and a fragment. Schema, hostname, and port if provided are validated before use, and may be replaced by server configured values to prevent using Crunch as a redirect service or using this endpoint as an XSS target, or exposing session tokens over unencrypted links.",
            "in": "query",
            "name": "redirect_uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "301": {
            "description": "Moved Permanently",
            "headers": {
              "Location": {
                "description": "Sanitized `redirect_uri` for the browser to visit including any path and fragment in the request's value.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [],
        "summary": "Use one-time password",
        "tags": [
          "Authenticate"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/otp/login \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getOtpLogin = await fetch(\n  'https://app.crunch.io/api/otp/login', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/actions/": {
      "get": {
        "description": "All Crunch datasets keep track of the changes you make to them, from the initial import, through name changes and deriving new variables, to appending new rows. You can review the changes to see who did what and when, revert to a previous version, \u201cfork\u201d a dataset to make a copy of it, make changes to the copy, and merge those changes back into the original dataset.\n\nThis endpoint retrieves a graph of actions taken for this dataset.\n\nSee [Versioning Datasets](https://help.crunch.io/hc/en-us/articles/360044732771-Working-with-Data-and-Datasets#toc32) for more information.",
        "operationId": "get-datasets-dataset_id-actions",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Graph of actions taken for this dataset.",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/000001/": {
                          "datetime": "2020-05-20T19:49:59.332000+00:00",
                          "description": "Dataset created",
                          "failures": null,
                          "hash": "000001",
                          "id": "24e42f1435534fcf953168293910f553",
                          "key": "Dataset.create",
                          "state": {
                            "completed": true,
                            "failed": false,
                            "played": true
                          },
                          "timestamp": 1590004199.332,
                          "user": "832075622982ed0c921d0c2b6c238b3faf30f05ce673abe83df21d7b5b54d938"
                        },
                        "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/000002/": {
                          "datetime": "2020-05-20T19:49:59.501000+00:00",
                          "description": "Data added",
                          "failures": null,
                          "hash": "000002",
                          "id": "44a3914fe6d541309e14fe2c1bab1378",
                          "key": "Source.append",
                          "state": {
                            "completed": true,
                            "failed": false,
                            "played": true
                          },
                          "timestamp": 1590004199.501,
                          "user": "Missing user"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/",
                      "views": {
                        "current": "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/current/",
                        "since_forking": "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/since_forking/",
                        "upstream_delta": "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/upstream_delta/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "datetime": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "failures": {
                            "nullable": true
                          },
                          "hash": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "state": {
                            "additionalProperties": false,
                            "properties": {
                              "completed": {
                                "type": "boolean"
                              },
                              "failed": {
                                "type": "boolean"
                              },
                              "played": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "State",
                            "type": "object"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "properties": {
                        "action_url": {
                          "properties": {
                            "datetime": {
                              "description": "Timestamp when change was made to the dataset",
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "failures": {
                              "type": "null"
                            },
                            "hash": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "state": {
                              "properties": {
                                "completed": {
                                  "type": "boolean"
                                },
                                "failed": {
                                  "type": "boolean"
                                },
                                "played": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "user": {
                              "description": "Id of the user who made the dataset change",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "current": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "since_forking": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "upstream_delta": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "DatasetsDatasetIDActionsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dataset actions",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/actions/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idActions = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint accepts a dataset fork specified in \n```\n{\n  \"body\": {\n    \"dataset: \"https://app.crunch.io/api/datasets/d6d9ff5b7a924464adcca55e35dbc70e/\"\n  }\n}\n```\n\nand replays all actions from that fork to the dataset id provided in the api path. \n\nThe endpoint also accepts a **filter** argument that can have `{\"key\": [...]}` and `{\"hash\": [...]\"}` list of actions that should be skipped when replaying based on their HASH or their KEY.",
        "operationId": "post-datasets-dataset_id-actions",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "autorollback": true,
                      "dataset": "https://app.crunch.io/api/datasets/d6d9ff5b7a924464adcca55e35dbc70e/",
                      "force": false
                    },
                    "dataset": "https://app.crunch.io/api/datasets/c1fc87dc0cd44c07ba88741250e10517/",
                    "element": "shoji:entity",
                    "filter": {
                      "hash": [
                        "000004"
                      ],
                      "key": [
                        "Variable.create"
                      ],
                      "remember": true
                    },
                    "force": true
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "autorollback": true,
                      "dataset": "https://app.crunch.io/api/datasets/5583eed3982347ea85c6ced34ffb5cba/",
                      "force": false
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/fdb0f9b6b28846f6b0908a53486a9100/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "autorollback": true,
                      "dataset": "https://app.crunch.io/api/datasets/1021326999a94f9da2659989b8e730d9/"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "autorollback": {
                        "type": "boolean"
                      },
                      "dataset": {
                        "description": "URI of dataset fork whose actions should be replayed in this dataset.",
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "force": {
                        "type": "boolean"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "dataset": {
                    "format": "uri",
                    "type": "string",
                    "x-qt-uri-protocols": [
                      "https"
                    ]
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "filter": {
                    "additionalProperties": false,
                    "properties": {
                      "hash": {
                        "description": "List of action hashes that should be skipped and NOT replayed in the current dataset.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "key": {
                        "description": "List of action IDs that should be skipped and NOT replayed in the current dataset.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "remember": {
                        "type": "boolean"
                      }
                    },
                    "title": "Filter",
                    "type": "object"
                  },
                  "force": {
                    "type": "boolean"
                  }
                },
                "title": "DatasetsDatasetIDActionsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Origin and Target must be one a fork of the other"
                      ],
                      "message": "Origin and Target must be one a fork of the other",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Replay actions from fork",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/actions/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"autorollback\": true,\n    \"dataset\": \"https://app.crunch.io/api/datasets/d6d9ff5b7a924464adcca55e35dbc70e/\",\n    \"force\": false\n  },\n  \"dataset\": \"https://app.crunch.io/api/datasets/c1fc87dc0cd44c07ba88741250e10517/\",\n  \"element\": \"shoji:entity\",\n  \"filter\": {\n    \"hash\": [\n      \"000004\"\n    ],\n    \"key\": [\n      \"Variable.create\"\n    ],\n    \"remember\": true\n  },\n  \"force\": true\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idActions = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"autorollback\": true,\n       \"dataset\": \"https://app.crunch.io/api/datasets/d6d9ff5b7a924464adcca55e35dbc70e/\",\n       \"force\": false\n     },\n     \"dataset\": \"https://app.crunch.io/api/datasets/c1fc87dc0cd44c07ba88741250e10517/\",\n     \"element\": \"shoji:entity\",\n     \"filter\": {\n       \"hash\": [\n         \"000004\"\n       ],\n       \"key\": [\n         \"Variable.create\"\n       ],\n       \"remember\": true\n     },\n     \"force\": true\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/actions/current/": {
      "get": {
        "description": "All Crunch datasets keep track of the changes you make to them, from the initial import, through name changes and deriving new variables, to appending new rows. You can review the changes to see who did what and when, revert to a previous version, \u201cfork\u201d a dataset to make a copy of it, make changes to the copy, and merge those changes back into the original dataset.\n\nThis endpoint returns the most recent action performed. It can be used to know the current dataset revision without having to fetch the entire action list.\n\nSee [Versioning Datasets](https://help.crunch.io/hc/en-us/articles/360044732771-Working-with-Data-and-Datasets#toc32) for more information.\n",
        "operationId": "get-datasets-dataset_id-actions-current",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/08b49eb470a746878892970110638118/actions/since_forking/",
                      "value": {
                        "actions": [
                          {
                            "hash": "000004",
                            "key": "Variable.create",
                            "params": {
                              "definition": {
                                "alias": "var2",
                                "id": "284c9a1665a943c598a4bd33114a59e9",
                                "name": "var2",
                                "type": "text"
                              },
                              "folder_id": "root",
                              "folder_role": 1,
                              "frame": "primary",
                              "owner_id": "",
                              "values": [
                                "sample sentence",
                                "sample sentence",
                                "sample sentence",
                                "sample sentence",
                                "sample sentence"
                              ],
                              "variable": "284c9a1665a943c598a4bd33114a59e9"
                            },
                            "state": {
                              "completed": true,
                              "failed": false,
                              "played": true
                            }
                          },
                          {
                            "hash": "000005",
                            "key": "Variable.delete",
                            "params": {
                              "owner_id": "",
                              "variable": "e7a454110bf4413998605ffbb0c42403"
                            },
                            "state": {
                              "completed": true,
                              "failed": false,
                              "played": true
                            }
                          }
                        ],
                        "dataset": {
                          "id": "08b49eb470a746878892970110638118",
                          "modification_time": "2020-05-20T18:19:43.894000+00:00",
                          "name": "My fork",
                          "revision": "000005"
                        },
                        "upstream": {
                          "id": "b5fca830f57c415ca47b0bd320d7fad8",
                          "modification_time": "2020-05-20T18:19:44.049000+00:00",
                          "name": "New dataset",
                          "revision": "000006"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "actions": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "hash": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": false,
                                "properties": {
                                  "definition": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "alias": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [],
                                    "title": "Definition",
                                    "type": "object"
                                  },
                                  "folder_id": {
                                    "type": "string"
                                  },
                                  "folder_role": {
                                    "type": "integer"
                                  },
                                  "frame": {
                                    "type": "string"
                                  },
                                  "owner_id": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "variable": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "Params",
                                "type": "object"
                              },
                              "state": {
                                "additionalProperties": false,
                                "properties": {
                                  "completed": {
                                    "type": "boolean"
                                  },
                                  "failed": {
                                    "type": "boolean"
                                  },
                                  "played": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [],
                                "title": "State",
                                "type": "object"
                              }
                            },
                            "required": [],
                            "title": "Action",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "dataset": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "modification_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "revision": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Dataset",
                          "type": "object"
                        },
                        "upstream": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "modification_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "revision": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Dataset",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsCurrentGetRequest",
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Most recent action",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/actions/current/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idActionsCurrent = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/current/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/actions/since_forking/": {
      "get": {
        "description": "All Crunch datasets keep track of the changes you make to them, from the initial import, through name changes and deriving new variables, to appending new rows. You can review the changes to see who did what and when, revert to a previous version, fork a dataset to make a copy of it, make changes to the copy, and merge those changes back into the original dataset.\n\nThrough the actions catalog it\u2019s possible to retrieve the differences of a **fork** dataset from its **upstream** dataset. This endpoint returns the state of the fork and the upstream and the the list of actions that were performed on the fork since the two diverged.\n\n**If this dataset is a fork of another dataset**, this endpoint returns a complete list of actions that happened AFTER it was forked from the upstream dataset. In practice it returns the actions that would be played back on the upstream when you merge back the draft into the published dataset. It also returns the dataset ID this dataset was forked from.\n\n**If the dataset is not a fork of another dataset**, this endpoint returns a 404 response.\n\nSee [Versioning Datasets](https://help.crunch.io/hc/en-us/articles/360044732771-Working-with-Data-and-Datasets#toc32) for more information.",
        "operationId": "get-datasets-dataset_id-actions-since_forking",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/08b49eb470a746878892970110638118/actions/since_forking/",
                      "value": {
                        "actions": [
                          {
                            "hash": "000004",
                            "key": "Variable.create",
                            "params": {
                              "definition": {
                                "alias": "var2",
                                "id": "284c9a1665a943c598a4bd33114a59e9",
                                "name": "var2",
                                "type": "text"
                              },
                              "folder_id": "root",
                              "folder_role": 1,
                              "frame": "primary",
                              "owner_id": "",
                              "values": [
                                "sample sentence",
                                "sample sentence",
                                "sample sentence",
                                "sample sentence",
                                "sample sentence"
                              ],
                              "variable": "284c9a1665a943c598a4bd33114a59e9"
                            },
                            "state": {
                              "completed": true,
                              "failed": false,
                              "played": true
                            }
                          },
                          {
                            "hash": "000005",
                            "key": "Variable.delete",
                            "params": {
                              "owner_id": "",
                              "variable": "e7a454110bf4413998605ffbb0c42403"
                            },
                            "state": {
                              "completed": true,
                              "failed": false,
                              "played": true
                            }
                          }
                        ],
                        "dataset": {
                          "id": "08b49eb470a746878892970110638118",
                          "modification_time": "2020-05-20T18:19:43.894000+00:00",
                          "name": "My fork",
                          "revision": "000005"
                        },
                        "upstream": {
                          "id": "b5fca830f57c415ca47b0bd320d7fad8",
                          "modification_time": "2020-05-20T18:19:44.049000+00:00",
                          "name": "New dataset",
                          "revision": "000006"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "actions": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "hash": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": false,
                                "properties": {
                                  "definition": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "alias": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [],
                                    "title": "Definition",
                                    "type": "object"
                                  },
                                  "folder_id": {
                                    "type": "string"
                                  },
                                  "folder_role": {
                                    "type": "integer"
                                  },
                                  "frame": {
                                    "type": "string"
                                  },
                                  "owner_id": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "variable": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "Params",
                                "type": "object"
                              },
                              "state": {
                                "additionalProperties": false,
                                "properties": {
                                  "completed": {
                                    "type": "boolean"
                                  },
                                  "failed": {
                                    "type": "boolean"
                                  },
                                  "played": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [],
                                "title": "State",
                                "type": "object"
                              }
                            },
                            "required": [],
                            "title": "Action",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "dataset": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "modification_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "revision": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Dataset",
                          "type": "object"
                        },
                        "upstream": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "modification_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "revision": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Dataset",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsSinceForkingGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Actions performed on FORKED dataset after fork",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/actions/since_forking/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idActionsSince_forking = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/since_forking/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/actions/upstream_delta/": {
      "get": {
        "description": "If the dataset is a fork, this endpoint returns a list of actions that happened **on the upstream dataset** since the fork was made.",
        "operationId": "get-datasets-dataset_id-actions-since_forking",
        "parameters": [],
        "responses": {},
        "summary": "Actions performed on PARENT dataset after fork",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/actions/upstream_delta/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idActionsSince_forking = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/upstream_delta/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/actions/{action_hash}": {
      "get": {
        "description": "",
        "operationId": "get-datasets-dataset_id-actions-actions_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "hash": "000002",
                        "key": "Source.append",
                        "params": {
                          "excluded_variables": {
                            "excluded": [],
                            "hidden": [],
                            "private": [],
                            "secure": []
                          },
                          "owner_id": "",
                          "source": "57265c45baad4a688b152f2c06c0a772",
                          "varid_prefix": "7FKElC3zdTWKqcEohLPu2L"
                        },
                        "state": {
                          "completed": true,
                          "failed": false,
                          "played": true
                        }
                      },
                      "catalogs": {
                        "since": "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/000002/since/",
                        "tags": "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/000002/tags/"
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/e0d603522c2b4856bb2939ff9d8e01ab/actions/000002/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "hash": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "params": {
                          "additionalProperties": false,
                          "properties": {
                            "excluded_variables": {
                              "additionalProperties": false,
                              "properties": {
                                "excluded": {
                                  "items": {},
                                  "type": "array"
                                },
                                "hidden": {
                                  "items": {},
                                  "type": "array"
                                },
                                "private": {
                                  "items": {},
                                  "type": "array"
                                },
                                "secure": {
                                  "items": {},
                                  "type": "array"
                                }
                              },
                              "required": [],
                              "title": "ExcludedVariables",
                              "type": "object"
                            },
                            "owner_id": {
                              "type": "string"
                            },
                            "source": {
                              "type": "string"
                            },
                            "varid_prefix": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Params",
                          "type": "object"
                        },
                        "state": {
                          "additionalProperties": false,
                          "properties": {
                            "completed": {
                              "type": "boolean"
                            },
                            "failed": {
                              "type": "boolean"
                            },
                            "played": {
                              "type": "boolean"
                            }
                          },
                          "required": [],
                          "title": "State",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "since": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "tags": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsActionsIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Action ZZZZZZ not found"
                      ],
                      "message": "Action ZZZZZZ not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsActionsIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Action details",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/actions/{actions_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idActionsActions_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/{actions_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "A unique hash of the action you are working with",
          "in": "path",
          "name": "action_hash",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/actions/{action_hash}/since": {
      "get": {
        "description": "This endpoint returns a list of all actions performed AFTER the action_hash given.",
        "operationId": "get-datasets-dataset_id-actions-actions_id-since",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/6089fc9d532e425b95e656b3ae788932/actions/000006/": {
                          "datetime": "2020-04-29T23:16:41.712000+00:00",
                          "description": "Variable.make_public",
                          "failures": null,
                          "hash": "000006",
                          "id": "e0af20718f914ce8b26023a8cc55e655",
                          "key": "Variable.make_public",
                          "state": {
                            "completed": true,
                            "failed": false,
                            "played": true
                          },
                          "timestamp": 1588202201.712,
                          "user": "test+4489274@crunch.io"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/6089fc9d532e425b95e656b3ae788932/actions/000005/since/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "https://app.crunch.io/api/datasets/6089fc9d532e425b95e656b3ae788932/actions/000006/": {
                          "additionalProperties": false,
                          "properties": {
                            "datetime": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "failures": {
                              "nullable": true
                            },
                            "hash": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "state": {
                              "additionalProperties": false,
                              "properties": {
                                "completed": {
                                  "type": "boolean"
                                },
                                "failed": {
                                  "type": "boolean"
                                },
                                "played": {
                                  "type": "boolean"
                                }
                              },
                              "required": [],
                              "title": "State",
                              "type": "object"
                            },
                            "timestamp": {
                              "type": "number"
                            },
                            "user": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPIDatasets6089Fc9D532E425B95E656B3Ae788932Actions000006",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsActionsIDSinceGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Action ZZZZZZ not found"
                      ],
                      "message": "Action ZZZZZZ not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsActionsIDSinceGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Actions performed after action X",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/actions/{actions_id}/since/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idActionsActions_idSince = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/{actions_id}/since/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "A unique hash of the action you are working with",
          "in": "path",
          "name": "action_hash",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/actions/{action_hash}/tags": {
      "get": {
        "description": "This endpoint returns a list of all version tags (savepoints) that exist for a specific action, if any. ",
        "operationId": "get-datasets-dataset_id-actions-actions_id-tags",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/ea7cb298186d4b608cc5d87448793312/savepoints/ee3307b714f947a6a25ff811d26498bf/": {
                          "creation_time": "2020-05-20T18:20:19.976000+00:00",
                          "description": "",
                          "last_update": "2020-05-20T18:20:19.976000+00:00",
                          "revert": "https://app.crunch.io/api/datasets/ea7cb298186d4b608cc5d87448793312/savepoints/ee3307b714f947a6a25ff811d26498bf/revert/",
                          "user_name": "captain-8db572b613e368b465a3016592ca09fba69569fff0f98590fcc7a270af7a6938"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/ea7cb298186d4b608cc5d87448793312/actions/000002/tags/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "https://app.crunch.io/api/datasets/ea7cb298186d4b608cc5d87448793312/savepoints/ee3307b714f947a6a25ff811d26498bf/": {
                          "additionalProperties": false,
                          "properties": {
                            "creation_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "last_update": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "revert": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            },
                            "user_name": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPIDatasetsEa7Cb298186D4B608Cc5D87448793312SavepointsEe3307B714F947A6A25Ff811D26498Bf",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsActionsIDTagsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Action ZZZZZZ not found"
                      ],
                      "message": "Action ZZZZZZ not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDActionsActionsIDTagsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "List tags",
        "tags": [
          "Actions"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/actions/{actions_id}/tags/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idActionsActions_idTags = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/actions/{actions_id}/tags/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "A unique hash of the action you are working with",
          "in": "path",
          "name": "action_hash",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/summary/": {
      "get": {
        "description": "This endpoint returns summary information about this dataset containing its number of rows (weighted and unweighted, with and without your applied filters), as well as the number of variables and columns. The column count will differ from the variable count when derived and array variables are present\u2013these variable types don\u2019t necessarily have their own columns of data behind them. The column count is useful for estimating load time and file size when exporting.\n\nIf a filter is included, the \u201cfiltered\u201d counts will be with respect to that expression. If omitted, your applied filters will be used.",
        "operationId": "get-datasets-dataset_id-summary",
        "parameters": [
          {
            "description": "filter",
            "in": "query",
            "name": "filter",
            "schema": {
              "default": "{\"function\":\"==\",\"args\":[{\"variable\":\"https://app.crunch.io/api/datasets/58772f1b724f4e49aa8044f621aafad0/variables/0y76lIEcFJQ35OskK0z9FG000003/\"},{\"value\":2}]}",
              "example": "{\"function\":\"==\",\"args\":[{\"variable\":\"https://app.crunch.io/api/datasets/58772f1b724f4e49aa8044f621aafad0/variables/0y76lIEcFJQ35OskK0z9FG000003/\"},{\"value\":2}]}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/2e02025ad4d74a54a1d64ee558f374a9/summary/",
                      "value": {
                        "columns": 1,
                        "unweighted": {
                          "filtered": 2,
                          "total": 2
                        },
                        "variables": 1,
                        "weighted": {
                          "filtered": 2,
                          "total": 2
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "columns": {
                          "type": "integer"
                        },
                        "unweighted": {
                          "additionalProperties": false,
                          "properties": {
                            "filtered": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          },
                          "required": [],
                          "title": "Weighted",
                          "type": "object"
                        },
                        "variables": {
                          "type": "integer"
                        },
                        "weighted": {
                          "additionalProperties": false,
                          "properties": {
                            "filtered": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          },
                          "required": [],
                          "title": "Weighted",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSummaryGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ZZ9FilterError: Filter error: The 'all' function requires argument 'column' be of type {'class': 'categorical'}.\n"
                      ],
                      "message": "Filter error: The 'all' function requires argument 'column' be of type {'class': 'categorical'}.",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSummaryGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "The path '/api/datasets/9d01c01d14e44ddda2a06fe5c8c5d184/summary/' was not found."
                      ],
                      "message": "The path '/api/datasets/9d01c01d14e44ddda2a06fe5c8c5d184/summary/' was not found.",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSummaryGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Row and column count",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/summary/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idSummary = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/summary/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/table/": {
      "get": {
        "description": "This endpoint returns a `crunch:table` JSON object. The `crunch:table` contains a metadata object describing the dataset variables and an optional data object containing column data for those variables. This endpoint will only include variables that are visible to the user.\n\nThe scope of variables included in the response and the scope of row-data provided can be controlled by query-string parameters.\n\nIf the response contains data values (requested by specifying a `?limit=` value other than 0), that data appears in a data object in the `crunch:table` response. The **data** key is omitted when no data is returned. The data object is a collection of column data arrays keyed by variable-id or URL, depending on the `?key=` setting described above.\n\nDataset viewers can only access the metadata portion of the response. This means they cannot make use of the limit and offset parameters to query data unless the dataset setting viewers_can_export is True, producing a 403 Forbidden response otherwise.",
        "operationId": "get-datasets-dataset_id-table",
        "parameters": [
          {
            "description": "query",
            "in": "query",
            "name": "query",
            "schema": {
              "default": "{\"out\":{\"function\":\"<\",\"args\":[{\"variable\":\"https://app.crunch.io/api/datasets/e7ca134a88734e18b0914510fad002e3/variables/3agLfp2yZneez5bVCbMDCl000003/\"},{\"value\":1}]}}",
              "example": "{\"out\":{\"function\":\"<\",\"args\":[{\"variable\":\"https://app.crunch.io/api/datasets/e7ca134a88734e18b0914510fad002e3/variables/3agLfp2yZneez5bVCbMDCl000003/\"},{\"value\":1}]}}",
              "type": "string"
            }
          },
          {
            "description": "Filter limiting scope of rows in response.",
            "in": "query",
            "name": "filter",
            "schema": {
              "default": "{}",
              "example": "{}",
              "type": "string"
            }
          },
          {
            "description": "Do not include rows prior to this position.",
            "in": "query",
            "name": "offset",
            "schema": {
              "default": "0",
              "example": "0",
              "type": "integer"
            }
          },
          {
            "description": "Include at most this many rows in the response.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": "50000",
              "example": "50000",
              "type": "integer"
            }
          },
          {
            "description": "Specifies the value used to identify each variable and subvariable in the response (the JSON object field name used in the **metadata** object). One of null (omitted) or **url**. When omitted, variables are keyed by their variable-id. When `?key=url` is specified, each variable and subvariable is keyed by its Crunch URL.",
            "in": "query",
            "name": "key",
            "schema": {
              "default": "url",
              "example": "url",
              "type": "string"
            }
          },
          {
            "description": "Include personal variables visible to this user in response.",
            "in": "query",
            "name": "include_personal",
            "schema": {
              "default": "false",
              "example": "True",
              "type": "boolean"
            }
          },
          {
            "description": "When true, include rows otherwise removed by dataset exclusion filter.",
            "in": "query",
            "name": "exclude_exclusion_filter",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "data": {
                        "ea99b416d7844cfe961fc22d5e8c95d2": [
                          [
                            1,
                            1
                          ],
                          [
                            2,
                            2
                          ]
                        ]
                      },
                      "description": "A Crunch Table of data for this dataset.",
                      "element": "crunch:table",
                      "metadata": {
                        "ea99b416d7844cfe961fc22d5e8c95d2": {
                          "alias": "ca1",
                          "categories": [
                            {
                              "id": 1,
                              "missing": false,
                              "name": "A cat",
                              "numeric_value": 1
                            },
                            {
                              "id": 2,
                              "missing": false,
                              "name": "B cat",
                              "numeric_value": 2
                            },
                            {
                              "id": -1,
                              "missing": true,
                              "name": "No Data",
                              "numeric_value": null
                            }
                          ],
                          "derived": false,
                          "description": "",
                          "name": "ca1",
                          "notes": "",
                          "subreferences": {
                            "0001": {
                              "alias": "ca1-0",
                              "name": "X1"
                            },
                            "0002": {
                              "alias": "ca1-1",
                              "name": "X2"
                            }
                          },
                          "subvariables": [
                            "0001",
                            "0002"
                          ],
                          "type": "categorical_array"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/5a989b7a6a894ff685bde0097a075188/table/?limit=2"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "ea99b416d7844cfe961fc22d5e8c95d2": {
                          "items": {
                            "items": {
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "type": "array"
                        }
                      },
                      "title": "Data",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Crunch-table-element"
                    },
                    "metadata": {
                      "additionalProperties": false,
                      "properties": {
                        "variable_id": {
                          "additionalProperties": false,
                          "properties": {
                            "alias": {
                              "description": "More machine-friendly, traditional name for a variable.",
                              "type": "string"
                            },
                            "categories": {
                              "description": "If **type** is categorical, multiple_response, or categorical_array, an array of category definitions. Other types have an empty array.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "description": "identifier for the category, corresponding to values in the column of data.",
                                    "type": "integer"
                                  },
                                  "missing": {
                                    "description": "If true, the given category is marked as missing, and is omitted from most calculations. For logical operations, this makes the category none/null/NA.",
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "description": "A unique label identifying the category.",
                                    "type": "string"
                                  },
                                  "numeric_value": {
                                    "description": "A quantity assigned to this category for numeric aggregation. May be null.",
                                    "type": "integer"
                                  },
                                  "selected": {
                                    "description": "If true, the given category is marked as selected. For logical operations, this makes the category \u201ctrue. Multiple response variables must have at least one category marked as selected and may have more than one.",
                                    "type": "boolean"
                                  }
                                },
                                "title": "Category",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "derived": {
                              "type": "boolean"
                            },
                            "description": {
                              "type": "string"
                            },
                            "name": {
                              "description": "Human-friendly string identifier.",
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "resolution": {
                              "description": "Present in datetime variables; current resolution of data.",
                              "type": "string"
                            },
                            "subreferences": {
                              "additionalProperties": {
                                "additionalProperties": false,
                                "properties": {
                                  "alias": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "Subreference",
                                "type": "object"
                              },
                              "type": "object"
                            },
                            "subvariables": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "type": {
                              "enum": [
                                "numeric",
                                "text",
                                "categorical",
                                "datetime",
                                "categorical_array",
                                "multiple_response"
                              ],
                              "type": "string"
                            }
                          },
                          "title": "Ea99B416D7844Cfe961Fc22D5E8C95D2",
                          "type": "object"
                        }
                      },
                      "title": "Metadata",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDTableGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid parameters"
                      ],
                      "message": "Invalid parameters",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTableGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "List variable definitions",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/table/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idTable = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/table/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "deprecated": true,
        "description": "",
        "operationId": "post-datasets-dataset_id-table",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-001": {
                  "value": {
                    "command": "delete",
                    "filter": {
                      "column": [
                        1,
                        0,
                        0,
                        0
                      ],
                      "type": {
                        "categories": [
                          {
                            "id": 1,
                            "missing": false,
                            "name": "Selected",
                            "numeric_value": 1,
                            "selected": true
                          },
                          {
                            "id": 0,
                            "missing": false,
                            "name": "Other",
                            "numeric_value": 0
                          },
                          {
                            "id": -1,
                            "missing": true,
                            "name": "No Data",
                            "numeric_value": null
                          }
                        ],
                        "class": "categorical"
                      }
                    }
                  }
                },
                "example-003": {
                  "value": {
                    "command": "update",
                    "filter": {
                      "args": [
                        {
                          "args": [],
                          "function": "row"
                        },
                        {
                          "value": 2
                        },
                        {
                          "value": 5
                        }
                      ],
                      "function": "between"
                    },
                    "variables": {
                      "https://app.crunch.io/api/datasets/e496dff8acc34d4e9893b03c446b180a/variables/49125b4db3d146fbb92f1dc3dc576428/": {
                        "value": -1
                      }
                    }
                  }
                },
                "example-004": {
                  "value": {
                    "command": "update",
                    "filter": {
                      "args": [
                        {
                          "variable": "https://app.crunch.io/api/datasets/0df1bff74034475fbd9a2dfc80e21761/variables/4bfc2cbe81c74c4eba2dbeecc2c58d25/"
                        },
                        {
                          "value": 2
                        }
                      ],
                      "function": "=="
                    },
                    "variables": {
                      "https://app.crunch.io/api/datasets/0df1bff74034475fbd9a2dfc80e21761/variables/4bfc2cbe81c74c4eba2dbeecc2c58d25/": {
                        "value": 4
                      }
                    }
                  }
                },
                "example-005": {
                  "value": {
                    "command": "update",
                    "filter": {
                      "args": [
                        {
                          "variable": "https://app.crunch.io/api/datasets/3b5653e907cf447780b88d82ff5791f7/variables/32kQpv2VHnjGF6Aok1qBjl000006/subvariables/0001/"
                        },
                        {
                          "value": 2
                        }
                      ],
                      "function": "=="
                    },
                    "variables": {
                      "https://app.crunch.io/api/datasets/3b5653e907cf447780b88d82ff5791f7/variables/32kQpv2VHnjGF6Aok1qBjl000006/subvariables/0001/": {
                        "value": 6
                      }
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "command": {
                    "enum": [
                      "update",
                      "delete",
                      "cube",
                      "select"
                    ],
                    "title": "Command",
                    "type": "string"
                  },
                  "dimensions": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "variable": {
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Empty",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "filter": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "args": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "column": {
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "title": "ValueElement"
                                    },
                                    "type": "array"
                                  },
                                  "value": {
                                    "type": "integer"
                                  },
                                  "variable": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  }
                                },
                                "title": "ArgArg",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "column": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "function": {
                              "enum": [
                                "row",
                                "in",
                                ">",
                                "<=",
                                "=="
                              ],
                              "title": "Function",
                              "type": "string"
                            },
                            "type": {
                              "additionalProperties": false,
                              "properties": {
                                "class": {
                                  "type": "string"
                                },
                                "value": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "class": {
                                      "type": "string"
                                    }
                                  },
                                  "title": "ValueClass",
                                  "type": "object"
                                }
                              },
                              "title": "ArgType",
                              "type": "object"
                            },
                            "value": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "title": "ValueElement"
                            },
                            "variable": {
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            }
                          },
                          "title": "FilterArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "column": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "function": {
                        "type": "string"
                      },
                      "type": {
                        "additionalProperties": false,
                        "properties": {
                          "categories": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "missing": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "numeric_value": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "nullable": true
                                    }
                                  ]
                                },
                                "selected": {
                                  "type": "boolean"
                                }
                              },
                              "title": "Category",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "class": {
                            "type": "string"
                          }
                        },
                        "title": "FilterType",
                        "type": "object"
                      }
                    },
                    "title": "Filter",
                    "type": "object"
                  },
                  "include_personal": {
                    "type": "boolean"
                  },
                  "measures": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                },
                                "variable": {
                                  "type": "string",
                                  "x-qt-uri-protocols": [
                                    "https"
                                  ]
                                }
                              },
                              "title": "CountArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "title": "Count",
                        "type": "object"
                      }
                    },
                    "title": "Measures",
                    "type": "object"
                  }
                },
                "title": "DatasetsDatasetIDTablePostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "data": {
                        "1985iaIskcwPaOs57s1uaV000000": [
                          1,
                          1,
                          2,
                          1,
                          2,
                          2,
                          1
                        ]
                      },
                      "description": "A Crunch Table of data for this dataset.",
                      "element": "crunch:table",
                      "metadata": {
                        "1985iaIskcwPaOs57s1uaV000000": {
                          "alias": "Gender",
                          "categories": [
                            {
                              "id": 2,
                              "missing": false,
                              "name": "F",
                              "numeric_value": null
                            },
                            {
                              "id": 1,
                              "missing": false,
                              "name": "M",
                              "numeric_value": null
                            },
                            {
                              "id": -1,
                              "missing": true,
                              "name": "No Data",
                              "numeric_value": null
                            }
                          ],
                          "derived": false,
                          "description": "",
                          "name": "Gender",
                          "notes": "",
                          "type": "categorical"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/19263ec7b0fd4fd2bcd7ef7f9425efad/table/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "1985iaIskcwPaOs57s1uaV000000": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "Data",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "type": "string"
                    },
                    "metadata": {
                      "additionalProperties": false,
                      "properties": {
                        "1985iaIskcwPaOs57s1uaV000000": {
                          "additionalProperties": false,
                          "properties": {
                            "alias": {
                              "type": "string"
                            },
                            "categories": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "missing": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "numeric_value": {
                                    "nullable": true
                                  }
                                },
                                "required": [],
                                "title": "Category",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "derived": {
                              "type": "boolean"
                            },
                            "description": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "1985IaIskcwPaOs57S1UaV000000",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Metadata",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTablePostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "202": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValueError: Error executing command: No variable with id '1985iaIskcwPaOs57s1uaV000001 (for variable with id: 1985iaIskcwPaOs57s1uaV000001)\n"
                      ],
                      "message": "Error executing command: No variable with id '1985iaIskcwPaOs57s1uaV000001 (for variable with id: 1985iaIskcwPaOs57s1uaV000001)",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTablePostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Modify variables via ZCL",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/table/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"command\": \"update\",\n  \"filter\": {\n    \"args\": [\n      {\n        \"args\": [],\n        \"function\": \"row\"\n      },\n      {\n        \"value\": 2\n      },\n      {\n        \"value\": 5\n      }\n    ],\n    \"function\": \"between\"\n  },\n  \"variables\": {\n    \"https://app.crunch.io/api/datasets/e496dff8acc34d4e9893b03c446b180a/variables/49125b4db3d146fbb92f1dc3dc576428/\":\n{\n      \"value\": -1\n    }\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idTable = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/table/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n    \"command\": \"update\",\n    \"filter\": {\n      \"args\": [\n        {\n          \"args\": [],\n          \"function\": \"row\"\n        },\n        {\n          \"value\": 2\n        },\n        {\n          \"value\": 5\n        }\n      ],\n      \"function\": \"between\"\n    },\n    \"variables\": {\n      \"https://app.crunch.io/api/datasets/e496dff8acc34d4e9893b03c446b180a/variables/49125b4db3d146fbb92f1dc3dc576428/\":\n{\n        \"value\": -1\n      }\n    }\n   })\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/second_order_analysis/": {
      "get": {
        "description": "This endpoint calculates certain second order analysis measures on a cube specified by the cube query. It can currently be used for the following statistical measures:\n\n* pairwise_significance_tests\n* residual_test_stats\n* columns_std_dev\n* columns_std_err\n\nFor most use cases, it is faster to calculate these metrics using our open-source client libraries such as cr.cube (python) or rcrunch (R) on existing data cubes. This endpoint is more appropriate for web applications to avoid performing complex mathmatical operations in javascript.",
        "operationId": "get-datasets-dataset_id-second_order_analysis",
        "parameters": [
          {
            "description": "cube_method",
            "in": "query",
            "name": "cube_method",
            "schema": {
              "default": "residual_stats",
              "example": "residual_stats",
              "type": "string"
            }
          },
          {
            "description": "slice_idx",
            "in": "query",
            "name": "slice_idx",
            "schema": {
              "default": "null",
              "example": "null",
              "type": "string"
            }
          },
          {
            "description": "params",
            "in": "query",
            "name": "params",
            "schema": {
              "default": "{\"column_idx\":null,\"insertions\":true}",
              "example": "{\"column_idx\":null,\"insertions\":true}",
              "type": "string"
            }
          },
          {
            "description": "query",
            "in": "query",
            "name": "query",
            "schema": {
              "default": "{\"measures\":{\"count\":{\"function\":\"cube_count\",\"args\":[]}},\"dimensions\":[{\"variable\":\"https://app.crunch.io/api/datasets/3e78dab27eba41a3b014edb7ef962dd3/variables/ac62f49fe0944baf8030839227d7cf06/\"},{\"variable\":\"https://app.crunch.io/api/datasets/3e78dab27eba41a3b014edb7ef962dd3/variables/6516786c22f74b4bbf5e7b55543ebd41/\"}],\"weight\":null}",
              "example": "{\"measures\":{\"count\":{\"function\":\"cube_count\",\"args\":[]}},\"dimensions\":[{\"variable\":\"https://app.crunch.io/api/datasets/3e78dab27eba41a3b014edb7ef962dd3/variables/ac62f49fe0944baf8030839227d7cf06/\"},{\"variable\":\"https://app.crunch.io/api/datasets/3e78dab27eba41a3b014edb7ef962dd3/variables/6516786c22f74b4bbf5e7b55543ebd41/\"}],\"weight\":null}",
              "type": "string"
            }
          },
          {
            "description": "filter",
            "in": "query",
            "name": "filter",
            "schema": {
              "default": "[]",
              "example": "[]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/11206d7a770744cebf1d9dbca43d9306/second_order_analysis/?query=%7B%22measures%22%3A+%7B%22count%22%3A+%7B%22function%22%3A+%22cube_count%22%7D%7D%2C+%22dimensions%22%3A+%5B%7B%22variable%22%3A+%22https%3A%2F%2Fapp.crunch.io%2Fapi%2Fdatasets%2F11206d7a770744cebf1d9dbca43d9306%2Fvariables%2F6uC3ZfkBMGseXXyhY3Vbvt000000%2F%22%7D%2C+%7B%22variable%22%3A+%22https%3A%2F%2Fapp.crunch.io%2Fapi%2Fdatasets%2F11206d7a770744cebf1d9dbca43d9306%2Fvariables%2F6uC3ZfkBMGseXXyhY3Vbvt000001%2F%22%7D%5D%7D&cube_method=pairwise_significance_tests&filter=https://app.crunch.io/api/datasets/11206d7a770744cebf1d9dbca43d9306/filters/e38a95698433485294bf2dcd5a47226f/&params=%7B%22column_idx%22%3A+0%7D",
                      "value": {
                        "p_vals": [
                          1,
                          5.253797397131166e-12,
                          1,
                          5.253797397131166e-12
                        ],
                        "shape": [
                          2,
                          2
                        ],
                        "t_stats": [
                          0,
                          6.933122152242311,
                          0,
                          -6.933122152242311
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "p_vals": {
                          "items": {
                            "type": "number"
                          },
                          "type": "array"
                        },
                        "shape": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "t_stats": {
                          "items": {
                            "type": "number"
                          },
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSecondOrderAnalysisGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Cube method not allowed"
                      ],
                      "message": "Cube method not allowed",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSecondOrderAnalysisGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Calculate second order analyses",
        "tags": [
          "Data Cubes"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/second_order_analysis/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idSecond_order_analysis = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/second_order_analysis/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/savepoints/": {
      "get": {
        "description": "This endpoint returns a paginated Shoji Catalog of versions to which the dataset can be reverted.\n\nFor pagination purposes, catalog tuples are sorted from most to least recent. However, since JSON objects are unordered, you cannot rely on the order of the tuples within the payload you receive.",
        "operationId": "get-datasets-dataset_id-savepoints",
        "parameters": [
          {
            "description": "How many versions to skip before returning **limit** versions.",
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 1000,
              "example": "2",
              "type": "integer"
            }
          },
          {
            "description": "How many versions to include in the catalog response.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 0,
              "example": "2",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {},
                      "self": "https://app.crunch.io/api/datasets/abae719fd39b4217a7b32c93592ac218/savepoints/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "version_uri": {
                          "properties": {
                            "creation_time": {
                              "description": "Timestamp for when the version was created.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "description": {
                              "description": "An informative note about the version, as in a commit message.",
                              "type": "string"
                            },
                            "last_update": {
                              "description": "Timestamp for when the version was last updated.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "revert": {
                              "description": "URL to POST to in order to roll back to this version.",
                              "format": "uri",
                              "type": "string"
                            },
                            "user_display_name": {
                              "description": "The name of the user who saved this version.",
                              "type": "string"
                            },
                            "version": {
                              "description": "An internal identifier for the saved version.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDSavepointsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List savepoints",
        "tags": [
          "Savepoints"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/savepoints/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idSavepoints = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/savepoints/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint creates a savepoint and new dataset version. \n\nA successful request will return 201 status with the URL of the newly created version entity in the Location header. If the current user is not an editor of the dataset, it will return a 403 status.",
        "operationId": "post-datasets-dataset_id-savepoints",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "description": "change variable name"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {},
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "description": "An informative note about the version, as in a commit message.",
                        "type": "string"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDSavepointsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/abae719fd39b4217a7b32c93592ac218/savepoints/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSavepointsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created",
            "headers": {
              "Location": {
                "description": "URL of the newly created version entity.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/585f3fd76a0f4fe39e2c4d871e7d98b5/savepoints/",
                      "value": "https://app.crunch.io/api/progress/savepoint_dataset%3A585f3fd76a0f4fe39e2c4d871e7d98b5%24e0c66ed9-9205-48ba-a739-ea58a4d11774/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSavepointsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Create savepoint",
        "tags": [
          "Savepoints"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/savepoints/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"description\": \"change variable name\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idSavepoints = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/savepoints/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"description\": \"change variable name\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/savepoints/{savepoint_id}/": {
      "get": {
        "description": "This endpoint returns details about any give savepoint.",
        "operationId": "get-datasets-dataset_id-savepoints-savepoint_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "creation_time": "2020-05-20T19:49:40.707000+00:00",
                        "description": "",
                        "last_update": "2020-05-20T19:49:40.707000+00:00",
                        "user_name": "captain-271b141dca69bb5534a5a06cd0e9af9313e580f051a25a32c13f54fd823ab5d6",
                        "version": "master__000002"
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/cbaadeaf6f7a472bb7655a3f1c4a5790/savepoints/575a3cfc9c61441f83ee7848ee68ae2f/",
                      "views": {
                        "revert": "https://app.crunch.io/api/datasets/cbaadeaf6f7a472bb7655a3f1c4a5790/savepoints/575a3cfc9c61441f83ee7848ee68ae2f/revert/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "creation_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "last_update": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "user_name": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "revert": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSavepointsSavepointIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Savepoint 46d3622fd1874387b70d69fac73e85a4 not found"
                      ],
                      "message": "Savepoint 46d3622fd1874387b70d69fac73e85a4 not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSavepointsSavepointIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Savepoint details",
        "tags": [
          "Savepoints"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/savepoints/{savepoint_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idSavepointsSavepoint_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/savepoints/{savepoint_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the savepoint you are working with",
          "in": "path",
          "name": "savepoint_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint will update the savepoint's **description**. \n\nA successful request returns 204 status. If the current user is not an editor of the dataset, this endpoint will return a 403 status.",
        "operationId": "patch-datasets-dataset_id-savepoints-savepoint_id",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "description": "new commit message"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "properties": {
                  "body": {
                    "properties": {
                      "description": {
                        "description": "An informative note about the version, as in a commit message.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Update savepoint description",
        "tags": [
          "Savepoints"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/savepoints/{savepoint_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"description\": \"new commit message\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idSavepointsSavepoint_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/savepoints/{savepoint_id}/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"description\": \"new commit message\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/savepoints/{savepoint_id}/revert/": {
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the savepoint you are working with",
          "in": "path",
          "name": "savepoint_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "To roll back to a saved version, POST an empty body to the version\u2019s **revert** URL, found both inside the catalog tuple and in the **views** attribute of the entity. A successful request will return 204 status.\n\nReverting a dataset will not change its current ownership.",
        "operationId": "post-datasets-dataset_id-savepoints-savepoint_id-revert",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item created"
          }
        },
        "summary": "Revert dataset to savepoint",
        "tags": [
          "Savepoints"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/savepoints/{savepoint_id}/revert/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idSavepointsSavepoint_idRevert = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/savepoints/{savepoint_id}/revert/',\n{\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/boxdata/": {
      "get": {
        "description": "This endpoint returns a catalog of all CrunchBoxes associated with a given dataset. \n\nCorresponding CrunchBoxes can be accessed at https://s.crunch.io/widget/index.html#/ds/{boxdata_id}/.",
        "operationId": "get-datasets-dataset_id-boxdata",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/06a397285b184fa095cab176ee6c7d4a/boxdata/487fe2e036cf4726b90b769f2a91e3e2/": {
                          "creation_time": "2020-05-20T18:23:35.482000+00:00",
                          "dataset": "https://app.crunch.io/api/datasets/06a397285b184fa095cab176ee6c7d4a/",
                          "download_url": "file:///tmp/mVAcHT/tmpQgyoqp/public_cube/487fe2e036cf4726b90b769f2a91e3e2/dataset.json",
                          "filters": null,
                          "id": "487fe2e036cf4726b90b769f2a91e3e2",
                          "metadata": {},
                          "revision": "ba6fad4151fa7f34299b5b91263f2559",
                          "user_id": "00e8a54c0f0a43d48a6c076632b8512e",
                          "weight": null,
                          "where": null
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/06a397285b184fa095cab176ee6c7d4a/boxdata/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "dataset_boxdata_url": {
                          "additionalProperties": false,
                          "properties": {
                            "creation_time": {
                              "description": "A timestamp of the date when this CrunchBox was created.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "dataset": {
                              "description": "URL of the dataset associated with the CrunchBox.",
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            },
                            "download_url": {
                              "type": "string"
                            },
                            "filters": {
                              "description": "A Crunch expression indicating which filters to include in the CrunchBox.",
                              "type": "object"
                            },
                            "footer": {
                              "type": "string"
                            },
                            "header": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "metadata": {
                              "properties": {
                                "display_settings": {
                                  "additionalProperties": false,
                                  "description": "Options to customize how it looks and behaves.",
                                  "properties": {
                                    "minBaseSize": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "description": "Suppress display of values in tables or graphs where the sample size is below a given threshold.",
                                          "type": "integer"
                                        }
                                      },
                                      "title": "MinBaseSize",
                                      "type": "object"
                                    },
                                    "palette": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "brand": {
                                          "description": "The CrunchBox interface uses three colors, named Primary, Secondary, and Messages. By default, these are Crunch brand colors of green, blue, and purple. These are used, for example, as the background colors at the top of the interface and the color of the filter selector.",
                                          "properties": {
                                            "messages": {
                                              "description": "Color hex code.",
                                              "type": "string"
                                            },
                                            "primary": {
                                              "description": "Color hex code.",
                                              "type": "string"
                                            },
                                            "secondary": {
                                              "description": "Color hex code.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "category_lookup": {
                                          "description": "You may include an object where keys are exact category names that should always be assigned a specific color. Using semantically resonant colors in this manner is a boon for interpretation and is highly recommended when possible. For example, to ensure that the Green Party is a verdant shade, include a member such as \"Green\": \"#00dd00\". Building a category lookup list requires some attention to the specific categories in a dataset; they must match exactly, and not partially; to ensure that \u201cGreen Party\u201d is also green, include an additional \"Green Party\" key with the same value. Lookup values are processed last, replacing erstwhile static or generated colors.",
                                          "properties": {
                                            "\"another category": {
                                              "description": "Color hex code.",
                                              "type": "string"
                                            },
                                            "\"category name\"": {
                                              "description": "Color hex code.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "static_colors": {
                                          "description": "Include an array of static_colors and every categorical color will be taken from the list in order. If none of your variables have more categories than colors provided here, the base color generator (see above) will never be used, but category lookup will be performed.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "title": "Palette",
                                      "type": "object"
                                    }
                                  },
                                  "title": "DisplaySettings",
                                  "type": "object"
                                },
                                "footer": {
                                  "type": "string"
                                },
                                "header": {
                                  "type": "string"
                                },
                                "notes": {
                                  "type": "string"
                                },
                                "title": {
                                  "description": "A human-friendly identifier.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "revision": {
                              "description": "Dataset revision ID when the box was computed.",
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "user_id": {
                              "type": "string"
                            },
                            "weight": {
                              "description": "URL of the weight to apply, or null for unweighted. If this key is not present, the server uses the currently applied weight of the user making the request.",
                              "type": "string"
                            },
                            "where": {
                              "description": "A Crunch expression indicating which variables to include in the CrunchBox. An undefined value is equivalent to specifying all dataset variables.",
                              "type": "object"
                            }
                          },
                          "title": "HTTPSAppCrunchIoAPIDatasets06A397285B184Fa095Cab176Ee6C7D4ABoxdata487Fe2E036Cf4726B90B769F2A91E3E2",
                          "type": "object"
                        }
                      },
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDBoxdataGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List Crunchboxes",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/boxdata/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idBoxdata = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/boxdata/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "CrunchBoxes allow you to generate an interactive version of of the data analysis for your dataset.\u00a0This is a **public** web interface, and all analyses (Crunch Cubes) are generated at the time of creation, which is why they can take some time to generate for larger datasets.\u00a0\n\nUse this endpoint to create a new CrunchBox. Note that new Crunchbox is only created when there is a new combination of where and filter data. If the same variables and filters are indicated by the POST data, the existing combination will result in a modification of metadata associated with the cube data. This is to keep avoid recomputing analysis needlessly.\n\nA successful POST returns with 202 (Accepted) status, containing a Progress URL in the response body and the URL to the created boxdata entity in the Location header. See Progress for how to handle the response body.\n\nOnce the box has finished computing, the CrunchBox can be accessed at https://s.crunch.io/widget/index.html#/ds/{boxdata_id}/.\n\n### Base colors\nIf the number of categories exceeds the number of static colors, or no static colors are specified, \u201cbase\u201d colors are used to generate a categorical palette. By default, these are also the Crunch green, blue, and purple, and are not overridden by brand. Each color is interpolated in HCL space from itself to Hue + 100, Lightness + 20; and then colors are ordered to maximize sequential absolute distance in Lab* space so adjacent colors can be easily distinguished.\n\nTo customize a CrunchBox\u2019s color scheme, you may include an optional palette member in the display_settings of the body of the request to create or edit the boxdata. There are four types of customization available.",
        "operationId": "post-datasets-dataset_id-boxdata",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "filters": [],
                      "header": "header1",
                      "metadata": {
                        "display_settings": {
                          "minBaseSize": {
                            "value": 10
                          },
                          "palette": {
                            "someColor": "#f3f3f3"
                          }
                        },
                        "notes": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                        "title": "Marital Status by Education"
                      },
                      "title": "Empty Box Title",
                      "variables": [
                        "https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/9b9e9c9224614d5b91c4df695f8dd780/",
                        "https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/cf2cd50a4c544c0f959e5db8815b9558/"
                      ],
                      "weight": null,
                      "where": {
                        "args": [
                          {
                            "map": {
                              "000006": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000006/"
                              },
                              "000007": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000007/"
                              },
                              "47032eca67a8465fbb9e58e20754954f": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/47032eca67a8465fbb9e58e20754954f/"
                              },
                              "a1caf64264b1415aad3cba6345052eff": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/a1caf64264b1415aad3cba6345052eff/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "filters": [
                        {
                          "filter": "https://app.crunch.io/api/datasets/0cb74cfa4af547fa887fac159ba3e90b/filters/0136a4bbb2d84a919a98ea72d5ec0fee/"
                        }
                      ],
                      "weight": "https://app.crunch.io/api/datasets/0cb74cfa4af547fa887fac159ba3e90b/variables/0ecE3CtH65VF8xxSILUsRg000009/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "0ecE3CtH65VF8xxSILUsRg000003": {
                                "variable": "https://app.crunch.io/api/datasets/0cb74cfa4af547fa887fac159ba3e90b/variables/0ecE3CtH65VF8xxSILUsRg000003/"
                              },
                              "e9d46aec7cce4857b9bb6be01a3aa369": {
                                "variable": "https://app.crunch.io/api/datasets/0cb74cfa4af547fa887fac159ba3e90b/variables/e9d46aec7cce4857b9bb6be01a3aa369/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "filters": [
                        {
                          "filter": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/filters/a709099a154448a7871bf35416502a0c/"
                        }
                      ],
                      "metadata": {
                        "display_settings": {
                          "minBaseSize": {
                            "value": 10
                          },
                          "palette": {
                            "someColor": "#f3f3f3"
                          }
                        },
                        "notes": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                        "title": "Marital Status by Education"
                      },
                      "variables": [
                        "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/",
                        "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000008/"
                      ],
                      "weight": null
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "filters": [
                        {
                          "filter": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/filters/e2164724223243c4a4a1a3394661cf6f/"
                        }
                      ],
                      "header": "header1",
                      "title": "title1",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "000006": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000006/"
                              },
                              "000007": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000007/"
                              },
                              "47032eca67a8465fbb9e58e20754954f": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/47032eca67a8465fbb9e58e20754954f/"
                              },
                              "a1caf64264b1415aad3cba6345052eff": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/a1caf64264b1415aad3cba6345052eff/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-5": {
                  "value": {
                    "body": {
                      "filters": [
                        {
                          "filter": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/filters/e2164724223243c4a4a1a3394661cf6f/"
                        }
                      ],
                      "header": "header1",
                      "title": "Updated title",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "000006": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000006/"
                              },
                              "000007": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000007/"
                              },
                              "47032eca67a8465fbb9e58e20754954f": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/47032eca67a8465fbb9e58e20754954f/"
                              },
                              "a1caf64264b1415aad3cba6345052eff": {
                                "variable": "https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/a1caf64264b1415aad3cba6345052eff/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-6": {
                  "value": {
                    "body": {
                      "variables": [
                        "https://app.crunch.io/api/datasets/c472d1bcabfd432fa637cfb56be2e842/folders/ce065787b28b435b81e129e9d2ed8324/",
                        "https://app.crunch.io/api/datasets/c472d1bcabfd432fa637cfb56be2e842/folders/d6092a6d96ea4087a2c600823656a719/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-7": {
                  "value": {
                    "body": {
                      "filters": [
                        {
                          "filter": "https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/filters/d13e0d2201774526b4ae23657cb4c353/"
                        }
                      ],
                      "variables": [
                        "https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/9b9e9c9224614d5b91c4df695f8dd780/",
                        "https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/cf2cd50a4c544c0f959e5db8815b9558/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-8": {
                  "value": {
                    "body": {
                      "title": "Empty Box Title"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-9": {
                  "value": {
                    "body": {
                      "filters": [],
                      "where": {}
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "filters": {
                        "description": "A Crunch expression indicating which **filters** to include.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "filter": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            }
                          },
                          "title": "Filter",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "metadata": {
                        "properties": {
                          "display_settings": {
                            "additionalProperties": false,
                            "description": "Options to customize how it looks and behaves.",
                            "properties": {
                              "minBaseSize": {
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "description": "Suppress display of values in tables or graphs where the sample size is below a given threshold.",
                                    "type": "integer"
                                  }
                                },
                                "title": "MinBaseSize",
                                "type": "object"
                              },
                              "palette": {
                                "additionalProperties": false,
                                "properties": {
                                  "brand": {
                                    "description": "The CrunchBox interface uses three colors, named Primary, Secondary, and Messages. By default, these are Crunch brand colors of green, blue, and purple. These are used, for example, as the background colors at the top of the interface and the color of the filter selector.",
                                    "properties": {
                                      "messages": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "primary": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "secondary": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "category_lookup": {
                                    "description": "You may include an object where keys are exact category names that should always be assigned a specific color. Using semantically resonant colors in this manner is a boon for interpretation and is highly recommended when possible. For example, to ensure that the Green Party is a verdant shade, include a member such as \"Green\": \"#00dd00\". Building a category lookup list requires some attention to the specific categories in a dataset; they must match exactly, and not partially; to ensure that \u201cGreen Party\u201d is also green, include an additional \"Green Party\" key with the same value. Lookup values are processed last, replacing erstwhile static or generated colors.",
                                    "properties": {
                                      "\"another category": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "\"category name\"": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "static_colors": {
                                    "description": "Include an array of static_colors and every categorical color will be taken from the list in order. If none of your variables have more categories than colors provided here, the base color generator (see above) will never be used, but category lookup will be performed.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "Palette",
                                "type": "object"
                              }
                            },
                            "title": "DisplaySettings",
                            "type": "object"
                          },
                          "footer": {
                            "type": "string"
                          },
                          "header": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "title": {
                            "description": "A human-friendly identifier.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "variables": {
                        "description": "Array of URLs pointing to folders or variables to include **Note**: variables and where cannot be used together.",
                        "items": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "type": "array"
                      },
                      "weight": {
                        "description": "URL of a weight variable or null (unweighted); cubes get user\u2019s currently applied weight if this parameter is omitted.",
                        "type": "string"
                      },
                      "where": {
                        "additionalProperties": false,
                        "description": "A Crunch expression indicating which **variables** to include.",
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "map": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "variable": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      }
                                    },
                                    "required": [],
                                    "title": "Map",
                                    "type": "object"
                                  },
                                  "type": "object"
                                }
                              },
                              "title": "Arg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "title": "Where",
                        "type": "object"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDBoxdataPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/06a397285b184fa095cab176ee6c7d4a/boxdata/",
                      "value": "https://app.crunch.io/api/progress/precompute-cubes%3A06a397285b184fa095cab176ee6c7d4a%24b0ec420062064eedb51824dcffda39e0/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBoxdataPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: The request body must be a valid Crunch Expression. filter parameter must be list of objects in form [{'filter': '<filter_url>', ...}]\n"
                      ],
                      "message": "The request body must be a valid Crunch Expression. filter parameter must be list of objects in form [{'filter': '<filter_url>', ...}]",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBoxdataPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create Crunchbox",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/boxdata/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"filters\": [],\n    \"header\": \"header1\",\n    \"metadata\": {\n      \"display_settings\": {\n        \"minBaseSize\": {\n          \"value\": 10\n        },\n        \"palette\": {\n          \"someColor\": \"#f3f3f3\"\n        }\n      },\n      \"notes\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n      \"title\": \"Marital Status by Education\"\n    },\n    \"title\": \"Empty Box Title\",\n    \"variables\": [\n      \"https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/9b9e9c9224614d5b91c4df695f8dd780/\",\n      \"https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/cf2cd50a4c544c0f959e5db8815b9558/\"\n    ],\n    \"weight\": null,\n    \"where\": {\n      \"args\": [\n        {\n          \"map\": {\n            \"000006\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000006/\"\n            },\n            \"000007\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000007/\"\n            },\n            \"47032eca67a8465fbb9e58e20754954f\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/47032eca67a8465fbb9e58e20754954f/\"\n            },\n            \"a1caf64264b1415aad3cba6345052eff\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/a1caf64264b1415aad3cba6345052eff/\"\n            }\n          }\n        }\n      ],\n      \"function\": \"select\"\n    }\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idBoxdata = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/boxdata/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"filters\": [],\n       \"header\": \"header1\",\n       \"metadata\": {\n         \"display_settings\": {\n           \"minBaseSize\": {\n             \"value\": 10\n           },\n           \"palette\": {\n             \"someColor\": \"#f3f3f3\"\n           }\n         },\n         \"notes\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n         \"title\": \"Marital Status by Education\"\n       },\n       \"title\": \"Empty Box Title\",\n       \"variables\": [\n         \"https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/9b9e9c9224614d5b91c4df695f8dd780/\",\n         \"https://app.crunch.io/api/datasets/921d6a48bbab4d6ba74c535b7c1fe8eb/folders/cf2cd50a4c544c0f959e5db8815b9558/\"\n       ],\n       \"weight\": null,\n       \"where\": {\n         \"args\": [\n           {\n             \"map\": {\n               \"000006\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000006/\"\n               },\n               \"000007\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/000007/\"\n               },\n               \"47032eca67a8465fbb9e58e20754954f\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/47032eca67a8465fbb9e58e20754954f/\"\n               },\n               \"a1caf64264b1415aad3cba6345052eff\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/ea7f2e2b5c4b4e1db4fa4609075f4ef3/variables/a1caf64264b1415aad3cba6345052eff/\"\n               }\n             }\n           }\n         ],\n         \"function\": \"select\"\n       }\n     },\n     \"element\": \"shoji:entity\"\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/boxdata/{boxdata_id}/": {
      "delete": {
        "description": "This endpoint deletes a crunchbox if you have privileges to do so.\u00a0 This also deletes all of the public-facing data, so any embedded widgets you have put in other websites will produce a 404 error.",
        "operationId": "delete-datasets-dataset_id-boxdata-boxdata_id",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        },
        "summary": "Delete Crunchbox",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idBoxdataBoxdata_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/',\n{\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "This endpoint retrives the details about one Crunchbox.",
        "operationId": "get-datasets-dataset_id-boxdata-boxdata_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "creation_time": "2020-05-20T18:23:35.482000+00:00",
                        "dataset": "https://app.crunch.io/api/datasets/06a397285b184fa095cab176ee6c7d4a/",
                        "download_url": "file:///tmp/mVAcHT/tmpQgyoqp/public_cube/487fe2e036cf4726b90b769f2a91e3e2/dataset.json",
                        "filters": null,
                        "id": "487fe2e036cf4726b90b769f2a91e3e2",
                        "metadata": {},
                        "revision": "ba6fad4151fa7f34299b5b91263f2559",
                        "user_id": "00e8a54c0f0a43d48a6c076632b8512e",
                        "weight": null,
                        "where": null
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/06a397285b184fa095cab176ee6c7d4a/boxdata/487fe2e036cf4726b90b769f2a91e3e2/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "creation_time": {
                          "description": "When the crunchbox was created.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "dataset": {
                          "description": "URI pointing to the originating dataset.",
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "download_url": {
                          "description": "Where you can find the **tip** of the generated data used by the Crunchbox widget.\u00a0Points to the **dataset** object specifically, which in turn has pointers to all of the other generated files used by the interative\u00a0widget.",
                          "type": "string"
                        },
                        "filters": {
                          "description": "A list of filters selected for use in this dataset. (may be none)",
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Unique identifier for the crunchbox.",
                          "type": "string"
                        },
                        "metadata": {
                          "description": "Metadata related to the crunchbox (title, notes, header, footer).",
                          "properties": {
                            "display_settings": {
                              "additionalProperties": false,
                              "description": "Options to customize how it looks and behaves.",
                              "properties": {
                                "minBaseSize": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "value": {
                                      "description": "Suppress display of values in tables or graphs where the sample size is below a given threshold.",
                                      "type": "integer"
                                    }
                                  },
                                  "title": "MinBaseSize",
                                  "type": "object"
                                },
                                "palette": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "brand": {
                                      "description": "The CrunchBox interface uses three colors, named Primary, Secondary, and Messages. By default, these are Crunch brand colors of green, blue, and purple. These are used, for example, as the background colors at the top of the interface and the color of the filter selector.",
                                      "properties": {
                                        "messages": {
                                          "description": "Color hex code.",
                                          "type": "string"
                                        },
                                        "primary": {
                                          "description": "Color hex code.",
                                          "type": "string"
                                        },
                                        "secondary": {
                                          "description": "Color hex code.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "category_lookup": {
                                      "description": "You may include an object where keys are exact category names that should always be assigned a specific color. Using semantically resonant colors in this manner is a boon for interpretation and is highly recommended when possible. For example, to ensure that the Green Party is a verdant shade, include a member such as \"Green\": \"#00dd00\". Building a category lookup list requires some attention to the specific categories in a dataset; they must match exactly, and not partially; to ensure that \u201cGreen Party\u201d is also green, include an additional \"Green Party\" key with the same value. Lookup values are processed last, replacing erstwhile static or generated colors.",
                                      "properties": {
                                        "\"another category": {
                                          "description": "Color hex code.",
                                          "type": "string"
                                        },
                                        "\"category name\"": {
                                          "description": "Color hex code.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "static_colors": {
                                      "description": "Include an array of static_colors and every categorical color will be taken from the list in order. If none of your variables have more categories than colors provided here, the base color generator (see above) will never be used, but category lookup will be performed.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "title": "Palette",
                                  "type": "object"
                                }
                              },
                              "title": "DisplaySettings",
                              "type": "object"
                            },
                            "footer": {
                              "type": "string"
                            },
                            "header": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "title": {
                              "description": "A human-friendly identifier.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "revision": {
                          "description": "A unique identifier for the Crunchbox that takes into account the variables and filters selected, dataset preferences at the time of creation, and the last modified time of the dataset.\u00a0 This is maintained so that two crunchboxes with exactly the same data creation share the generated boxdata instead of duplicating it.",
                          "type": "string"
                        },
                        "user_id": {
                          "type": "string"
                        },
                        "weight": {
                          "description": "A uri pointing to the weight used during creation of this crunchbox.\u00a0(may be none)",
                          "type": "string"
                        },
                        "where": {
                          "description": "A CrunchCL statement indicating which variables to select.",
                          "type": "object"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDBoxdataBoxdataIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Crunchbox details",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idBoxdataBoxdata_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the boxdata you are working with",
          "in": "path",
          "name": "boxdata_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "PATCH selected body attributes to more selectively update a CrunchBox. Unlike PUT, if PATCHing only metadata attributes, such as title and display_settings, the box data will not be recomputed. If variable or filter selections are modified, then the box will recompute on PATCH.",
        "operationId": "patch-datasets-dataset_id-boxdata-boxdata_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "creation_time": "2020-04-29T23:01:05.455000+00:00",
                      "dataset": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/",
                      "download_url": "//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json",
                      "filters": null,
                      "id": "f86db4ccd7e742a3b860447919b94bc2",
                      "metadata": {
                        "display_settings": {
                          "minBaseSize": {
                            "value": 10
                          },
                          "palette": {
                            "otherColor": "#afafaf",
                            "someColor": "#f3f3f3"
                          }
                        },
                        "notes": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                        "title": "Marital Status by Education"
                      },
                      "revision": "a830a9cc1a105021de6e853361f3d676",
                      "user_id": "4dcf62bb8c62487980cf9b6a0c88cc26",
                      "variables": [
                        "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/",
                        "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/"
                      ],
                      "weight": null,
                      "where": {
                        "args": [
                          {
                            "map": {
                              "1rShaH9qofgeXBWl0SojGA000004": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/"
                              },
                              "1rShaH9qofgeXBWl0SojGA000009": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/"
                              }
                            }
                          },
                          {
                            "value": [
                              "1rShaH9qofgeXBWl0SojGA000009",
                              "1rShaH9qofgeXBWl0SojGA000004"
                            ]
                          }
                        ],
                        "function": "make_frame"
                      }
                    },
                    "element": "shoji:entity",
                    "self": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "creation_time": "2020-04-29T23:01:05.455000+00:00",
                      "dataset": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/",
                      "download_url": "//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json",
                      "filters": null,
                      "id": "f86db4ccd7e742a3b860447919b94bc2",
                      "metadata": {
                        "display_settings": {
                          "minBaseSize": {
                            "value": 10
                          },
                          "palette": {
                            "someColor": "#f3f3f3"
                          }
                        },
                        "notes": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                        "title": "Marital Status by Education"
                      },
                      "revision": "a830a9cc1a105021de6e853361f3d676",
                      "user_id": "4dcf62bb8c62487980cf9b6a0c88cc26",
                      "weight": null,
                      "where": {
                        "args": [
                          {
                            "map": {
                              "1rShaH9qofgeXBWl0SojGA000004": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/"
                              },
                              "1rShaH9qofgeXBWl0SojGA000009": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/"
                              }
                            }
                          },
                          {
                            "value": [
                              "1rShaH9qofgeXBWl0SojGA000009",
                              "1rShaH9qofgeXBWl0SojGA000004"
                            ]
                          }
                        ],
                        "function": "make_frame"
                      }
                    },
                    "element": "shoji:entity",
                    "self": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "creation_time": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "dataset": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "download_url": {
                        "type": "string"
                      },
                      "filters": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "string"
                      },
                      "metadata": {
                        "properties": {
                          "display_settings": {
                            "additionalProperties": false,
                            "description": "Options to customize how it looks and behaves.",
                            "properties": {
                              "minBaseSize": {
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "description": "Suppress display of values in tables or graphs where the sample size is below a given threshold.",
                                    "type": "integer"
                                  }
                                },
                                "title": "MinBaseSize",
                                "type": "object"
                              },
                              "palette": {
                                "additionalProperties": false,
                                "properties": {
                                  "brand": {
                                    "description": "The CrunchBox interface uses three colors, named Primary, Secondary, and Messages. By default, these are Crunch brand colors of green, blue, and purple. These are used, for example, as the background colors at the top of the interface and the color of the filter selector.",
                                    "properties": {
                                      "messages": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "primary": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "secondary": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "category_lookup": {
                                    "description": "You may include an object where keys are exact category names that should always be assigned a specific color. Using semantically resonant colors in this manner is a boon for interpretation and is highly recommended when possible. For example, to ensure that the Green Party is a verdant shade, include a member such as \"Green\": \"#00dd00\". Building a category lookup list requires some attention to the specific categories in a dataset; they must match exactly, and not partially; to ensure that \u201cGreen Party\u201d is also green, include an additional \"Green Party\" key with the same value. Lookup values are processed last, replacing erstwhile static or generated colors.",
                                    "properties": {
                                      "\"another category": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "\"category name\"": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "static_colors": {
                                    "description": "Include an array of static_colors and every categorical color will be taken from the list in order. If none of your variables have more categories than colors provided here, the base color generator (see above) will never be used, but category lookup will be performed.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "Palette",
                                "type": "object"
                              }
                            },
                            "title": "DisplaySettings",
                            "type": "object"
                          },
                          "footer": {
                            "type": "string"
                          },
                          "header": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "title": {
                            "description": "A human-friendly identifier.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "revision": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "variables": {
                        "items": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "type": "array"
                      },
                      "weight": {
                        "nullable": true
                      },
                      "where": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "map": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "variable": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      }
                                    },
                                    "required": [],
                                    "title": "Map",
                                    "type": "object"
                                  },
                                  "type": "object"
                                },
                                "value": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "title": "Arg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "title": "Where",
                        "type": "object"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "self": {
                    "format": "uri",
                    "type": "string",
                    "x-qt-uri-protocols": [
                      "https"
                    ]
                  }
                },
                "title": "DatasetsDatasetIDBoxdataBoxdataIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {},
        "summary": "Selectively update Crunchbox",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"creation_time\": \"2020-04-29T23:01:05.455000+00:00\",\n    \"dataset\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/\",\n    \"download_url\": \"//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json\",\n    \"filters\": null,\n    \"id\": \"f86db4ccd7e742a3b860447919b94bc2\",\n    \"metadata\": {\n      \"display_settings\": {\n        \"minBaseSize\": {\n          \"value\": 10\n        },\n        \"palette\": {\n          \"otherColor\": \"#afafaf\",\n          \"someColor\": \"#f3f3f3\"\n        }\n      },\n      \"notes\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n      \"title\": \"Marital Status by Education\"\n    },\n    \"revision\": \"a830a9cc1a105021de6e853361f3d676\",\n    \"user_id\": \"4dcf62bb8c62487980cf9b6a0c88cc26\",\n    \"variables\": [\n      \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\",\n      \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n    ],\n    \"weight\": null,\n    \"where\": {\n      \"args\": [\n        {\n          \"map\": {\n            \"1rShaH9qofgeXBWl0SojGA000004\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n            },\n            \"1rShaH9qofgeXBWl0SojGA000009\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\"\n            }\n          }\n        },\n        {\n          \"value\": [\n            \"1rShaH9qofgeXBWl0SojGA000009\",\n            \"1rShaH9qofgeXBWl0SojGA000004\"\n          ]\n        }\n      ],\n      \"function\": \"make_frame\"\n    }\n  },\n  \"element\": \"shoji:entity\",\n  \"self\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idBoxdataBoxdata_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"creation_time\": \"2020-04-29T23:01:05.455000+00:00\",\n       \"dataset\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/\",\n       \"download_url\": \"//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json\",\n       \"filters\": null,\n       \"id\": \"f86db4ccd7e742a3b860447919b94bc2\",\n       \"metadata\": {\n         \"display_settings\": {\n           \"minBaseSize\": {\n             \"value\": 10\n           },\n           \"palette\": {\n             \"otherColor\": \"#afafaf\",\n             \"someColor\": \"#f3f3f3\"\n           }\n         },\n         \"notes\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n         \"title\": \"Marital Status by Education\"\n       },\n       \"revision\": \"a830a9cc1a105021de6e853361f3d676\",\n       \"user_id\": \"4dcf62bb8c62487980cf9b6a0c88cc26\",\n       \"variables\": [\n         \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\",\n         \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n       ],\n       \"weight\": null,\n       \"where\": {\n         \"args\": [\n           {\n             \"map\": {\n               \"1rShaH9qofgeXBWl0SojGA000004\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n               },\n               \"1rShaH9qofgeXBWl0SojGA000009\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\"\n               }\n             }\n           },\n           {\n             \"value\": [\n               \"1rShaH9qofgeXBWl0SojGA000009\",\n               \"1rShaH9qofgeXBWl0SojGA000004\"\n             ]\n           }\n         ],\n         \"function\": \"make_frame\"\n       }\n     },\n     \"element\": \"shoji:entity\",\n     \"self\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "put": {
        "description": "PUT a complete entity body to update a CrunchBox. This will register any changes to the variables, filters, and other metadata, and will trigger a recomputation of the box data using the latest data from the dataset if either the variable/filter selection changes or if the dataset\u2019s \u201crevision\u201d has changed since the previous computation. \n\nThis endpoint will replace the selected Crunchbox with any other settings, but will only regenerate the boxdata if the dataset has changed or the settings are different from the crunchbox it replaces.\u00a0 Use the crunchbox PATCH with no arguments if you want to leave the crunchbox settings alone, but regenerate the underlying boxdata because of dataset updates.",
        "operationId": "patch-datasets-dataset_id-boxdata-boxdata_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "creation_time": "2020-04-29T23:01:05.455000+00:00",
                      "dataset": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/",
                      "download_url": "//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json",
                      "filters": null,
                      "id": "f86db4ccd7e742a3b860447919b94bc2",
                      "metadata": {
                        "display_settings": {
                          "minBaseSize": {
                            "value": 10
                          },
                          "palette": {
                            "otherColor": "#afafaf",
                            "someColor": "#f3f3f3"
                          }
                        },
                        "notes": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                        "title": "Marital Status by Education"
                      },
                      "revision": "a830a9cc1a105021de6e853361f3d676",
                      "user_id": "4dcf62bb8c62487980cf9b6a0c88cc26",
                      "variables": [
                        "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/",
                        "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/"
                      ],
                      "weight": null,
                      "where": {
                        "args": [
                          {
                            "map": {
                              "1rShaH9qofgeXBWl0SojGA000004": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/"
                              },
                              "1rShaH9qofgeXBWl0SojGA000009": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/"
                              }
                            }
                          },
                          {
                            "value": [
                              "1rShaH9qofgeXBWl0SojGA000009",
                              "1rShaH9qofgeXBWl0SojGA000004"
                            ]
                          }
                        ],
                        "function": "make_frame"
                      }
                    },
                    "element": "shoji:entity",
                    "self": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "creation_time": "2020-04-29T23:01:05.455000+00:00",
                      "dataset": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/",
                      "download_url": "//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json",
                      "filters": null,
                      "id": "f86db4ccd7e742a3b860447919b94bc2",
                      "metadata": {
                        "display_settings": {
                          "minBaseSize": {
                            "value": 10
                          },
                          "palette": {
                            "someColor": "#f3f3f3"
                          }
                        },
                        "notes": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                        "title": "Marital Status by Education"
                      },
                      "revision": "a830a9cc1a105021de6e853361f3d676",
                      "user_id": "4dcf62bb8c62487980cf9b6a0c88cc26",
                      "weight": null,
                      "where": {
                        "args": [
                          {
                            "map": {
                              "1rShaH9qofgeXBWl0SojGA000004": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/"
                              },
                              "1rShaH9qofgeXBWl0SojGA000009": {
                                "variable": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/"
                              }
                            }
                          },
                          {
                            "value": [
                              "1rShaH9qofgeXBWl0SojGA000009",
                              "1rShaH9qofgeXBWl0SojGA000004"
                            ]
                          }
                        ],
                        "function": "make_frame"
                      }
                    },
                    "element": "shoji:entity",
                    "self": "https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "creation_time": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "dataset": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "download_url": {
                        "type": "string"
                      },
                      "filters": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "string"
                      },
                      "metadata": {
                        "properties": {
                          "display_settings": {
                            "additionalProperties": false,
                            "description": "Options to customize how it looks and behaves.",
                            "properties": {
                              "minBaseSize": {
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "description": "Suppress display of values in tables or graphs where the sample size is below a given threshold.",
                                    "type": "integer"
                                  }
                                },
                                "title": "MinBaseSize",
                                "type": "object"
                              },
                              "palette": {
                                "additionalProperties": false,
                                "properties": {
                                  "brand": {
                                    "description": "The CrunchBox interface uses three colors, named Primary, Secondary, and Messages. By default, these are Crunch brand colors of green, blue, and purple. These are used, for example, as the background colors at the top of the interface and the color of the filter selector.",
                                    "properties": {
                                      "messages": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "primary": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "secondary": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "category_lookup": {
                                    "description": "You may include an object where keys are exact category names that should always be assigned a specific color. Using semantically resonant colors in this manner is a boon for interpretation and is highly recommended when possible. For example, to ensure that the Green Party is a verdant shade, include a member such as \"Green\": \"#00dd00\". Building a category lookup list requires some attention to the specific categories in a dataset; they must match exactly, and not partially; to ensure that \u201cGreen Party\u201d is also green, include an additional \"Green Party\" key with the same value. Lookup values are processed last, replacing erstwhile static or generated colors.",
                                    "properties": {
                                      "\"another category": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      },
                                      "\"category name\"": {
                                        "description": "Color hex code.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "static_colors": {
                                    "description": "Include an array of static_colors and every categorical color will be taken from the list in order. If none of your variables have more categories than colors provided here, the base color generator (see above) will never be used, but category lookup will be performed.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "Palette",
                                "type": "object"
                              }
                            },
                            "title": "DisplaySettings",
                            "type": "object"
                          },
                          "footer": {
                            "type": "string"
                          },
                          "header": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "title": {
                            "description": "A human-friendly identifier.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "revision": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "variables": {
                        "items": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "type": "array"
                      },
                      "weight": {
                        "nullable": true
                      },
                      "where": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "map": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "variable": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      }
                                    },
                                    "required": [],
                                    "title": "Map",
                                    "type": "object"
                                  },
                                  "type": "object"
                                },
                                "value": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "title": "Arg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "title": "Where",
                        "type": "object"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "self": {
                    "format": "uri",
                    "type": "string",
                    "x-qt-uri-protocols": [
                      "https"
                    ]
                  }
                },
                "title": "DatasetsDatasetIDBoxdataBoxdataIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {},
        "summary": "Overwrite Crunchbox",
        "tags": [
          "Crunchbox"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PUT https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"creation_time\": \"2020-04-29T23:01:05.455000+00:00\",\n    \"dataset\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/\",\n    \"download_url\": \"//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json\",\n    \"filters\": null,\n    \"id\": \"f86db4ccd7e742a3b860447919b94bc2\",\n    \"metadata\": {\n      \"display_settings\": {\n        \"minBaseSize\": {\n          \"value\": 10\n        },\n        \"palette\": {\n          \"otherColor\": \"#afafaf\",\n          \"someColor\": \"#f3f3f3\"\n        }\n      },\n      \"notes\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n      \"title\": \"Marital Status by Education\"\n    },\n    \"revision\": \"a830a9cc1a105021de6e853361f3d676\",\n    \"user_id\": \"4dcf62bb8c62487980cf9b6a0c88cc26\",\n    \"variables\": [\n      \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\",\n      \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n    ],\n    \"weight\": null,\n    \"where\": {\n      \"args\": [\n        {\n          \"map\": {\n            \"1rShaH9qofgeXBWl0SojGA000004\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n            },\n            \"1rShaH9qofgeXBWl0SojGA000009\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\"\n            }\n          }\n        },\n        {\n          \"value\": [\n            \"1rShaH9qofgeXBWl0SojGA000009\",\n            \"1rShaH9qofgeXBWl0SojGA000004\"\n          ]\n        }\n      ],\n      \"function\": \"make_frame\"\n    }\n  },\n  \"element\": \"shoji:entity\",\n  \"self\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idBoxdataBoxdata_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/boxdata/{boxdata_id}/',\n{\n   method: 'PUT',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"creation_time\": \"2020-04-29T23:01:05.455000+00:00\",\n       \"dataset\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/\",\n       \"download_url\": \"//t.crunch.io/stable/data/snapshots/cubes/f86db4ccd7e742a3b860447919b94bc2/dataset.json\",\n       \"filters\": null,\n       \"id\": \"f86db4ccd7e742a3b860447919b94bc2\",\n       \"metadata\": {\n         \"display_settings\": {\n           \"minBaseSize\": {\n             \"value\": 10\n           },\n           \"palette\": {\n             \"otherColor\": \"#afafaf\",\n             \"someColor\": \"#f3f3f3\"\n           }\n         },\n         \"notes\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n         \"title\": \"Marital Status by Education\"\n       },\n       \"revision\": \"a830a9cc1a105021de6e853361f3d676\",\n       \"user_id\": \"4dcf62bb8c62487980cf9b6a0c88cc26\",\n       \"variables\": [\n         \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\",\n         \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n       ],\n       \"weight\": null,\n       \"where\": {\n         \"args\": [\n           {\n             \"map\": {\n               \"1rShaH9qofgeXBWl0SojGA000004\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000004/\"\n               },\n               \"1rShaH9qofgeXBWl0SojGA000009\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/variables/1rShaH9qofgeXBWl0SojGA000009/\"\n               }\n             }\n           },\n           {\n             \"value\": [\n               \"1rShaH9qofgeXBWl0SojGA000009\",\n               \"1rShaH9qofgeXBWl0SojGA000004\"\n             ]\n           }\n         ],\n         \"function\": \"make_frame\"\n       }\n     },\n     \"element\": \"shoji:entity\",\n     \"self\": \"https://app.crunch.io/api/datasets/d505b9eb39114e9ebdbbb24eebd619aa/boxdata/f86db4ccd7e742a3b860447919b94bc2/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/stream/": {
      "get": {
        "description": "This endpoint returns the streaming status for this dataset.\n\nWhen a dataset is configured to receive streaming data, the `/datasets/{dataset_id}/stream/` endpoint will accept POST requests to append new rows to the streaming queue.\n\nA dataset is able to receive streaming data while its streaming attribute is set to `streaming`.\n\nWhile a dataset is receiving streams, any other kind of append is disabled returning 409 if attempted. Only streaming data is allowed.\n\nThe following operations are forbidden on a dataset while it is accepting streaming rows in order to protect the schema.\n\n* Deleting public non derived variables\n* Casting variables (Includes changing resolution on datetime variables)\n* Changing variable aliases\n* Deleting categories from categorical variables\n* Changing ID of category IDs\n* Removing subvariables from arrays\n* Merging forks\n* Reverting to savepoints\n* Modifying the Primary Key, once it has been set\n\nTo change the streaming configuration of the dataset, PATCH the entity\u2019s streaming attribute to either `streaming`, `finished`, or `no` according to the following table:\n\n| Value | Allows schema changes | Accepts streaming rows |\n| --- | --- | --- |\n| streaming | No | Yes |\n| finished | No | No |\n| no | Yes | No |\n\nNote that only the dataset maintainer is allowed to modify the streaming attribute.",
        "operationId": "get-datasets-dataset_id-stream",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "pending_messages": 0,
                        "received_messages": 100
                      },
                      "description": "A stream for this Dataset. Each stream acts as a write buffer, from which Sources are periodically made and appended as Batches to the owning Dataset.",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/a175a0b36b0d4dbeafd495a719e58d57/stream/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "pending_messages": {
                          "description": "The number of messages the stream has that have yet to be appended to the dataset (note: a message might contain more than one row, each POST that is made to /datasets/{id}/stream/ will result in a single message).",
                          "type": "integer"
                        },
                        "received_messages": {
                          "description": "The total number of messages that this stream has received.",
                          "type": "integer"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDStreamGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Streaming status",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/stream/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idStream = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/stream/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint allows you to add rows to this dataset if the streaming attribute is enabled on the dataset.\n\nThe payload should be line-delimited JSON where each line corresponds to a row. Each line should be a single JSON object with `variable-alias: value` pairs, one for each variable being set in that row.",
        "operationId": "post-datasets-dataset_id-stream",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-2": {
                  "value": {
                    "age": 28,
                    "caseid": 1
                  }
                },
                "example-3": {
                  "value": {
                    "caseid": 5,
                    "original": 2
                  }
                },
                "example-4": {
                  "value": {
                    "age": 28,
                    "caseid": 1,
                    "profile_marital_stat": 1
                  }
                },
                "example-6": {
                  "value": {
                    "age": 20,
                    "arr_1": 1,
                    "gender": 1,
                    "id": 1,
                    "joined": "2000-01-01T00:00:00",
                    "mr_1": 1,
                    "name": "A"
                  }
                },
                "example-7": {
                  "value": {
                    "age": 21,
                    "arr_1": 2,
                    "gender": 1,
                    "id": 1,
                    "mr_1": 2,
                    "name": "A (updated)"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "title": "DatasetsDatasetIDStreamPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Validation errors:\nline 1: Variable \"my_num\" does not exist"
                      ],
                      "message": "Validation errors:\nline 1: Variable \"my_num\" does not exist",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDStreamPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDStreamPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "summary": "Insert streamed data",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/stream/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"D\": 2,\n  \"WAT\": 0,\n  \"age\": \"not a number\",\n  \"arr_1\": 2,\n  \"caseid\": 10,\n  \"gender\": 1000,\n  \"id\": 2,\n  \"joined\": \"2000-01-02T00:00:00\",\n  \"mr_1\": 2,\n  \"my_num\": 10,\n  \"name\": \"John\",\n  \"original\": 2,\n  \"profile_marital_stat\": 32767\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idStream = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/stream/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"D\": 2,\n     \"WAT\": 0,\n     \"age\": \"not a number\",\n     \"arr_1\": 2,\n     \"caseid\": 10,\n     \"gender\": 1000,\n     \"id\": 2,\n     \"joined\": \"2000-01-02T00:00:00\",\n     \"mr_1\": 2,\n     \"my_num\": 10,\n     \"name\": \"John\",\n     \"original\": 2,\n     \"profile_marital_stat\": 32767\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/multitables/": {
      "get": {
        "description": "This endpoint returns a Shoji Catalog with the collection of multitables available to the current user on this Dataset.\n\nThis index contains two kinds of multitables: those that belong to the dataset, denoted by the is_public tuple attribute; and those that belong to the current user. Personal multitables are those created by the authenticated user, and they cannot be accessed by other users. Dataset multitables are available to all users who are authorized to view the dataset. Only the current dataset editor can create a public multitable.",
        "operationId": "get-datasets-dataset_id-multitables",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of multitable definitions for this dataset",
                      "element": "shoji:catalog",
                      "index": {
                        "/api/datasets/123/multitables/7ab1e/": {
                          "id": "7ab1e",
                          "is_public": false,
                          "name": "Basic Demographics",
                          "owner_id": "/api/users/b055/",
                          "team": "/api/teams/56789/"
                        }
                      },
                      "self": "/api/datasets/123/multitables/",
                      "specification": "/api/specifications/multitables/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "multitable_url": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "is_public": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "owner_id": {
                              "type": "string"
                            },
                            "team": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDMultitablesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List multitables",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/multitables/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idMultitables = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/multitables/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint creates a new multitable definition. Entities must include a name and template; the template must contain a sequence of objects with a query field and optionally a transform field (see Transforming analyses for presentation). If omitted, is_public defaults to false. In similar fashion, team will default to null unless a specific team URL is provided.\n\nFor more information regarding how to create advanced `template` objects, see [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360044737751-Multidimensional-Analysis).\n\nA successful POST yields a 201 (Created) response with a Location header containing the URL of the newly created multitable.\n\nAll users with access to the dataset can create personal multitable definitions; however, only the current dataset editor can create public multitables (is_public: true) which everyone with access to the dataset can see. Attempting to create a public multitable when not the current dataset editor results in a 403 (Forbidden) response.\n\nPublic multitables cannot contain references to secure variables. Attempting to create one results in a 400 response. Hidden variables, however, are permitted.",
        "operationId": "post-datasets-dataset_id-multitables",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "body": {
                      "is_public": true,
                      "multitable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/multitables/33bcc0bdc7fe4a3ead9538526785ccaf/",
                      "name": "my multi",
                      "team": "https://app.crunch.io/api/teams/dc04ca012df54712b2642e8c07aacbbc/",
                      "template": [
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/variables/6sXx5NzZ9CSrWWzqmkVZDg000000/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity",
                    "name": "Multitable",
                    "team": "https://app.crunch.io/api/teams/e1eb1a8a117b43dda24510bc9ed2e164/",
                    "template": [
                      {
                        "query": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/becaffd1de6d48cab2f184fe718c469d/variables/38YP97U8pG4NwTQkKF4kO500000d/subvariables/0004/"
                          }
                        ],
                        "transform": {
                          "categories": [
                            {
                              "name": "renamed"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "example-02": {
                  "value": {
                    "body": {
                      "name": "allpets + q1",
                      "template": [
                        {
                          "query": [
                            {
                              "each": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000000/"
                            },
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000000/"
                                }
                              ],
                              "function": "as_selected"
                            }
                          ]
                        },
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000007/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-03": {
                  "value": {
                    "body": {
                      "name": "rollup(wave, \"M\") + q1",
                      "template": [
                        {
                          "query": [
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000009/"
                                },
                                {
                                  "value": "M"
                                }
                              ],
                              "function": "rollup",
                              "references": {
                                "alias": "rollup(wave, \"M\")",
                                "name": "rollup(wave, \"M\")"
                              }
                            }
                          ]
                        },
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000007/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-04": {
                  "value": {
                    "body": {
                      "name": "petloc + q1",
                      "template": [
                        {
                          "query": [
                            {
                              "each": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000006/"
                            },
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000006/"
                            }
                          ]
                        },
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000007/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-05": {
                  "value": {
                    "body": {
                      "name": "new mt",
                      "template": [
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000002/"
                            }
                          ]
                        },
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000008/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-06": {
                  "value": {
                    "body": {
                      "name": "team multitable",
                      "template": [
                        {
                          "query": [
                            {
                              "each": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000000/"
                            },
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000000/"
                                }
                              ],
                              "function": "as_selected"
                            }
                          ]
                        },
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000007/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-07": {
                  "value": {
                    "body": {
                      "is_public": false,
                      "name": "Multitable",
                      "team": null,
                      "template": [
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/352e8a82228b4779b7bbee0c435c1cfe/variables/4UMPrIkGLLxbhyxtUpGYFq000000/"
                            }
                          ],
                          "transform": {
                            "categories": [
                              {
                                "hide": false,
                                "id": 1,
                                "missing": false,
                                "name": "Admitted"
                              },
                              {
                                "hide": false,
                                "id": 2,
                                "missing": false,
                                "name": "Rejected"
                              },
                              {
                                "hide": true,
                                "id": -1,
                                "missing": true,
                                "name": "No Data"
                              }
                            ]
                          }
                        },
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/352e8a82228b4779b7bbee0c435c1cfe/variables/4UMPrIkGLLxbhyxtUpGYFq000002/"
                            }
                          ],
                          "transform": {
                            "categories": [
                              {
                                "hide": false,
                                "id": 1,
                                "missing": false,
                                "name": "A"
                              },
                              {
                                "hide": false,
                                "id": 2,
                                "missing": false,
                                "name": "B"
                              },
                              {
                                "hide": false,
                                "id": 3,
                                "missing": false,
                                "name": "C"
                              },
                              {
                                "hide": false,
                                "id": 4,
                                "missing": false,
                                "name": "D"
                              },
                              {
                                "hide": false,
                                "id": 5,
                                "missing": false,
                                "name": "E"
                              },
                              {
                                "hide": false,
                                "id": 6,
                                "missing": false,
                                "name": "F"
                              },
                              {
                                "hide": true,
                                "id": -1,
                                "missing": true,
                                "name": "No Data"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-08": {
                  "value": {
                    "body": {
                      "is_public": false,
                      "name": "Test MT",
                      "team": null,
                      "template": [
                        {
                          "query": [
                            {
                              "each": "https://app.crunch.io/api/datasets/851162b9f4124a74b04faeade65287f2/variables/5XIpmoFQOZcfKwFZxLmGAa00000d/"
                            },
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/851162b9f4124a74b04faeade65287f2/variables/5XIpmoFQOZcfKwFZxLmGAa00000d/"
                                }
                              ],
                              "function": "as_selected"
                            }
                          ],
                          "transform": {
                            "elements": [
                              {
                                "hide": false,
                                "id": 1,
                                "missing": false,
                                "name": "Response #1"
                              },
                              {
                                "hide": false,
                                "id": 2,
                                "missing": false,
                                "name": "Response #2"
                              },
                              {
                                "hide": false,
                                "id": 3,
                                "missing": false,
                                "name": "Response #3"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-09": {
                  "value": {
                    "body": {
                      "is_public": false,
                      "name": "Multitable",
                      "team": null,
                      "template": [
                        {
                          "query": [
                            {
                              "each": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/"
                            },
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/"
                                }
                              ],
                              "function": "as_selected"
                            }
                          ],
                          "transform": {
                            "elements": [
                              {
                                "hide": false,
                                "id": 1,
                                "missing": false,
                                "name": "Response #1"
                              },
                              {
                                "hide": false,
                                "id": 2,
                                "missing": false,
                                "name": "Response #2"
                              },
                              {
                                "hide": false,
                                "id": 3,
                                "missing": false,
                                "name": "Response #3"
                              }
                            ]
                          }
                        },
                        {
                          "query": [
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000b/"
                                },
                                {
                                  "value": null
                                }
                              ],
                              "function": "rollup"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-10": {
                  "value": {
                    "body": {
                      "is_public": false,
                      "name": "Multitable Un",
                      "team": null,
                      "template": [
                        {
                          "query": [
                            {
                              "each": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/"
                            },
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/"
                                }
                              ],
                              "function": "as_selected"
                            }
                          ],
                          "transform": {
                            "elements": [
                              {
                                "hide": false,
                                "id": 1,
                                "missing": false,
                                "name": "Response #1"
                              },
                              {
                                "hide": false,
                                "id": 2,
                                "missing": false,
                                "name": "Response #2"
                              },
                              {
                                "hide": false,
                                "id": 3,
                                "missing": false,
                                "name": "Response #3"
                              }
                            ]
                          }
                        },
                        {
                          "query": [
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000b/"
                                },
                                {
                                  "value": null
                                }
                              ],
                              "function": "rollup"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-11": {
                  "value": {
                    "body": {
                      "name": "my multi",
                      "template": [
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/9b2ee44b79d14c1a810597ee0d2cc672/variables/4dNSaYTaaQdYun9ljfg6j8000000/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-12": {
                  "value": {
                    "body": {
                      "name": "my multitable",
                      "template": []
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "is_public": {
                        "type": "boolean"
                      },
                      "multitable": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "name": {
                        "type": "string"
                      },
                      "team": {
                        "anyOf": [
                          {
                            "nullable": true
                          },
                          {
                            "format": "uri",
                            "type": "string",
                            "x-qt-uri-protocols": [
                              "https"
                            ]
                          }
                        ]
                      },
                      "template": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "query": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "args": {
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "anyOf": [
                                            {
                                              "nullable": true
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "variable": {
                                          "format": "uri",
                                          "type": "string",
                                          "x-qt-uri-protocols": [
                                            "https"
                                          ]
                                        }
                                      },
                                      "title": "Arg",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "each": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  },
                                  "filter": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "filter": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      },
                                      "title": {
                                        "type": "string"
                                      }
                                    },
                                    "title": "Filter",
                                    "type": "object"
                                  },
                                  "function": {
                                    "enum": [
                                      "as_selected",
                                      "rollup",
                                      "bin"
                                    ],
                                    "title": "Function",
                                    "type": "string"
                                  },
                                  "references": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "alias": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "title": "References",
                                    "type": "object"
                                  },
                                  "variable": {
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  }
                                },
                                "title": "PurpleQuery",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "transform": {
                              "additionalProperties": false,
                              "properties": {
                                "categories": {
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "hide": {
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "missing": {
                                        "type": "boolean"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "title": "ElementElement",
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "elements": {
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "hide": {
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "missing": {
                                        "type": "boolean"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "title": "ElementElement",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "title": "PurpleTransform",
                              "type": "object"
                            }
                          },
                          "title": "BodyTemplate",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDMultitablesPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Cannot team share because it contains secure variables\n"
                      ],
                      "message": "Cannot team share because it contains secure variables",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Create multitable",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/multitables/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"is_public\": true,\n    \"multitable\": \"https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/multitables/33bcc0bdc7fe4a3ead9538526785ccaf/\",\n    \"name\": \"my multi\",\n    \"team\": \"https://app.crunch.io/api/teams/dc04ca012df54712b2642e8c07aacbbc/\",\n    \"template\": [\n      {\n        \"query\": [\n          {\n            \"variable\": \"https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/variables/6sXx5NzZ9CSrWWzqmkVZDg000000/\"\n          }\n        ]\n      }\n    ]\n  },\n  \"element\": \"shoji:entity\",\n  \"name\": \"Multitable\",\n  \"team\": \"https://app.crunch.io/api/teams/e1eb1a8a117b43dda24510bc9ed2e164/\",\n  \"template\": [\n    {\n      \"query\": [\n        {\n          \"variable\": \"https://app.crunch.io/api/datasets/becaffd1de6d48cab2f184fe718c469d/variables/38YP97U8pG4NwTQkKF4kO500000d/subvariables/0004/\"\n        }\n      ],\n      \"transform\": {\n        \"categories\": [\n          {\n            \"name\": \"renamed\"\n          }\n        ]\n      }\n    }\n  ]\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idMultitables = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/multitables/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"is_public\": true,\n       \"multitable\": \"https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/multitables/33bcc0bdc7fe4a3ead9538526785ccaf/\",\n       \"name\": \"my multi\",\n       \"team\": \"https://app.crunch.io/api/teams/dc04ca012df54712b2642e8c07aacbbc/\",\n       \"template\": [\n         {\n           \"query\": [\n             {\n               \"variable\": \"https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/variables/6sXx5NzZ9CSrWWzqmkVZDg000000/\"\n             }\n           ]\n         }\n       ]\n     },\n     \"element\": \"shoji:entity\",\n     \"name\": \"Multitable\",\n     \"team\": \"https://app.crunch.io/api/teams/e1eb1a8a117b43dda24510bc9ed2e164/\",\n     \"template\": [\n       {\n         \"query\": [\n           {\n             \"variable\": \"https://app.crunch.io/api/datasets/becaffd1de6d48cab2f184fe718c469d/variables/38YP97U8pG4NwTQkKF4kO500000d/subvariables/0004/\"\n           }\n         ],\n         \"transform\": {\n           \"categories\": [\n             {\n               \"name\": \"renamed\"\n             }\n           ]\n         }\n       }\n     ]\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/multitables/{multitable_id}/": {
      "delete": {
        "description": "This endpoint allows you to delete a multitable if you have permission to.",
        "operationId": "delete-datasets-dataset_id-multitables-multitable_id",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete multitable",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idMultitablesMultitable_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/',\n{\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "This endpoint returns detailed information about one multitable, including references to other links to:\n* export\n* applied\n* tabbook\n",
        "operationId": "get-datasets-dataset_id-multitables-multitable_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "display_settings": {},
                        "id": "3651e004a5e54d57b08de4e99324d3fa",
                        "is_public": false,
                        "name": "my multi",
                        "team": "https://app.crunch.io/api/teams/dc04ca012df54712b2642e8c07aacbbc/",
                        "template": [
                          {
                            "query": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/variables/6sXx5NzZ9CSrWWzqmkVZDg000000/"
                              }
                            ]
                          }
                        ],
                        "user": "https://app.crunch.io/api/users/1d2f78211d8b4687bbe4fb8c3f0bb6e6/"
                      },
                      "description": "Detail information for one multitable definition",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/multitables/3651e004a5e54d57b08de4e99324d3fa/",
                      "views": {
                        "applied": "https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/multitables/3651e004a5e54d57b08de4e99324d3fa/applied/",
                        "export": "https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/multitables/3651e004a5e54d57b08de4e99324d3fa/export/",
                        "tabbook": "https://app.crunch.io/api/datasets/066a8e58cf004adfae37959369cedbfc/multitables/3651e004a5e54d57b08de4e99324d3fa/tabbook/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "display_settings": {
                          "additionalProperties": false,
                          "title": "DisplaySettings",
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "team": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "template": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "query": {
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "variable": {
                                      "format": "uri",
                                      "type": "string",
                                      "x-qt-uri-protocols": [
                                        "https"
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "title": "Query",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "required": [],
                            "title": "Template",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "user": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "applied": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "export": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "tabbook": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Multitable details",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idMultitablesMultitable_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the multitable you are working with",
          "in": "path",
          "name": "multitable_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint updates a multitable's `name`, `template`, `team`, or `is_public` attributes. A successful request yields a 204 (No Content) status. \n\nAs with POSTing new entities to the catalog, only the dataset\u2019s current editor can alter `is_public`. Likewise, attempting to set `is_public: true` to a filter containing a secure variable will result in a 400 response.\n\nThe template attribute must contain a valid multitable definition.",
        "operationId": "patch-datasets-dataset_id-multitables-multitable_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "is_public": false,
                      "name": "Multitable Edited",
                      "team": null,
                      "template": [
                        {
                          "query": [
                            {
                              "each": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/"
                            },
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/"
                                }
                              ],
                              "function": "as_selected"
                            }
                          ],
                          "transform": {
                            "elements": [
                              {
                                "hide": false,
                                "id": 1,
                                "missing": false,
                                "name": "Response #1"
                              },
                              {
                                "hide": false,
                                "id": 2,
                                "missing": false,
                                "name": "Response #2"
                              },
                              {
                                "hide": false,
                                "id": 3,
                                "missing": false,
                                "name": "Response #3"
                              }
                            ]
                          }
                        },
                        {
                          "query": [
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000b/"
                                },
                                {
                                  "value": null
                                }
                              ],
                              "function": "rollup"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "template": [
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000002/"
                            }
                          ]
                        },
                        {
                          "query": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/aaba00ba2bd247908bba143a08f7da9a/variables/7421SyabhN6D1ZjwzOCx1n000007/"
                            }
                          ]
                        }
                      ]
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "is_public": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "team": {
                        "nullable": true
                      },
                      "template": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "query": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "variable": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  }
                                },
                                "required": [],
                                "title": "PurpleQuery",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [],
                          "title": "BodyTemplate",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDMultitablesMultitableIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Update multitable",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"is_public\": false,\n    \"name\": \"Multitable Edited\",\n    \"team\": null,\n    \"template\": [\n      {\n        \"query\": [\n          {\n            \"each\": \"https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/\"\n          },\n          {\n            \"args\": [\n              {\n                \"variable\": \"https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/\"\n              }\n            ],\n            \"function\": \"as_selected\"\n          }\n        ],\n        \"transform\": {\n          \"elements\": [\n            {\n              \"hide\": false,\n              \"id\": 1,\n              \"missing\": false,\n              \"name\": \"Response #1\"\n            },\n            {\n              \"hide\": false,\n              \"id\": 2,\n              \"missing\": false,\n              \"name\": \"Response #2\"\n            },\n            {\n              \"hide\": false,\n              \"id\": 3,\n              \"missing\": false,\n              \"name\": \"Response #3\"\n            }\n          ]\n        }\n      },\n      {\n        \"query\": [\n          {\n            \"args\": [\n              {\n                \"variable\": \"https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000b/\"\n              },\n              {\n                \"value\": null\n              }\n            ],\n            \"function\": \"rollup\"\n          }\n        ]\n      }\n    ]\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idMultitablesMultitable_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n      \"is_public\": false,\n      \"name\": \"Multitable Edited\",\n      \"team\": null,\n      \"template\": [\n        {\n          \"query\": [\n            {\n              \"each\": \"https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/\"\n            },\n            {\n              \"args\": [\n                {\n                  \"variable\": \"https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/\"\n                }\n              ],\n              \"function\": \"as_selected\"\n            }\n          ],\n          \"transform\": {\n            \"elements\": [\n              {\n                \"hide\": false,\n                \"id\": 1,\n                \"missing\": false,\n                \"name\": \"Response #1\"\n              },\n              {\n                \"hide\": false,\n                \"id\": 2,\n                \"missing\": false,\n                \"name\": \"Response #2\"\n              },\n              {\n                \"hide\": false,\n                \"id\": 3,\n                \"missing\": false,\n                \"name\": \"Response #3\"\n              }\n            ]\n          }\n        },\n        {\n          \"query\": [\n            {\n              \"args\": [\n                {\n                  \"variable\": \"https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000b/\"\n                },\n                {\n                  \"value\": null\n                }\n              ],\n              \"function\": \"rollup\"\n            }\n          ]\n        }\n      ]\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/multitables/{multitable_id}/applied/": {
      "get": {
        "description": "This endpoint returns a shoji view containing one multitable definition applied to current state of the dataset.",
        "operationId": "get-datasets-dataset_id-multitables-multitable_id-applied",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Detail information for one multitable definition applied to current state of the dataset",
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/c9111eb7f0214cb0b7774ee63bc2e9f7/multitables/bb9519bfc8ec47a589cb125d017d6fa3/applied/",
                      "value": {
                        "display_settings": {},
                        "id": "bb9519bfc8ec47a589cb125d017d6fa3",
                        "is_applied": true,
                        "is_public": false,
                        "name": "my multi",
                        "team": "https://app.crunch.io/api/teams/ed741ff3aa9140f6a49bf240d539e4ea/",
                        "template": [],
                        "user": "https://app.crunch.io/api/users/2c6461ac54f1473c85f99746741b1df0/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "display_settings": {
                          "additionalProperties": false,
                          "title": "DisplaySettings",
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_applied": {
                          "type": "boolean"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "team": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "template": {
                          "items": {},
                          "type": "array"
                        },
                        "user": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDAppliedGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "View applied multitable details",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/applied/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idMultitablesMultitable_idApplied = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/applied/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the multitable you are working with",
          "in": "path",
          "name": "multitable_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/multitables/{multitable_id}/tabbook/": {
      "parameters": [
        {
          "description": "Unique id of the dataset",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique id of the multitable to export",
          "in": "path",
          "name": "multitable_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Exporting a multitable entity produces a \u201ctab-book\u201d, by default an Excel (.xlsx) workbook containing each variable in the dataset cross-tabbed with the specified multitable.\n\nThis endpoint returns a download location to which the exporter will write the generated file (this may take some time for large datasets).\n\nThe server returns a 202 (Accepted) response to a successful POST, indicating the export job has started. The response includes the download URL in its Location header. The response body contains a progress URL which can be accessed (as often as necessary) to monitor the export job status.\n\nClients should note the download URL, monitor progress, and when complete, GET the download location. See Task Progress endpoint for details.\n\nRequesting the same job, if still in progress, will return the same 202 response with the same progress URL; the job is not restarted. If the export is finished, the server responds with 302 (Found), redirecting to the download location.\n\nIf there have been changes on the dataset attributes, a new tab book will be generated regardless of the status of any other pending exports.\n\nAlternatively, you can request a JSON output for your tab book by adding an appropriate Accept request header.\n\n## Available parameters\n\nYou can choose one or more filters for the data, and which variables to include in the tab book. The choice of variables may be expressed either in a machine-friendly form (a where map) or in the more concise variables array. Note that variables can take folder ids as a succinct specifier for groups of variables.\n\n### Filter\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| filter | object | null | Filter by Crunch Expression. Variables used in the filter should be fully-expressed urls. |\n\n\n```\n\"filter\": [\n  {\n    \"filter\": \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/filters/5f14133582f34b8b85b408830f4b4a9b/\"\n  }\n]\n```\n\n### Where\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| where | object | null | Crunch Expression signifying which variables to use. |\n\n\n```\n\"where\": {\n  \"function\": \"select\",\n  \"args\": [\n    {\n      \"map\": {\n        \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000004/\": {\n          \"variable\": \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000004/\"\n        },\n        \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000003/\": {\n          \"variable\": \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000003/\"\n        }\n      }\n    }\n  ]\n}\n```\n\n### Variables\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| variables | array | null | List of variables or folder urls to include. Use this as a simpler way to select the variables to include instead of building a where expression. A folder included in this list will include all variables in that folder and those in all its subfolders. |\n\n```\n\"variables\": [\n   \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/variables/000004/\",\n   \"https://app.crunch.io/api/datasets/45fc0d5ca0a945dab7d05444efa3310a/folders/abcdef/\"\n]\n```\n\n### Weight\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\nweight | URL | null | The weight variable to be used when generating the tabbook. If weight is omitted from the request, the currently selected weight is used. If \u201cnull\u201d is provided, the generated tabbooks will be unweighted. |\n\n### Options\n\n| Parameter | Type | Default | Description |\n| ------ | ---- | ------- | ----------- |\n| options | object | {} | Specifies tabbook layout and data display options. |\n\n```\n\"options\": {\n  \"doc_layout\": {\n    \"toc\": false,\n    \"variable_sheets\": \"many_sheets\"\n  },\n  \"fields\": [\n    \"col_percent\",\n    \"z_score\",\n    \"p_value\",\n    \"count_weighted\"\n  ],\n  \"format\": {\n    \"pval_colors\": false,\n    \"decimal_places\": 1,\n    \"show_empty\": false\n  },\n  \"page_layout\": {\n    \"rows\": {\n      \"top\"\" [\"column_letters\", \"base_weighted\"],\n      \"bottom\": [\"base_unweighted\", \"scale_mean\"]\n    },\n    \"columns\": {\n      \"right\": [\"scale_mean\"]\n    },\n    \"measure_layout\": \"wide\"\n  }\n}\n```\n\n### Options sub-parameters\n\nEach of these top-level option containers is further described in the tables that follow:\n\n| Options sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| doc_layout | object | {} | Define how overall document should be organized. |\n| fields | array | [\u201ccol_percent\u201d] | One or more measures to be displayed in the body of the tab-book. Multiple measures are displayed side-by-side for each body column. |\n| format | object | {} | Define how individual value cells should be displayed. |\n| page_layout | object | {} | Define how individual pages of the document (e.g., worksheets in Excel format) should be displayed. |\n| sig_threshold | number | 0.05 | Level of significance to use for the pairwise_t_test field. |\n\n### Doc_layout sub-parameter\n\nOptions controlling overall organization of exported tab-book (workbook).\n\n| Doc_layout sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| toc | boolean | false | Generate a Table of Contents for the tabbook, to appear as the first worksheet of the Excel workbook. |\n| variable_sheets | string | \u201cmany_sheets\u201d | One of \u201cmany_sheets\u201d or \u201cone_sheet\u201d. The value \u201cmany_sheets\u201d causes each tab to appear on a separate worksheet. The value \u201cone_sheet\u201d causes each tab to be placed on the same worksheet, in a \u201cstack\u201d. |\n\n### Fields sub-parameter\n\nAn array of one or more strings, each specifying a measure to be displayed in the body of each tab. Multiple values are placed side-by-side in successive spreadsheet columns in the order specified.\n\n| Name | Description |\n| --- | --- |\n| col_percent | Proportion, expressed as a percentage, using the column total as its base. |\n| row_percent | Proportion, expressed as a percentage, using the row total as its base. |\n| table_percent | Proportion, expressed as a percentage, using the table total as its base. |\n| z_score | The standardized residual value of each cell from the expected value if rows and columns were independently distributed. |\n| p_value | The two-tailed probability of Z, assuming Z has an approximate standard normal distribution. |\n| pairwise_t_test | Pairwise two-tailed tests that column proportions are equal: All columns are labeled with letters, and letters in cells indicate the larger of pairs where the null hypothesis of equality is rejected at the level _p < sig_threshold_. No adjustment is made for multiple comparisons. |\n| count_weighted | The weighted count in each cell. |\n| count_unweighted | The unweighted count in each cell. |\n| col_index | The index percentage with respect to the column marginal percentage. |\n| population | The estimated population count if a dataset has a defined target population. |\n| col_base_weighted | Total weighted N for each cell, conditioned on the categories of the column variable. (The denominator of col_percent.) |\n| col_base_unweighted | Unweighted N for each cell with respect to the column. |\n| row_base_weighted | Total weighted N for each category of the row variable. (Denominator of row_percent.) |\n| row_base_unweighted | Unweighted N with respect to the row. |\n| table_base_weighted | Total weighted N for table percentages. |\n| table_base_unweighted | Unweighted N for each cell with respect to the total N in both the row and column. |\n\n### Format sub-parameter\n\nOptions controlling the display of individual cells in a tab.\n\n| Format sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| decimal_places | number | 0 | Number of decimal places to display. |\n| pval_colors | boolean | false | Indicate p-value for cell by lighter or darker green or red shading. |\n| show_empty | boolean | false | Display rows and columns having no data. |\n\n### Page_layout sub-parameter\n\nOptions controlling the display of an individual tab \u201ctable\u201d.\n\n| Page_layout sub-parameter | Type | Default | Description |\n| --- | --- | --- | --- |\n| columns | object | {} | Container for column-related options (optional). |\n| measure_layout | string | \u201cwide\u201d | One of \u201cwide\u201d or \u201clong\u201d. Only operative for a multi-measure tabbook. Controls whether multiple measures are displayed side-by-side (wide) or stacked (long). |\n| rows | object | {} | Container for row-related options (optional). Can contain a \u201ctop\u201d array and a \u201cbottom\u201d array which specify header/footer rows to appear; both are optional. \u201ctop\u201d can contain any or all of \u201ccolumn_letters\u201d, \u201cbase_unweighted\u201d, and \u201cbase_weighted\u201d. Ordering of the count summary-rows is respected. \u201cbottom\u201d can contain any or all of \u201cbase_weighted\u201d, \u201cbase_unweighted\u201d, \u201csignificant_columns\u201d, and \u201cscale_mean\u201d. Ordering of the count summary-rows is respected. Specifying either \u201cbase_weighted\u201d or \u201cbase_unweighted\u201d in either the \u201ctop\u201d or \u201cbottom\u201d array will suppress the automatic appearance of a default base summary row at the bottom. (The default base summary row is either the weighted or unweighted base, depending on the measure.) In that case, only explicitly specified count summary-rows will appear. |\n",
        "operationId": "post-datasets-datasetId-multitables-multitableId-tabbook",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:view",
                    "filename": "Admit - Multitable.xlsx",
                    "filter": [
                      {
                        "filter": "https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/d5921637e8a84b4183fc44827f45afd9/"
                      },
                      {
                        "filter": "https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/15a4b1ce09114a559e9d663783ba1acf/"
                      }
                    ],
                    "options": {
                      "doc_layout": {
                        "toc": false,
                        "variable_sheets": "many_sheets"
                      },
                      "fields": [
                        "col_percent",
                        "pairwise_t_test",
                        "z_score",
                        "count_weighted",
                        "count_unweighted",
                        "col_index"
                      ],
                      "format": {
                        "decimal_places": 0,
                        "pval_colors": false,
                        "show_empty": false
                      },
                      "page_layout": {
                        "column_letters": true,
                        "measure_layout": "wide",
                        "rows": {
                          "bottom": [
                            "scale_mean",
                            "significant_columns"
                          ],
                          "top": []
                        }
                      },
                      "sig_threshold": 0.01,
                      "variables": [
                        "7NahwyO8bK9zl3DzFvf1SJ000002"
                      ]
                    },
                    "value": {
                      "args": [
                        {
                          "map": {
                            "08IXAZ5yWlTTOAcXijb3Me000000": {
                              "variable": "08IXAZ5yWlTTOAcXijb3Me000000"
                            }
                          }
                        }
                      ],
                      "function": "select"
                    },
                    "variables": [
                      "https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/",
                      "https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/"
                    ],
                    "weight": "https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/",
                    "where": {
                      "args": [
                        {
                          "map": {
                            "https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/": {
                              "variable": "https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/"
                            }
                          }
                        }
                      ],
                      "function": "select"
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "filename": {
                    "description": "Filename download will be stored to",
                    "type": "string"
                  },
                  "filter": {
                    "description": "Filter by Crunch Expression. Variables used in the filter should be fully-expressed urls.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "filter": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Filter",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "Specifies tabbook layout and data display options.",
                    "properties": {
                      "doc_layout": {
                        "additionalProperties": false,
                        "description": "Define how overall document should be organized.",
                        "properties": {
                          "toc": {
                            "description": "Generate a Table of Contents for the tabbook, to appear as the first worksheet of the Excel workbook.",
                            "type": "boolean"
                          },
                          "variable_sheets": {
                            "default": "one_sheet",
                            "description": "One of \u201cmany_sheets\u201d or \u201cone_sheet\u201d. The value \u201cmany_sheets\u201d causes each tab to appear on a separate worksheet. The value \u201cone_sheet\u201d causes each tab to be placed on the same worksheet, in a \u201cstack\u201d.",
                            "enum": [
                              "many_sheets",
                              "one_sheet"
                            ],
                            "example": "many_sheets",
                            "type": "string"
                          }
                        },
                        "title": "DocLayout",
                        "type": "object"
                      },
                      "fields": {
                        "description": "One or more measures to be displayed in the body of the tab-book. Multiple measures are displayed side-by-side for each body column.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "format": {
                        "additionalProperties": false,
                        "description": "Define how individual value cells should be displayed.",
                        "properties": {
                          "decimal_places": {
                            "description": "Number of decimal places to display.",
                            "type": "integer"
                          },
                          "pval_colors": {
                            "default": "false",
                            "description": "Indicate p-value for cell by lighter or darker green or red shading.",
                            "type": "boolean"
                          },
                          "show_empty": {
                            "default": "false",
                            "description": "Display rows and columns having no data.",
                            "type": "boolean"
                          }
                        },
                        "title": "Format",
                        "type": "object"
                      },
                      "page_layout": {
                        "additionalProperties": false,
                        "description": "Define how individual pages of the document (e.g., worksheets in Excel format) should be displayed.",
                        "properties": {
                          "column_letters": {
                            "description": "Container for column-related options.",
                            "type": "boolean"
                          },
                          "measure_layout": {
                            "default": "wide",
                            "description": "One of \u201cwide\u201d or \u201clong\u201d. Only operative for a multi-measure tabbook. Controls whether multiple measures are displayed side-by-side (wide) or stacked (long).",
                            "enum": [
                              "wide",
                              "long"
                            ],
                            "example": "long",
                            "type": "string"
                          },
                          "rows": {
                            "additionalProperties": false,
                            "description": "Specifying either \u201cbase_weighted\u201d or \u201cbase_unweighted\u201d in either the \u201ctop\u201d or \u201cbottom\u201d array will suppress the automatic appearance of a default base summary row at the bottom. (The default base summary row is either the weighted or unweighted base, depending on the measure.) In that case, only explicitly specified count summary-rows will appear.",
                            "properties": {
                              "bottom": {
                                "description": "Specify which footer values to appear. Can contain any or all of \u201cbase_weighted\u201d, \u201cbase_unweighted\u201d, \u201csignificant_columns\u201d, and \u201cscale_mean\u201d. Ordering of the count summary-rows is respected.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "top": {
                                "description": "Which specify header rows to appear. Can contain any or all of \u201ccolumn_letters\u201d, \u201cbase_unweighted\u201d, and \u201cbase_weighted\u201d. Ordering of the count summary-rows is respected.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "title": "Rows",
                            "type": "object"
                          }
                        },
                        "title": "PageLayout",
                        "type": "object"
                      },
                      "sig_threshold": {
                        "description": "Level of significance to use for the pairwise_t_test field.",
                        "type": "number"
                      },
                      "variables": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "title": "Options",
                    "type": "object"
                  },
                  "value": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "map": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "variable": {
                                      "qt-uri-protocols": [
                                        "https"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "000000",
                                  "type": "object"
                                }
                              },
                              "title": "PurpleMap",
                              "type": "object"
                            }
                          },
                          "title": "ValueArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "function": {
                        "type": "string"
                      }
                    },
                    "title": "Value",
                    "type": "object"
                  },
                  "variables": {
                    "description": "List of variables or folder urls to include. Use this as a simpler way to select the variables to include instead of building a where expression. A folder included in this list will include all variables in that folder and those in all its subfolders.",
                    "items": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "weight": {
                    "description": "The weight variable to be used when generating the tabbook. If weight is omitted from the request, the currently selected weight is used. If \u201cnull\u201d is provided, the generated tabbooks will be unweighted.",
                    "format": "uri",
                    "qt-uri-protocols": [
                      "https"
                    ],
                    "type": "string"
                  },
                  "where": {
                    "additionalProperties": false,
                    "description": "Crunch Expression signifying which variables to use.",
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "map": {
                              "additionalProperties": false,
                              "properties": {
                                "variableURL": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "variable": {
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "title": "000000",
                                  "type": "object"
                                }
                              },
                              "title": "FluffyMap",
                              "type": "object"
                            }
                          },
                          "title": "WhereArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "function": {
                        "default": "select",
                        "enum": [
                          "select"
                        ],
                        "example": "select",
                        "type": "string"
                      }
                    },
                    "title": "Where",
                    "type": "object"
                  }
                },
                "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/multitables/4e4e2188aef7406d8622e0f98a5c7f9d/tabbook/",
                      "value": "https://app.crunch.io/api/progress/success/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: The request body must be a valid Crunch Expression. Invalid body: bad_options\n"
                      ],
                      "message": "The request body must be a valid Crunch Expression. Invalid body: bad_options",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDMultitablesMultitableIDTabbookPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Export multitable",
        "tags": [
          "Multitables"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/tabbook/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:view\",\n  \"filename\": \"Admit - Multitable.xlsx\",\n  \"filter\": [\n    {\n      \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/d5921637e8a84b4183fc44827f45afd9/\"\n    },\n    {\n      \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/15a4b1ce09114a559e9d663783ba1acf/\"\n    }\n  ],\n  \"options\": {\n    \"doc_layout\": {\n      \"toc\": false,\n      \"variable_sheets\": \"many_sheets\"\n    },\n    \"fields\": [\n      \"col_percent\",\n      \"pairwise_t_test\",\n      \"z_score\",\n      \"count_weighted\",\n      \"count_unweighted\",\n      \"col_index\"\n    ],\n    \"format\": {\n      \"decimal_places\": 0,\n      \"pval_colors\": false,\n      \"show_empty\": false\n    },\n    \"page_layout\": {\n      \"column_letters\": true,\n      \"measure_layout\": \"wide\",\n      \"rows\": {\n        \"bottom\": [\n          \"scale_mean\",\n          \"significant_columns\"\n        ],\n        \"top\": []\n      }\n    },\n    \"sig_threshold\": 0.01,\n    \"variables\": [\n      \"7NahwyO8bK9zl3DzFvf1SJ000002\"\n    ]\n  },\n  \"value\": {\n    \"args\": [\n      {\n        \"map\": {\n          \"08IXAZ5yWlTTOAcXijb3Me000000\": {\n            \"variable\": \"08IXAZ5yWlTTOAcXijb3Me000000\"\n          }\n        }\n      }\n    ],\n    \"function\": \"select\"\n  },\n  \"variables\": [\n    \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\",\n    \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\"\n  ],\n  \"weight\": \"https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/\",\n  \"where\": {\n    \"args\": [\n      {\n        \"map\": {\n          \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\":\n{\n            \"variable\": \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\"\n          }\n        }\n      }\n    ],\n    \"function\": \"select\"\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDatasetIdMultitablesMultitableIdTabbook = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/multitables/{multitable_id}/tabbook/',\n{\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:view\",\n     \"filename\": \"Admit - Multitable.xlsx\",\n     \"filter\": [\n       {\n         \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/d5921637e8a84b4183fc44827f45afd9/\"\n       },\n       {\n         \"filter\": \"https://app.crunch.io/api/datasets/dfacaebaf86c4ed1b67497196e5a1550/filters/15a4b1ce09114a559e9d663783ba1acf/\"\n       }\n     ],\n     \"options\": {\n       \"doc_layout\": {\n         \"toc\": false,\n         \"variable_sheets\": \"many_sheets\"\n       },\n       \"fields\": [\n         \"col_percent\",\n         \"pairwise_t_test\",\n         \"z_score\",\n         \"count_weighted\",\n         \"count_unweighted\",\n         \"col_index\"\n       ],\n       \"format\": {\n         \"decimal_places\": 0,\n         \"pval_colors\": false,\n         \"show_empty\": false\n       },\n       \"page_layout\": {\n         \"column_letters\": true,\n         \"measure_layout\": \"wide\",\n         \"rows\": {\n           \"bottom\": [\n             \"scale_mean\",\n             \"significant_columns\"\n           ],\n           \"top\": []\n         }\n       },\n       \"sig_threshold\": 0.01,\n       \"variables\": [\n         \"7NahwyO8bK9zl3DzFvf1SJ000002\"\n       ]\n     },\n     \"value\": {\n       \"args\": [\n         {\n           \"map\": {\n             \"08IXAZ5yWlTTOAcXijb3Me000000\": {\n               \"variable\": \"08IXAZ5yWlTTOAcXijb3Me000000\"\n             }\n           }\n         }\n       ],\n       \"function\": \"select\"\n     },\n     \"variables\": [\n       \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\",\n       \"https://app.crunch.io/api/datasets/86cb0a71e7ec4a3aab87c760cf0a7596/variables/4OgIPORIJal5lUa0BwmbIb00000d/\"\n     ],\n     \"weight\": \"https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/\",\n     \"where\": {\n       \"args\": [\n         {\n           \"map\": {\n             \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\":\n{\n               \"variable\": \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000000/\"\n             }\n           }\n         }\n       ],\n       \"function\": \"select\"\n     }\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/batches/": {
      "get": {
        "description": "Batches are what Crunch uses to import a Source into a Dataset.  Batch objects live for the time it takes to append a source to a dataset and are a place to store information such as progress of a given import.\n\nThis endpoint returns a collection of most recent batches for this Dataset. Each batch is a set of rows which were inserted together. Each tuple in the index includes a \u201cstatus\u201d member, which may be one of \u201cerror\u201d, \u201cimporting\u201d, or \u201cimported\u201d.",
        "operationId": "get-datasets-datasetId-batches",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "A collection of most recent batches for this Dataset. Each batch is a set of rows which were inserted together.",
                      "element": "shoji:catalog",
                      "index": {
                        "https://crunch.io/api/datasets/30e4a9/batches/import_batch%3A30e4a92bca%248b10ae1f-7617/": {
                          "id": "import_batch:30e4a92bca$8b10ae1f-7617",
                          "source_id": "d975ceb03ce64ea99d008fd1ac813a12",
                          "status": "imported"
                        },
                        "https://crunch.io/api/datasets/30e4a9/batches/import_batch%3A30e4a92bca%24954151a1-0920/": {
                          "id": "import_batch:30e4a92bca$954151a1-0920",
                          "source_id": "67a8e45bf1ef42c9b919db49f74a835e",
                          "status": "imported"
                        },
                        "https://crunch.io/api/datasets/30e4a9/batches/import_batch%3A30e4a92bca%24aa3f6b85-8215/": {
                          "id": "import_batch:30e4a92bca$aa3f6b85-8215",
                          "source_id": null,
                          "status": "error"
                        }
                      },
                      "self": "https://crunch.io/api/datasets/30e4a9/batches/",
                      "views": {
                        "compare": "https://alpha.crunch.io/api/datasets/30e4a9/batches/compare/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "source_id": {
                            "nullable": true,
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "compare": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dataset batches",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/batches/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDatasetIdBatches = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/batches/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset the batch exists inside",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Batches are what Crunch uses to import a Source into a Dataset.  Batch objects live for the time it takes to append a source to a dataset and are a place to store information such as progress of a given import.\n\nThis endpoint adds a new batch. The request payload can contain\n\n1. the URL of another dataset,\n1. the URL of a source object, or \n1. a Crunch table definition with variable metadata, row data, or both.\n\nA successful request will return either 201 status, if sufficiently fast, or 202, if the task is large enough to require processing outside of the request cycle. In both cases, the newly created batch entity\u2019s URL is returned in the Location header. The 202 response contains a body with a Progress resource in it; poll that URL for updates on the completion of the append. See Task Progress endpoint.\n\nBatches are created in importing state and will be advanced through imported state if there are no problems. If there was a problem in processing it, its status will be error. Note that the response status code will always be 202 for asynchronous or 201 for synchronous creation of the batch whether there were conflicts or not. So you need to GET the new batch\u2019s URL to see if the data is ready (status imported).\n\nIf an append is already in process on the dataset, the POST request will return 409 status.\n\n### Appending a dataset\nTo append a Dataset, POST a Shoji Entity with a dataset URL. You must have at least view (read) permissions on this dataset. Internally, this action will create a Source entity pointing to that dataset.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"dataset\": \"<url>\"\n  }\n}\n```\n\nThe variables from the incoming dataset to be included by default will depend on the current user\u2019s permissions. Those with edit permissions on the incoming dataset will append all public and hidden (discarded = true) variables. Those with only view permissions will just include public variables that aren\u2019t hidden.\n\nTo append only certain variables from the incoming dataset, include an where attribute in the entity body. See Frame functions for how to compose the where expression.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"dataset\": \"<url>\",\n      \"where\": {\n          \"function\":\"select\",\n          \"args\": [\n                {\"map\":\n                    {\"000001\": {\"variable\": \"<url>\"},\n                     \"000002\": {\"variable\": \"<url>\"}}\n                }\n          ]\n      }\n  }\n}\n```\n\n**For more information about how to construct the WHERE filter, see [Frame functions](https://docs.crunch.io/feature-guide/feature-appending.html?highlight=frame#transformations-during-combination).**\n\nUsers with edit permissions on the incoming dataset can select hidden variables to be included, but viewers cannot. Editors and viewers can however both specify their personal variables to be included.\n\nTo select a subset of rows to append, include an filter attribute in the entity body, containing a Crunch filter expression.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"dataset\": \"<url>\",\n      \"where\": {\n          \"function\":\"select\",\n          \"args\": [\n                {\"map\":\n                    {\"000001\": {\"variable\": \"<url>\"},\n                     \"000002\": {\"variable\": \"<url>\"}}\n                }\n          ]\n      },\n      \"filter\": {\n          \"function\":\"<\",\n          \"args\": [\n                {\"variable\": \"<url>\"},\n                {\"value\": \"<value>\"}\n          ]\n      }\n  }\n}\n```\n\n### Appending a source\nPOST a Shoji Entity with a Source URL. The user must have permission to view the Source entity. Use Source appending to send data in CSV format that matches the schema of the Dataset.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n      \"source\": \"<url>\"\n  }\n}\n```\n\n### Append Failures\nFor single appends, if a batch fails, the dataset will be automatically reverted back to the state it was before the append; the batch is automatically deleted.\n\nWhen multiple appends are performed in immediate succession, it\u2019s not efficient to checkpoint the state of each one. In this case, only the first append is rolled back on failure.",
        "operationId": "post-datasets-datasetId-batches",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "body": {
                      "source": "https://app.crunch.io/api/sources/4ef7250316424ca38438781454e88097/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-02": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "522IJqcRL9iAJ82ruPHqb1000000": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000000/"
                              },
                              "522IJqcRL9iAJ82ruPHqb1000003": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000003/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-03": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/",
                      "filter": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000001/"
                          },
                          {
                            "value": 10
                          }
                        ],
                        "function": "<"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-04": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/",
                      "filter": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000001/"
                          },
                          {
                            "value": 10
                          }
                        ],
                        "function": "<"
                      },
                      "where": {
                        "args": [
                          {
                            "map": {
                              "522IJqcRL9iAJ82ruPHqb1000000": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000000/"
                              },
                              "522IJqcRL9iAJ82ruPHqb1000003": {
                                "variable": "https://app.crunch.io/api/datasets/b9712d18826349a6bb6e7802e0ab3b98/variables/522IJqcRL9iAJ82ruPHqb1000003/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-05": {
                  "value": {
                    "body": {
                      "stream": null,
                      "type": "ldjson"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-06": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "6FYlrpClfS6m8O7PyIZ9Z0000000": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000000/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000001": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000001/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000002": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000002/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000003": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000003/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000004": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000004/"
                              },
                              "6FYlrpClfS6m8O7PyIZ9Z0000005": {
                                "variable": "https://app.crunch.io/api/datasets/349dc4d6f26c4444b0e8134b05fb4a68/variables/6FYlrpClfS6m8O7PyIZ9Z0000005/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-07": {
                  "value": {
                    "body": {
                      "url": "s3://testing-crunch-io/example-dataset.csv"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-08": {
                  "value": {
                    "autorollback": true,
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000000/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000000/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000002/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000002/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000003/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK000003/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000a/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000a/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000b/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000b/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000c/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000c/"
                              },
                              "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000d/": {
                                "variable": "https://app.crunch.io/api/datasets/89db722f295844298d8396c01822cd18/variables/4jXEcRvn5vINk5FGrPctiK00000d/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      },
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": true
                  }
                },
                "example-09": {
                  "value": {
                    "body": {
                      "source": "https://app.crunch.io/api/sources/574da9061383498bac46ae63107f1ace/",
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": false
                  }
                },
                "example-10": {
                  "value": {
                    "body": {
                      "schema": "https://app.crunch.io/api/sources/e56262704e744942805b8a456c8c1ffd/",
                      "source": "https://app.crunch.io/api/sources/0ebf5e32c63b4e01b7756c75f1e61758/",
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": false
                  }
                },
                "example-11": {
                  "value": {
                    "body": {
                      "description": "Created automatically.",
                      "name": "Stream data for dataset a891505a542d4b3bb360adc83f515acf",
                      "stream": null,
                      "type": "ldjson"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-12": {
                  "value": {
                    "autorollback": false,
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/37780ae919034f5c8a5df9d85052a0e1/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-13": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/7UDGSYWUXDJ3tTlSX37GrC000000/": {
                                "variable": "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/7UDGSYWUXDJ3tTlSX37GrC000000/"
                              },
                              "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/8c1802f49fdf407e8d7020ede39df247/": {
                                "variable": "https://app.crunch.io/api/datasets/7f19e195995945e584909e3ee0c0ddb5/variables/8c1802f49fdf407e8d7020ede39df247/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-14": {
                  "value": {
                    "autorollback": true,
                    "body": {
                      "source": "https://app.crunch.io/api/sources/6c09b371a6d4461598455b417022610c/",
                      "workflow": []
                    },
                    "element": "shoji:entity",
                    "savepoint": true
                  }
                },
                "example-15": {
                  "value": {
                    "body": {
                      "dataset": "https://app.crunch.io/api/datasets/e5b511a459af42c19b0676805ddee064/",
                      "where": {
                        "args": [
                          {
                            "map": {
                              "36rAczfqfP1kyp2J1Ctsr0000000": {
                                "variable": "36rAczfqfP1kyp2J1Ctsr0000000"
                              },
                              "36rAczfqfP1kyp2J1Ctsr0000001": {
                                "variable": "36rAczfqfP1kyp2J1Ctsr0000001"
                              }
                            }
                          }
                        ],
                        "frame": {
                          "args": [
                            {
                              "map": {
                                "36rAczfqfP1kyp2J1Ctsr0000000": {
                                  "variable": "36rAczfqfP1kyp2J1Ctsr0000000"
                                },
                                "36rAczfqfP1kyp2J1Ctsr0000001": {
                                  "variable": "36rAczfqfP1kyp2J1Ctsr0000001"
                                },
                                "de61cf8c6f06485495f529c8b1fe60c6": {
                                  "variable": "de61cf8c6f06485495f529c8b1fe60c6"
                                }
                              }
                            }
                          ],
                          "function": "select"
                        },
                        "function": "select"
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "autorollback": {
                    "type": "boolean"
                  },
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "map": {
                              "additionalProperties": {
                                "additionalProperties": false,
                                "properties": {
                                  "variable": {
                                    "qt-uri-protocols": [
                                      "https"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "MapValue",
                                "type": "object"
                              },
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "BodyArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "dataset": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "filter": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                },
                                "variable": {
                                  "format": "uri",
                                  "qt-uri-protocols": [
                                    "https"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [],
                              "title": "FilterArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Filter",
                        "type": "object"
                      },
                      "function": {
                        "enum": [
                          "make_frame",
                          "select"
                        ],
                        "title": "Function",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "source": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "stream": {
                        "nullable": true,
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "where": {
                        "type": "object"
                      },
                      "workflow": {
                        "type": "array"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "savepoint": {
                    "type": "boolean"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDBatchesPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/7548d6652a5e47a183ce9c639763554f/batches/",
                      "value": "https://app.crunch.io/api/progress/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "CrunchUserError: Access Denied\n"
                      ],
                      "message": "Access Denied",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          },
          "409": {
            "description": "Dataset append already in progress"
          }
        },
        "summary": "Add data to a dataset",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/batches/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"source\": \"https://app.crunch.io/api/sources/4ef7250316424ca38438781454e88097/\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDatasetIdBatches = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/batches/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"source\": \"https://app.crunch.io/api/sources/4ef7250316424ca38438781454e88097/\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/batches/compare/": {
      "get": {
        "description": "A dataset append cannot proceed if there are any conditions in the involved datasets that will cause ambiguous situations. If such datasets were to be appended the server will return a 409 response.\n\nIt is possible to detect potential conflicts before trying the append using the batches compare endpoint. This endpoint tests for potential conflicts between this and another dataset before appending. \n\nIf the response contains an empty body object it means no conflicts were detected. Otherwise, the possible keys in the conflicts and verifications made are:\n\n* **Variables missing alias**: All variables should have a valid alias string.\n* **Variables missing name**: All variables should have a valid name string.\n* **Variables with duplicate alias**: In the event of two or more variables sharing an alias, they will be reported here. When this occurs as a union conflict, it is likely that names and aliases of a variable or subvariable in current and incoming are swapped (e.g., VariantOne:AliasOne, Variant1:Alias1 in current but VariantOne:Alias1, Variant1:AliasOne in incoming).\n* **Variables with duplicate name**: Variable names should be unique across non subvariables.\n* **Subvariable in different arrays per dataset**: If a subvariable is used for different arrays that are impossible to match, it will be reported here. User action will be needed to fix this.\n\nFor each of these, a list of variable IDs will be made available indicating the conflicting entities. Union conflicting ids generally refer to variables in the current dataset and may be referenced by alias in incoming.\n",
        "operationId": "get-datasets-dataset_id-batches-batch_id",
        "parameters": [
          {
            "description": "Full entity url of the dataset you want to compare with",
            "in": "query",
            "name": "dataset",
            "schema": {
              "default": "https://app.crunch.io/api/datasets/91beba20a20547f7bd9c852368cb12b5/",
              "example": "https://app.crunch.io/api/datasets/91beba20a20547f7bd9c852368cb12b5/",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Tests for potential conflicts between this and other dataset before appending",
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/53929bc8ae044c029b67cee3d1b7b13a/batches/compare/?dataset=http://app.crunch.io/api/datasets/18fed9701d234cc3bb551cc903323e11/",
                      "value": {}
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "properties": {
                        "current": {
                          "description": "Conflicts on the dataset where the new data would be added.",
                          "type": "object"
                        },
                        "incoming": {
                          "description": "Issues on the far dataset that contains the new data being added.",
                          "type": "object"
                        },
                        "union": {
                          "description": "Conflicts on the combined variables/metadata that would exist after the data is appended.",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-view"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Test append before executing",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/batches/compare/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idBatchesBatch_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/batches/compare/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/batches/{batch_id}/": {
      "delete": {
        "description": "",
        "operationId": "delete-datasets-dataset_id-batches-batch_id",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Can only drop failed batches"
                      ],
                      "message": "Can only drop failed batches",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesBatchIDDeleteRequest",
                  "type": "object"
                }
              }
            },
            "description": "Deletion failed - item in use"
          }
        },
        "summary": "Delete batch",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/batches/{batch_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idBatchesBatch_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/batches/{batch_id}/',\n{\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "This endpoint retrieves the details about one import batch. Each batch is a set of rows/responses for one dataset which were inserted together.",
        "operationId": "get-datasets-dataset_id-batches-batch_id",
        "parameters": [
          {
            "description": "dataset",
            "in": "query",
            "name": "dataset",
            "schema": {
              "default": "https://app.crunch.io/api/datasets/91beba20a20547f7bd9c852368cb12b5/",
              "example": "https://app.crunch.io/api/datasets/91beba20a20547f7bd9c852368cb12b5/",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "conflicts": {},
                        "error": "",
                        "id": "import_batch:7548d6652a5e47a183ce9c639763554f$453d18a2-f4ae-40b9-90f1-8086233c5112",
                        "progress": 100,
                        "source": "https://app.crunch.io/api/sources/2788281facb649388f8dac7bb5013b54/",
                        "source_children": {},
                        "source_columns": 7,
                        "source_rows": 52344,
                        "status": "imported",
                        "target_children": {},
                        "target_columns": 7,
                        "target_rows": 52344,
                        "traceback": ""
                      },
                      "description": "A batch for this Dataset. Each batch is a set of rows which were inserted together.",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/7548d6652a5e47a183ce9c639763554f/batches/import_batch%3A7548d6652a5e47a183ce9c639763554f%24453d18a2-f4ae-40b9-90f1-8086233c5112/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "conflicts": {
                          "additionalProperties": false,
                          "title": "Conflicts",
                          "type": "object"
                        },
                        "error": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "progress": {
                          "type": "integer"
                        },
                        "source": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "source_children": {
                          "additionalProperties": false,
                          "title": "Conflicts",
                          "type": "object"
                        },
                        "source_columns": {
                          "type": "integer"
                        },
                        "source_rows": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "target_children": {
                          "additionalProperties": false,
                          "title": "Conflicts",
                          "type": "object"
                        },
                        "target_columns": {
                          "type": "integer"
                        },
                        "target_rows": {
                          "type": "integer"
                        },
                        "traceback": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesBatchIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid dataset url\n"
                      ],
                      "message": "Invalid dataset url",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesBatchIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDBatchesBatchIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Batch details",
        "tags": [
          "Import Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/batches/{batch_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idBatchesBatch_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/batches/{batch_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the batch you are working with",
          "in": "path",
          "name": "batch_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/": {
      "get": {
        "deprecated": true,
        "description": "A Dataset is the primary container of statistical data in Crunch. Each dataset contains a collection of variables, from which analyses can be composed and then saved and exported. These analyses may include filters, which a user can define and save. A user can also share a dataset with another user.\n\nData is added to a dataset as a batch. A new dataset may be created empty (have zero data batches), or dataset creation and adding the first data batch may be combined in certain import operations. In either case, additional batches can be appended to datasets. Similarly, variables from other datasets can be joined onto a dataset.\n\nAs with other Crunch objects, references to the dataset entities available to a user are provided in a catalog. Multiple endpoint-methods described below return a dataset catalog, which may be filtered and/or organized in a hierarchy, depending on the method.\n\nWhen authenticated, this endpoint returns a Shoji Catalog of the datasets to which the authenticated user has access.\n\nA user may have access to a dataset because someone has shared it directly with him, or because someone has shared it with a team of which he is a member. If a user has access to a dataset from different sources, be it by multiple teams or by direct sharing, the final permissions they have on the dataset will be the maximum of all the permissions granted.\n\n### Drafts\nA dataset marked as `is_published: false` can only be accessed by dataset editors. They will still be available on the catalog for all shared users but API clients should know to display these to the appropriate users.\n\nThe is_published flag of a dataset can be changed by editors from the catalog or directly on the dataset entity.\n\n### Dataset properties\n| Name | Type | Default | Description |\n| ---- | ---- | ------- | ----------- |\n| name | string |   | Required. The name of the dataset |\n| description | string | \"\" | A longer description of the dataset's |\n| id | string |   | The dataset id |\n| archived | bool | false | Whether the dataset is \"archived\" or active |\n| account | URL |   | URL of the account entity that owns the dataset |\n| permissions | object | {\"edit\": false} | Authorizations on this dataset; see Permissions |\n| owner_id | URL |   | URL of the user entity of the dataset's owner (Yourself or a project) |\n| owner_name | string | \"\" | The owner's name, for display |\n| size | object | {\"rows\": 0, \"columns\": 0, \"unfiltered_rows\": 0} | Dimensions of the dataset |\n| creation_time | ISO-8601 string |   | Datetime at which the dataset was created in Crunch |\n| modification_time | ISO-8601 string |   | Datetime of the last modification for this dataset globally |\n| start_date | ISO-8601 string |   | Date/time for which the data in the dataset corresponds |\n| end_date | ISO-8601 string |   | End date/time of the dataset's data, defining a start_date:end_date range |\n| streaming | string |   | Possible values \"no\", \"finished\", and \"streaming\" to enable/disable streaming |\n| current_editor | URL or null |   | URL of the user entity that is currently editing the dataset, or null if there is no current editor |\n| current_editor_name | string or null |   | That user's name, for display |\n| is_published | boolean | true | Indicates if the dataset is published to viewers or not |",
        "operationId": "get-datasets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "value": {
                        "catalogs": {
                          "by_name": "https://app.crunch.io/api/datasets/by_name/{name}/",
                          "match": "https://app.crunch.io/api/datasets/match/"
                        },
                        "description": "Catalog of Datasets that belong to this user",
                        "element": "shoji:catalog",
                        "index": {
                          "https://app.crunch.io/api/datasets/038cf018200c4f459f3a6b901be840fc/": {
                            "access_time": "2016-03-21T20:10:04.215000+00:00",
                            "account": "https://app.crunch.io/api/accounts/00001/",
                            "archived": false,
                            "creation_time": "2016-03-21T20:09:51.947000+00:00",
                            "current_editor": "https://app.crunch.io/api/users/00002/",
                            "current_editor_name": "Jean-Luc Picard",
                            "description": "",
                            "end_date": "2016-03-21T20:01:22.711000+00:00",
                            "id": "038cf018200c4f459f3a6b901be840fc",
                            "is_published": true,
                            "modification_time": "2018-06-05T21:49:25.576000+00:00",
                            "name": "Face with cold sweat",
                            "owner_id": "https://app.crunch.io/api/users/00002/",
                            "owner_name": "Jean-Luc Picard",
                            "permissions": {
                              "edit": true,
                              "view": true
                            },
                            "size": {
                              "columns": 8,
                              "rows": 6,
                              "unfiltered_rows": 200
                            },
                            "start_date": "2016-03-21T20:01:22.711000+00:00",
                            "streaming": "no",
                            "view_of": "https://app.crunch.io/api/datasets/038cf018200c4f459f3a6b901be840fc/"
                          },
                          "https://app.crunch.io/api/datasets/a550e1c491a14941a8726a2518e1eee6/": {
                            "access_time": "2016-03-21T20:01:30.004000+00:00",
                            "account": "https://app.crunch.io/api/accounts/00001/",
                            "archived": false,
                            "creation_time": "2016-03-21T20:01:22.711000+00:00",
                            "current_editor": "https://app.crunch.io/api/users/00002/",
                            "current_editor_name": "Jean-Luc Picard",
                            "description": "",
                            "end_date": "2016-03-21T20:01:22.711000+00:00",
                            "id": "a550e1c491a14941a8726a2518e1eee6",
                            "is_published": true,
                            "modification_time": "2018-06-05T21:49:23.339000+00:00",
                            "name": "Smiling face with sunglasses",
                            "owner_id": "https://app.crunch.io/api/users/00002/",
                            "owner_name": "Jean-Luc Picard",
                            "permissions": {
                              "edit": true,
                              "view": true
                            },
                            "size": {
                              "columns": 8,
                              "rows": 6,
                              "unfiltered_rows": 300
                            },
                            "start_date": "2016-03-21T20:01:22.711000+00:00",
                            "streaming": "no",
                            "view_of": "https://app.crunch.io/api/datasets/038cf018200c4f459f3a6b901be840fc/"
                          }
                        },
                        "orders": {
                          "order": "https://app.crunch.io/api/datasets/order/"
                        },
                        "self": "https://app.crunch.io/api/datasets/",
                        "views": {
                          "align": "https://app.crunch.io/api/datasets/align/",
                          "search": "https://app.crunch.io/api/datasets/search/"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "catalogs": {
                          "additionalProperties": false,
                          "properties": {
                            "by_name": {
                              "type": "string"
                            },
                            "match": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Catalogs",
                          "type": "object"
                        },
                        "description": {
                          "type": "string"
                        },
                        "element": {
                          "$ref": "#/components/schemas/Shoji-catalog-element"
                        },
                        "index": {
                          "additionalProperties": {
                            "additionalProperties": false,
                            "properties": {
                              "access_time": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "account": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "creation_time": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "current_editor": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "current_editor_name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "end_date": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "is_published": {
                                "type": "boolean"
                              },
                              "modification_time": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "owner_id": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "owner_name": {
                                "type": "string"
                              },
                              "permissions": {
                                "additionalProperties": false,
                                "properties": {
                                  "edit": {
                                    "type": "boolean"
                                  },
                                  "view": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [],
                                "title": "Permissions",
                                "type": "object"
                              },
                              "size": {
                                "additionalProperties": false,
                                "properties": {
                                  "columns": {
                                    "type": "integer"
                                  },
                                  "rows": {
                                    "type": "integer"
                                  },
                                  "unfiltered_rows": {
                                    "type": "integer"
                                  }
                                },
                                "required": [],
                                "title": "Size",
                                "type": "object"
                              },
                              "start_date": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "streaming": {
                                "type": "string"
                              },
                              "view_of": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "Index",
                            "type": "object"
                          },
                          "type": "object"
                        },
                        "orders": {
                          "additionalProperties": false,
                          "properties": {
                            "order": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Orders",
                          "type": "object"
                        },
                        "self": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "views": {
                          "additionalProperties": false,
                          "properties": {
                            "align": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            },
                            "search": {
                              "format": "uri",
                              "qt-uri-protocols": [
                                "https"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Views",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List datasets",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasets = await fetch(\n  'https://app.crunch.io/api/datasets/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "patch": {
        "deprecated": true,
        "description": "This endpoint accepts a dataset catalog to update multiple datasets in a single call. Not all dataset attributes can be updated with this method; see below for specifics. Use Dataset Entity PATCH to update dataset attributes not supported by this method.\n\nA successful request returns a 204 (No Content) response. The attributes changed will be seen by all users with access to this dataset; i.e., names, descriptions, and archived state are not merely attributes of your view of the data but of the datasets themselves.\n\nAuthorization is required: you must have edit privileges on the dataset(s) being modified, as shown in the permissions object in the index item for that dataset. If you try to PATCH and are not authorized, you will receive a 403 (Forbidden) response and no changes will be made.\n\n### The following dataset attributes can be modified with this method:\n\n* name\n\n* description\n\n* notes\n\n* start_date\n\n* end_date\n\n* is_published\n\n* streaming\n\n* archived\n\n### Any changes to these attributes will be silently ignored:\n\n* access_time\n\n* creation_time\n\n* modification_time\n\n* permissions\n\n* size\n\nAttempting to modify other attributes, or including new attributes, will return a 400 (Bad Request) response.\nChanging permissions is accomplished by PATCH on the permissions catalog. The current_editor_name attribute is modifiable, assuming authorization, by PATCH on the associated user entity. Dataset size is a cached property of the data, changing only if the number of rows or columns in the dataset change. Dataset id, modification_time and creation_time are immutable/system generated.\n\nWhen PATCHing, you may include only the keys that are being modified, or you may send all keys. As long as the keys that cannot be modified via PATCH are not modified, the request will succeed.\n\nNote that, unlike other Shoji Catalog resources, you cannot PATCH with a null object to delete a dataset. Attempting this will return a 400 (Bad Request) response. Creating a dataset is allowed only by a POST to the catalog, while deleting a dataset is accomplished via a DELETE on the dataset entity.\n\n**Changing dataset ownership Any changes to the ownership of a dataset need to be done by the current editor.**\n\nOnly the dataset owner can change the ownership to another user. This can be done by PATCH request with the new owners email of API URL. The new owner must have advanced permissions on Crunch.\n\nOther editors of the dataset can change the ownership of a dataset only to a Project as long as they and the current owner of the dataset are both editors on such project.",
        "operationId": "post-datasets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/datasets/a598c7/": {
                        "archived": false,
                        "description": "Data collected in 2019",
                        "end_date": "2020-05-20T19:57:26.875000",
                        "is_published": true,
                        "name": "New dataset",
                        "notes": "",
                        "start_date": "2020-05-20T19:57:26.875000",
                        "streaming": "no"
                      },
                      "https://app.crunch.io/api/datasets/a598c8935/": {
                        "archived": true,
                        "description": "Indiana",
                        "end_date": "2005-05-20T19:57:26.875000",
                        "is_published": false,
                        "name": "Consumer preferences 2004",
                        "notes": "Archived",
                        "start_date": "2004-05-20T19:57:26.875000",
                        "streaming": "no"
                      }
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "index": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "properties": {
                        "archived": {
                          "type": "boolean"
                        },
                        "description": {
                          "type": "string"
                        },
                        "end_date": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "is_published": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string"
                        },
                        "start_date": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "streaming": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid underlying dataset invalid_id"
                      ],
                      "message": "Invalid underlying dataset invalid_id",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "message": "You do not have permissions to edit this dataset",
                      "status": "403 Forbidden"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          }
        },
        "summary": "Update datasets",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/a598c7/\": {\n      \"archived\": false,\n      \"description\": \"Data collected in 2019\",\n      \"end_date\": \"2020-05-20T19:57:26.875000\",\n      \"is_published\": true,\n      \"name\": \"New dataset\",\n      \"notes\": \"\",\n      \"start_date\": \"2020-05-20T19:57:26.875000\",\n      \"streaming\": \"no\"\n    },\n    \"https://app.crunch.io/api/datasets/a598c8935/\": {\n      \"archived\": true,\n      \"description\": \"Indiana\",\n      \"end_date\": \"2005-05-20T19:57:26.875000\",\n      \"is_published\": false,\n      \"name\": \"Consumer preferences 2004\",\n      \"notes\": \"Archived\",\n      \"start_date\": \"2004-05-20T19:57:26.875000\",\n      \"streaming\": \"no\"\n    }\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasets = await fetch(\n  'https://app.crunch.io/api/datasets/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/a598c7/\": {\n         \"archived\": false,\n         \"description\": \"Data collected in 2019\",\n         \"end_date\": \"2020-05-20T19:57:26.875000\",\n         \"is_published\": true,\n         \"name\": \"New dataset\",\n         \"notes\": \"\",\n         \"start_date\": \"2020-05-20T19:57:26.875000\",\n         \"streaming\": \"no\"\n       },\n       \"https://app.crunch.io/api/datasets/a598c8935/\": {\n         \"archived\": true,\n         \"description\": \"Indiana\",\n         \"end_date\": \"2005-05-20T19:57:26.875000\",\n         \"is_published\": false,\n         \"name\": \"Consumer preferences 2004\",\n         \"notes\": \"Archived\",\n         \"start_date\": \"2004-05-20T19:57:26.875000\",\n         \"streaming\": \"no\"\n       }\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "POST a Shoji Entity JSON object to create a new Dataset; The returned Location header refers to the new Dataset resource. A 201 (Created) indicates success. A 202 (Accepted) indicates that dataset creation is happening in the background; read the response body to get a Progress URL.\n\nThe POST body must contain a \"name\" attribute. You can also include a Crunch Table in a \"table\" key, as discussed in the Feature Guide.",
        "operationId": "post-datasets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "x49 Canada",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "v1": {
                            "alias": "v1",
                            "name": "v1",
                            "type": "numeric"
                          },
                          "v2": {
                            "alias": "v2",
                            "name": "v2",
                            "type": "text"
                          },
                          "v3": {
                            "alias": "v3",
                            "name": "v3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          },
                          "v5": {
                            "alias": "v5",
                            "name": "v5",
                            "resolution": "D",
                            "type": "datetime"
                          },
                          "v6": {
                            "alias": "v6",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "True",
                                "numeric_value": 1,
                                "selected": true
                              },
                              {
                                "id": 0,
                                "missing": false,
                                "name": "False",
                                "numeric_value": 0
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v6",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "v1",
                          "v2",
                          "v3",
                          "v4",
                          "v5",
                          "v6"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "name": "2020-04-24 19:25:07.449 MDT"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "description": "A dataset to illustrate the API",
                      "name": "Example dataset",
                      "table": {
                        "element": "crunch:table",
                        "hidden": [
                          "caseid"
                        ],
                        "metadata": {
                          "allpets": {
                            "alias": "allpets",
                            "categories": [
                              {
                                "id": 2,
                                "missing": false,
                                "name": "not selected",
                                "numeric_value": null,
                                "selected": false
                              },
                              {
                                "id": 1,
                                "missing": false,
                                "name": "selected",
                                "numeric_value": null,
                                "selected": true
                              },
                              {
                                "id": 9,
                                "missing": true,
                                "name": "not asked",
                                "numeric_value": 9
                              },
                              {
                                "id": 8,
                                "missing": true,
                                "name": "skipped",
                                "numeric_value": 8
                              }
                            ],
                            "description": "Do you have any of these animals as pets? Please select all that apply.",
                            "name": "All pets owned",
                            "subvariables": [
                              {
                                "alias": "allpets_1",
                                "name": "Cat"
                              },
                              {
                                "alias": "allpets_2",
                                "name": "Dog"
                              },
                              {
                                "alias": "allpets_3",
                                "name": "Bird"
                              }
                            ],
                            "type": "multiple_response"
                          },
                          "caseid": {
                            "alias": "caseid",
                            "name": "Case ID",
                            "type": "numeric"
                          },
                          "country": {
                            "alias": "country",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "Argentina",
                                "numeric_value": null
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "Australia",
                                "numeric_value": null
                              },
                              {
                                "id": 3,
                                "missing": false,
                                "name": "Austria",
                                "numeric_value": null
                              },
                              {
                                "id": 4,
                                "missing": false,
                                "name": "Belgium",
                                "numeric_value": null
                              },
                              {
                                "id": 5,
                                "missing": false,
                                "name": "Brazil",
                                "numeric_value": null
                              }
                            ],
                            "description": "",
                            "name": "Country",
                            "type": "categorical"
                          },
                          "ndogs": {
                            "alias": "ndogs",
                            "description": null,
                            "missing_rules": {
                              "not asked": {
                                "value": -99
                              },
                              "skipped": {
                                "value": -98
                              }
                            },
                            "name": "Number of dogs",
                            "type": "numeric"
                          },
                          "ndogs_a": {
                            "alias": "ndogs_a",
                            "description": "How many dogs do you have?",
                            "name": "Number of dogs -- With papers",
                            "type": "numeric"
                          },
                          "ndogs_b": {
                            "alias": "ndogs_b",
                            "description": "How many dogs do you have?",
                            "name": "Number of dogs -- Mutts",
                            "type": "numeric"
                          },
                          "petloc": {
                            "alias": "petloc",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "Cat",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "Dog",
                                "numeric_value": 2
                              },
                              {
                                "id": 3,
                                "missing": false,
                                "name": "Bird",
                                "numeric_value": 3
                              },
                              {
                                "id": 8,
                                "missing": true,
                                "name": "Skipped",
                                "numeric_value": 8
                              },
                              {
                                "id": 9,
                                "missing": true,
                                "name": "Not Asked",
                                "numeric_value": 9
                              }
                            ],
                            "description": "Name the kinds of pets you have at these locations.",
                            "name": "Pets by location",
                            "subvariables": [
                              {
                                "alias": "petloc_home",
                                "name": "Home"
                              },
                              {
                                "alias": "petloc_work",
                                "name": "Work"
                              }
                            ],
                            "type": "categorical_array"
                          },
                          "q1": {
                            "alias": "q1",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "Cat",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "Dog",
                                "numeric_value": 2
                              },
                              {
                                "id": 3,
                                "missing": false,
                                "name": "Bird",
                                "numeric_value": 3
                              },
                              {
                                "id": 8,
                                "missing": true,
                                "name": "Skipped",
                                "numeric_value": 8
                              },
                              {
                                "id": 9,
                                "missing": true,
                                "name": "Not Asked",
                                "numeric_value": 9
                              }
                            ],
                            "description": "What is your favorite pet?",
                            "name": "Pet",
                            "type": "categorical"
                          },
                          "q3": {
                            "alias": "q3",
                            "description": "What is your favorite pet's maiden name?",
                            "missing_rules": {
                              "Not asked": {
                                "value": ""
                              }
                            },
                            "name": "Pet name",
                            "type": "text"
                          },
                          "wave": {
                            "alias": "wave",
                            "description": "",
                            "name": "Wave",
                            "resolution": "D",
                            "type": "datetime"
                          }
                        },
                        "order": [
                          {
                            "entities": [
                              "allpets",
                              "q1",
                              "petloc"
                            ],
                            "group": "Key Pet Indicators"
                          },
                          {
                            "entities": [
                              "ndogs",
                              {
                                "entities": [
                                  "ndogs_a",
                                  "ndogs_b"
                                ],
                                "group": "Number of dogs by type"
                              }
                            ],
                            "group": "Dog Metrics"
                          },
                          {
                            "entities": [
                              "q3"
                            ],
                            "group": "Details"
                          },
                          {
                            "entities": [
                              "country",
                              "wave"
                            ],
                            "group": "Dimensions"
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "name": "data.frame(x = 1:1024)",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "x": {
                            "alias": "x",
                            "name": "x",
                            "type": "numeric"
                          }
                        },
                        "order": [
                          "x"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-5": {
                  "value": {
                    "body": {
                      "name": "mrdf",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "mr_1": {
                            "alias": "mr_1",
                            "name": "mr_1",
                            "type": "numeric"
                          },
                          "mr_2": {
                            "alias": "mr_2",
                            "name": "mr_2",
                            "type": "numeric"
                          },
                          "mr_3": {
                            "alias": "mr_3",
                            "name": "mr_3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "mr_1",
                          "mr_2",
                          "mr_3",
                          "v4"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-6": {
                  "value": {
                    "body": {
                      "name": "mrdf[c(\"mr_3\", \"v4\")]",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "mr_3": {
                            "alias": "mr_3",
                            "name": "mr_3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "mr_3",
                          "v4"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-7": {
                  "value": {
                    "body": {
                      "name": "df[, 2:5]",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "v2": {
                            "alias": "v2",
                            "name": "v2",
                            "type": "text"
                          },
                          "v3": {
                            "alias": "v3",
                            "name": "v3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          },
                          "v5": {
                            "alias": "v5",
                            "name": "v5",
                            "resolution": "D",
                            "type": "datetime"
                          }
                        },
                        "order": [
                          "v2",
                          "v3",
                          "v4",
                          "v5"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-8": {
                  "value": {
                    "body": {
                      "name": "d2",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "v1": {
                            "alias": "v1",
                            "name": "v1",
                            "type": "numeric"
                          },
                          "v2": {
                            "alias": "v2",
                            "name": "v2",
                            "type": "numeric"
                          },
                          "v3": {
                            "alias": "v3",
                            "name": "v3",
                            "type": "numeric"
                          },
                          "v4": {
                            "alias": "v4",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "B",
                                "numeric_value": 1
                              },
                              {
                                "id": 2,
                                "missing": false,
                                "name": "C",
                                "numeric_value": 2
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v4",
                            "type": "categorical"
                          },
                          "v5": {
                            "alias": "v5",
                            "name": "v5",
                            "resolution": "D",
                            "type": "datetime"
                          },
                          "v6": {
                            "alias": "v6",
                            "categories": [
                              {
                                "id": 1,
                                "missing": false,
                                "name": "True",
                                "numeric_value": 1,
                                "selected": true
                              },
                              {
                                "id": 0,
                                "missing": false,
                                "name": "False",
                                "numeric_value": 0
                              },
                              {
                                "id": -1,
                                "missing": true,
                                "name": "No Data",
                                "numeric_value": null
                              }
                            ],
                            "name": "v6",
                            "type": "categorical"
                          }
                        },
                        "order": [
                          "v1",
                          "v2",
                          "v3",
                          "v4",
                          "v5",
                          "v6"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-9": {
                  "value": {
                    "body": {
                      "name": "df1",
                      "table": {
                        "element": "crunch:table",
                        "metadata": {
                          "bar": {
                            "alias": "bar",
                            "name": "bar",
                            "type": "numeric"
                          },
                          "foo": {
                            "alias": "foo",
                            "name": "foo",
                            "type": "numeric"
                          }
                        },
                        "order": [
                          "foo",
                          "bar"
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "dataset_id": {
                        "type": "string"
                      },
                      "derivation": {
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "end_date": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "is_published": {
                        "type": "boolean"
                      },
                      "maintainer": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "owner": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "pk": {
                        "title": "PkUnion",
                        "type": "string"
                      },
                      "settings": {
                        "properties": {
                          "complete_cases_default": {
                            "type": "boolean"
                          },
                          "min_base_size": {
                            "type": "integer"
                          },
                          "suppress_on_min_base_size": {
                            "type": "boolean"
                          },
                          "viewers_can_change_weight": {
                            "title": "ViewersCanChangeWeightUnion",
                            "type": "boolean"
                          },
                          "viewers_can_export": {
                            "type": "boolean"
                          },
                          "weight": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Weight",
                            "type": "array"
                          }
                        },
                        "title": "SettingsUnion",
                        "type": "object"
                      },
                      "start_date": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "streaming": {
                        "type": "string"
                      },
                      "table": {
                        "type": "object"
                      },
                      "view_of": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      },
                      "weight_variables": {
                        "items": {
                          "type": "string"
                        },
                        "title": "Weight",
                        "type": "array"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/",
                      "value": "https://app.crunch.io/api/progress/create_dataset_from_source%3A6b2d093463454c74afb881bc56a128b9%24fd5b49b8-35f9-4260-804e-17c83c66b313/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Invalid underlying dataset invalid_id"
                      ],
                      "message": "Invalid underlying dataset invalid_id",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create dataset",
        "tags": [
          "Datasets"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"x49 Canada\",\n    \"table\": {\n      \"element\": \"crunch:table\",\n      \"metadata\": {\n        \"v1\": {\n          \"alias\": \"v1\",\n          \"name\": \"v1\",\n          \"type\": \"numeric\"\n        },\n        \"v2\": {\n          \"alias\": \"v2\",\n          \"name\": \"v2\",\n          \"type\": \"text\"\n        },\n        \"v3\": {\n          \"alias\": \"v3\",\n          \"name\": \"v3\",\n          \"type\": \"numeric\"\n        },\n        \"v4\": {\n          \"alias\": \"v4\",\n          \"categories\": [\n            {\n              \"id\": 1,\n              \"missing\": false,\n              \"name\": \"B\",\n              \"numeric_value\": 1\n            },\n            {\n              \"id\": 2,\n              \"missing\": false,\n              \"name\": \"C\",\n              \"numeric_value\": 2\n            },\n            {\n              \"id\": -1,\n              \"missing\": true,\n              \"name\": \"No Data\",\n              \"numeric_value\": null\n            }\n          ],\n          \"name\": \"v4\",\n          \"type\": \"categorical\"\n        },\n        \"v5\": {\n          \"alias\": \"v5\",\n          \"name\": \"v5\",\n          \"resolution\": \"D\",\n          \"type\": \"datetime\"\n        },\n        \"v6\": {\n          \"alias\": \"v6\",\n          \"categories\": [\n            {\n              \"id\": 1,\n              \"missing\": false,\n              \"name\": \"True\",\n              \"numeric_value\": 1,\n              \"selected\": true\n            },\n            {\n              \"id\": 0,\n              \"missing\": false,\n              \"name\": \"False\",\n              \"numeric_value\": 0\n            },\n            {\n              \"id\": -1,\n              \"missing\": true,\n              \"name\": \"No Data\",\n              \"numeric_value\": null\n            }\n          ],\n          \"name\": \"v6\",\n          \"type\": \"categorical\"\n        }\n      },\n      \"order\": [\n        \"v1\",\n        \"v2\",\n        \"v3\",\n        \"v4\",\n        \"v5\",\n        \"v6\"\n      ]\n    }\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasets = await fetch(\n  'https://app.crunch.io/api/datasets/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"x49 Canada\",\n       \"table\": {\n         \"element\": \"crunch:table\",\n         \"metadata\": {\n           \"v1\": {\n             \"alias\": \"v1\",\n             \"name\": \"v1\",\n             \"type\": \"numeric\"\n           },\n           \"v2\": {\n             \"alias\": \"v2\",\n             \"name\": \"v2\",\n             \"type\": \"text\"\n           },\n           \"v3\": {\n             \"alias\": \"v3\",\n             \"name\": \"v3\",\n             \"type\": \"numeric\"\n           },\n           \"v4\": {\n             \"alias\": \"v4\",\n             \"categories\": [\n               {\n                 \"id\": 1,\n                 \"missing\": false,\n                 \"name\": \"B\",\n                 \"numeric_value\": 1\n               },\n               {\n                 \"id\": 2,\n                 \"missing\": false,\n                 \"name\": \"C\",\n                 \"numeric_value\": 2\n               },\n               {\n                 \"id\": -1,\n                 \"missing\": true,\n                 \"name\": \"No Data\",\n                 \"numeric_value\": null\n               }\n             ],\n             \"name\": \"v4\",\n             \"type\": \"categorical\"\n           },\n           \"v5\": {\n             \"alias\": \"v5\",\n             \"name\": \"v5\",\n             \"resolution\": \"D\",\n             \"type\": \"datetime\"\n           },\n           \"v6\": {\n             \"alias\": \"v6\",\n             \"categories\": [\n               {\n                 \"id\": 1,\n                 \"missing\": false,\n                 \"name\": \"True\",\n                 \"numeric_value\": 1,\n                 \"selected\": true\n               },\n               {\n                 \"id\": 0,\n                 \"missing\": false,\n                 \"name\": \"False\",\n                 \"numeric_value\": 0\n               },\n               {\n                 \"id\": -1,\n                 \"missing\": true,\n                 \"name\": \"No Data\",\n                 \"numeric_value\": null\n               }\n             ],\n             \"name\": \"v6\",\n             \"type\": \"categorical\"\n           }\n         },\n         \"order\": [\n           \"v1\",\n           \"v2\",\n           \"v3\",\n           \"v4\",\n           \"v5\",\n           \"v6\"\n         ]\n       }\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/": {
      "delete": {
        "description": "With sufficient authorization, a successful DELETE request removes the dataset from the Crunch system and responds with 204 status.",
        "operationId": "delete-datasets-datasetId",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Cannot delete this dataset because it contains views.\n"
                      ],
                      "message": "Cannot delete this dataset because it contains views.",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Deletion failed - item in use"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "description": "",
                  "properties": {
                    "exception": {
                      "items": {
                        "properties": {},
                        "required": []
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "exception",
                    "message",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Delete dataset",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDatasetId = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/', {\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "A Dataset is the primary container of statistical data in Crunch. Each dataset contains a collection of variables, from which analyses can be composed and then saved and exported. These analyses may include filters, which a user can define and save. A user can also share a dataset with another user.\n\nData is added to a dataset as a batch. A new dataset may be created empty (have zero data batches), or dataset creation and adding the first data batch may be combined in certain import operations. In either case, additional batches can be appended to datasets. Similarly, variables from other datasets can be joined onto a dataset.\n\nAs with other Crunch objects, references to the dataset entities available to a user are provided in a catalog. Multiple endpoint-methods described below return a dataset catalog, which may be filtered and/or organized in a hierarchy, depending on the method.\n\nThis endpoint returns the details for one given dataset.\n\n### Additional catalogs (related options):\n\n* actions - All actions executed on this dataset.\n* batches - Returns all the batches (successful and failed) used for this dataset.\n* boxdata - Records that correspond to published CrunchBoxes.\n* decks - The list of all decks on this dataset for the authenticated user.\n* filters - Makes available the public and user-created filters.\n* folders - Returns the root folder of the variables folders tree.\n* forks - Returns all the forks created from this dataset\n* multitables - Similar to filters, displays all available multitables.\n* parent - Indicates the catalog where this dataset is found (project or main dataset catalog).\n* permissions - Returns the list of all users and teams with access to this dataset.\n* project - Returns the project that contains this dataset.\n* savepoints - Lists the saved versions for this dataset.\n* scripts - Lists the Crunch Automation scripts that have been executed on this dataset.\n* tags - Returns the variables tags for this dataset.\n* teams - Lists all teams that have access to this dataset via any means, either from project inherited permissions or shares via teams or directly to the team.\n* users - Lists all users that have access to this dataset via any means, either from project inherited permissions or shares via teams or directly to the user.\n* variables - Catalog of all public variables of this dataset.\n* variables_private - Returns the personal variables of the authenticated user.\n* views - Returns a list of views created from this dataset.",
        "operationId": "get-datasets-datasetId",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "access_time": "2020-05-20T19:57:26.818000",
                        "account": "https://app.crunch.io/api/accounts/c7b69081c146450fa024723cca471c3a/",
                        "app_settings": {},
                        "archived": false,
                        "creation_time": "2020-05-20T19:57:26.955000",
                        "current_editor": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "current_editor_name": "captain-59690949fbfa9f206b49e573ebef2b110267e1de985d3825fc08199f113be304",
                        "description": "",
                        "end_date": "2020-05-20T19:57:26.875000",
                        "id": "7411cd3e09044d879d4537d368e876a7",
                        "is_published": true,
                        "logo": {
                          "favicon": "",
                          "large": "",
                          "small": ""
                        },
                        "maintainer": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "modification_time": "2020-05-20T19:57:26.875000",
                        "name": "New dataset",
                        "notes": "",
                        "owner": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "owner_name": "captain-59690949fbfa9f206b49e573ebef2b110267e1de985d3825fc08199f113be304",
                        "palette": {},
                        "permissions": {
                          "edit": true,
                          "view": true
                        },
                        "size": {
                          "columns": 35,
                          "rows": 8542,
                          "unfiltered_rows": 5612
                        },
                        "start_date": "2020-05-20T19:57:26.875000",
                        "streaming": "no",
                        "view_of": "https://app.crunch.io/api/datasets/60284cf788804ca3b59f1c259bf1f85e/"
                      },
                      "catalogs": {
                        "actions": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/actions/",
                        "batches": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/batches/",
                        "boxdata": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/boxdata/",
                        "decks": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/decks/",
                        "filters": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/filters/",
                        "folders": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/",
                        "forks": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/forks/",
                        "multitables": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/multitables/",
                        "parent": "https://app.crunch.io/api/datasets/",
                        "permissions": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/permissions/",
                        "project": "https://app.crunch.io/api/projects/personal/",
                        "savepoints": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/savepoints/",
                        "scripts": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/scripts/",
                        "tags": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/tags/",
                        "teams": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/teams/",
                        "users": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/users/",
                        "variables": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/",
                        "variables_private": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/private/",
                        "views": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/views/"
                      },
                      "description": "Detail for a given dataset",
                      "element": "shoji:entity",
                      "fragments": {
                        "exclusion": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/exclusion/",
                        "pk": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/pk/",
                        "preferences": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/preferences/",
                        "publish": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/publish/",
                        "schema": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/schema/",
                        "settings": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/settings/",
                        "state": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/state/",
                        "stream": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/stream/",
                        "table": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/table/"
                      },
                      "orders": {
                        "variables_hier": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/hier/",
                        "variables_personal": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/personal/",
                        "variables_weights": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/weights/"
                      },
                      "self": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/",
                      "urls": {
                        "editor_url": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/",
                        "owner_url": "https://app.crunch.io/api/projects/8259914074b74ac1a922ec0dfc34a7c3/",
                        "user_url": "https://app.crunch.io/api/users/7f98ec3861c84505bfde3689120fcf27/"
                      },
                      "views": {
                        "applied_filters": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/filters/applied/",
                        "cube": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/cube/",
                        "export": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/export/",
                        "second_order_analysis": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/second_order_analysis/",
                        "summary": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/summary/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "access_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "account": {
                          "description": "URL of the account entity that owns the dataset.",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "app_settings": {
                          "additionalProperties": false,
                          "description": "A place for API clients to store values they need per dataset; It is recommended that clients namespace their keys to avoid collisions.",
                          "title": "AppSettings",
                          "type": "object"
                        },
                        "archived": {
                          "default": "false",
                          "description": "Whether the dataset is archived or active.\"",
                          "type": "boolean"
                        },
                        "creation_time": {
                          "description": "Datetime at which the dataset was created in Crunch.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "current_editor": {
                          "description": "URL of the user entity that is currently editing the dataset, or null if there is no current editor.",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "current_editor_name": {
                          "description": "Current editor's name, for display,",
                          "type": "string"
                        },
                        "description": {
                          "description": "A longer description of the dataset.",
                          "type": "string"
                        },
                        "end_date": {
                          "description": "End date/time of the dataset's data, defining a start_date:end_date range.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "The dataset's id.",
                          "type": "string"
                        },
                        "is_published": {
                          "description": "Indicates if the dataset is published to viewers or not.",
                          "type": "boolean"
                        },
                        "logo": {
                          "additionalProperties": false,
                          "description": "Contains the read-only URLs for the branding-related logos for the datasset.",
                          "properties": {
                            "favicon": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            }
                          },
                          "title": "Logo",
                          "type": "object"
                        },
                        "maintainer": {
                          "description": "The URL of the dataset maintener. Will always point to a user.",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "modification_time": {
                          "description": "Datetime of the last modification for this dataset globally.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the dataset.",
                          "type": "string"
                        },
                        "notes": {
                          "description": "Additional information you want to associate with this dataset.",
                          "type": "string"
                        },
                        "owner": {
                          "description": "URL of the user entity of the dataset's owner (Yourself or a project).",
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "owner_name": {
                          "description": "The owner's name, for display.",
                          "type": "string"
                        },
                        "palette": {
                          "additionalProperties": false,
                          "description": "Contains the three branding-related colors that are used to theme the dataset.",
                          "title": "AppSettings",
                          "type": "object"
                        },
                        "permissions": {
                          "additionalProperties": false,
                          "description": "Authorizations on this dataset.",
                          "properties": {
                            "edit": {
                              "type": "boolean"
                            },
                            "view": {
                              "type": "boolean"
                            }
                          },
                          "title": "Permissions",
                          "type": "object"
                        },
                        "population": {
                          "description": "An object with keys size and magnitude, both integers: the total population represented by a sample. magnitude is the default power-of-ten for display; use 3 for thousands (\"K\"), 6 for millions (\"M\"), etc. For example, if the total population is 3000: set \"size: 3000\" and \"magnitude: 3\", rather than size 3 magnitude 3.",
                          "type": "object"
                        },
                        "size": {
                          "additionalProperties": false,
                          "description": "Dimensions of the dataset.",
                          "properties": {
                            "columns": {
                              "type": "integer"
                            },
                            "rows": {
                              "type": "integer"
                            },
                            "unfiltered_rows": {
                              "type": "integer"
                            }
                          },
                          "title": "Size",
                          "type": "object"
                        },
                        "start_date": {
                          "description": "Date/time for which the data in the dataset corresponds.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "streaming": {
                          "description": "Possible values \"no\", \"finished\", and \"streaming\" to enable/disable streaming.",
                          "enum": [
                            "no",
                            "finished",
                            "streaming"
                          ],
                          "example": "no",
                          "type": "string"
                        },
                        "view_of": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "actions": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "batches": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "boxdata": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "decks": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "filters": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "folders": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "forks": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "multitables": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "parent": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "permissions": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "project": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "savepoints": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "scripts": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "tags": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "teams": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "users": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables_private": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "views": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "fragments": {
                      "additionalProperties": false,
                      "properties": {
                        "exclusion": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "pk": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "preferences": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "publish": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "schema": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "settings": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "state": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "stream": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "table": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Fragments",
                      "type": "object"
                    },
                    "orders": {
                      "additionalProperties": false,
                      "properties": {
                        "variables_hier": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables_personal": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "variables_weights": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Orders",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    },
                    "urls": {
                      "additionalProperties": false,
                      "properties": {
                        "editor_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "owner_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "user_url": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Urls",
                      "type": "object"
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "applied_filters": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "cube": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "export": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "second_order_analysis": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "summary": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "DatasetsDatasetIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Dataset details",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDatasetId = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "A successful PATCH request returns a 204 response. The attributes changed will be seen by all users with access to this dataset; i.e., names, descriptions, and archived state are not merely attributes of your view of the data but of the datasets themselves.\n\nAuthorization is required: you must have \"edit\" privileges on this dataset. If you try to PATCH and are not authorized, you will receive a 403 response and no changes will be made. \n\nWhen PATCHing, you may include only the keys that are being modified, or you may send the complete entity. As long as the keys that cannot be modified via PATCH here are not modified, the request will succeed.\n\n### Changing dataset ownership\nIf you are the current editor of a dataset you can change its owner by PATCHing the owner attribute with the URL of the new owner.\n\nOnly Users or Projects can be set as owners of a dataset.\n\n* Users: New owner needs to be advanced users to be owner of a dataset.\n* Projects: Authenticated user needs to have edit permissions on the project.\n\n### Copying over from another dataset\nIn the needed case to copy over the work from another dataset to the current one, it is possible to issue a PATCH request with the copy_from attribute pointing to the URL of the source dataset to use.\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"copy_from\": \"https://app.crunch.io/api/datasets/1234/\"\n  }\n}\n```\n\nAll dataset attributes, permissions, derivations, private variables, etc will be brought over to the current dataset:\n\n* Decks\n* Filters\n* Multitables\n* Comparisons\n* Personal variable order\n* Derived variables\n* Personal variables\n* Permissions\n* Variable Tags\n\nThe endpoint will return a 202 (Accepted) status code. The response will be a shoji:entity containing the Progress URL that provides status information on the completion of the operation. The Location header URL in the output response is referred to the source dataset.\n\nIt is possible to copy information only for one user from another dataset, the payload will need the extra user key. It can contain either a user URL or a user email:\n\n```\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"copy_from\": \"https://app.crunch.io/api/datasets/1234/\",\n    \"user\": \"https://app.crunch.io/api/users/abcd/\"\n  }\n}\n```\n\nIf the current dataset already contains Variable Tags, the incoming ones (if any) will be merged with the existing ones.",
        "operationId": "patch-datasets-datasetId",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "description": "",
                      "name": "oyster 123"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "app_settings": {
                        "whaam": {
                          "dashboardName": "Dashboard name",
                          "dashboardType": "deck",
                          "dashboardUrl": "https://app.crunch.io/api/dashboards/rb7/",
                          "hideViewDatasetControls": false,
                          "isDashboardTheLandingPage": true
                        }
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "app_settings": {
                        "additionalProperties": false,
                        "properties": {
                          "whaam": {
                            "additionalProperties": false,
                            "properties": {
                              "dashboardName": {
                                "type": "string"
                              },
                              "dashboardType": {
                                "type": "string"
                              },
                              "dashboardUrl": {
                                "format": "uri",
                                "qt-uri-protocols": [
                                  "https"
                                ],
                                "type": "string"
                              },
                              "hideViewDatasetControls": {
                                "type": "boolean"
                              },
                              "isDashboardTheLandingPage": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Whaam",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "AppSettings",
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid value, must be a string or a date object on field: start_date\n"
                      ],
                      "message": "Invalid value, must be a string or a date object on field: start_date",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPatchRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "message": "You do not have permissions to edit this dataset",
                      "status": "403 Forbidden"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          }
        },
        "summary": "Update dataset",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"description\": \"\",\n    \"name\": \"oyster 123\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDatasetId = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"description\": \"\",\n       \"name\": \"oyster 123\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/forks/": {
      "get": {
        "description": "Datasets forked from the given dataset",
        "operationId": "get-datasets-dataset_id-forks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Datasets forked from the given dataset",
                      "element": "shoji:catalog",
                      "index": {},
                      "self": "https://app.crunch.io/api/datasets/548d42d3410b4b0db9487f5ad2d00757/forks/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDForksGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List forks",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/forks/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idForks = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/forks/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "For detailed information about forking and merging, see [Working with Data and Datasets](https://help.crunch.io/hc/en-us/articles/360044732771-Working-with-Data-and-Datasets#toc36).",
        "operationId": "post-datasets-dataset_id-forks",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "is_published": true,
                      "name": "forked_datasets"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "is_published": true,
                      "name": "Fork of df"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "is_published": true,
                      "name": "Fork #3 of df"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "name": "forked_datasets"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "is_published": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDForksPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/c8c1b6cb851c4c9e9bdda1180a1335b0/forks/",
                      "value": "https://app.crunch.io/api/progress/fork_dataset%3Ac8c1b6cb851c4c9e9bdda1180a1335b0%2467552e68-0de0-49d6-bed0-e27cd7c0cfe3/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDForksPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid attributes: forkname\n"
                      ],
                      "message": "Invalid attributes: forkname",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDForksPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Fork dataset",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/forks/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"is_published\": true,\n    \"name\": \"forked_datasets\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idForks = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/forks/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"is_published\": true,\n       \"name\": \"forked_datasets\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/permissions/": {
      "get": {
        "description": "If you are authorized to view the dataset, this endpoint returns a Shoji Catalog indicating the users who have access to this dataset and their respective permissions. This includes the current, authorized user making the request. Index tuples are keyed by User URL.\n\nSupported dataset_permissions, all boolean, are:\n\n* **view**: Whether the user can view the dataset. Note that viewing is not limited to just GET requests, for dataset viewers may create filters, private variables, and saved analyses, for example.\n\n* **edit**: Whether the user can edit the dataset. When editing, users with this permission may modify the common data of a dataset, including things like public filters available to all viewers of the dataset.\n\n* **change_permissions**: Whether the user may alter other users\u2019 authorization on this dataset.",
        "operationId": "get-datasets-dataset_id-permissions",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Lists all the users that have access to this dataset",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/users/9fa251087d534240878cae644bdaaa2f/": {
                          "dataset_permissions": {
                            "edit": true,
                            "view": true
                          },
                          "email": "0c9ea3afead9abeec81adeba5ca1eb01b8cc8d0c9a05d2723fd311840003f00e@example.com",
                          "is_owner": true,
                          "name": "0c9ea3afead9abeec81adeba5ca1eb01b8cc8d0c9a05d2723fd311840003f00e"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/daf7822834d34f809332670692aaa2bf/permissions/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "https://app.crunch.io/api/users/9fa251087d534240878cae644bdaaa2f/": {
                          "additionalProperties": false,
                          "properties": {
                            "dataset_permissions": {
                              "additionalProperties": false,
                              "properties": {
                                "edit": {
                                  "type": "boolean"
                                },
                                "view": {
                                  "type": "boolean"
                                }
                              },
                              "required": [],
                              "title": "DatasetPermissions",
                              "type": "object"
                            },
                            "email": {
                              "type": "string"
                            },
                            "is_owner": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPIUsers9Fa251087D534240878Cae644Bdaaa2F",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPermissionsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List user access",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/permissions/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idPermissions = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/permissions/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint allows you to modify existing user access, invite new users to this dataset, and revoke user access.\n\n## Modifying existing user access\nTo change the permissions a user has, PATCH new dataset_permissions, like:\n\n```\n{\n    \"https://app.crunch.io/api/users/42/\": {\n        \"dataset_permissions\": {\n            \"edit\": false,\n            \"view\": true\n        }\n    },\n    \"send_notification\": true\n }\n```\n\nOnly the `dataset_permissions` key in the tuple can be modified by PATCHing this catalog. Other keys, such as `name`, are included only for facilitating human-readable display of the catalog. If sent, these other keys will be ignored.\n\nIf a subset of `dataset_permissions` are included in the payload, only the specified permissions will have their values updated. Omitted permissions will remain unchanged.\n\nMultiple users\u2019 permissions can be modified in a single request by including multiple tuples keyed by User URL.\n\nThe `send_notification` key in the payload is optional; if included and True, the server will send an email invitation to all newly added users (see below), as well as to users who are granted `edit` privileges.\n\n## Add new user from within account\nTo add a user (i.e. share with them), there are two cases. First, if the user to be added is a member of the current user\u2019s account, PATCH similar to above, using this user\u2019s URL as key:\n\n```\n{\n    \"/users/id/\": {\n        \"dataset_permissions\": {\n            \"edit\": false,\n            \"view\": true\n        },\n        \"profile\": {\n            \"weight\": null,\n            \"applied_filters\": []\n\n        }\n    }\n}\n```\n\nThis payload may include a `profile` member, which are initial values with which to populate the sharee\u2019s user-dataset-profile.\n\nValid \u201cprofile\u201d members include:\n\n* **weight**: a URL to one of the dataset\u2019s weight variables; if omitted, the sharer\u2019s current weight variable will be used\n\n* **applied_filters**: an array of filter URLs which are shared with all dataset viewers. If any of the specified filters are private, the PATCH request will return 400 status. Default value for `applied_filters` is [].\n\nIf the `profile` member is not included, the newly shared users will be created with their user dataset preferences matching the sharer\u2019s current weight.\n\n## Revoking access\nTo revoke users\u2019 access to this dataset (aka unshare with them), PATCH a null tuple for their user URLs:\n\n```\n{\n    \"/users/id/\": null\n}\n```\n\n** Note**: all of these PATCHes for add/edit/remove access to the dataset can be done in a single request that combines them all.\n\n## Validation\nThe server will insist, and clients should also validate, that\n\n* There is one and only one user with `edit: true` privileges for a dataset; if not, the PATCH request will return 400.\n\n* The users who are receiving new authorization via PATCH must have corresponding dataset_permissions on their account authorization. For example, the user who is updated to have `edit: true` has a `dataset_permission` of `edit: true` on their account authorization. If not, the PATCH request will return 400.\n\n* The user that is PATCHing this catalog must have `share: true` for this dataset; if not, the PATCH request will return 403.\n\n## Inviting new users\nIt is possible to share a dataset with people that are not users of Crunch yet. To do so, it is necessary to send in an email address instead of a user URL as a sharing key.\n\n```\n{\n    \"somebody@email.com\": {\n        \"dataset_permissions\": {\n            \"edit\": false,\n            \"view\": true\n        },\n        \"profile\": {\n            \"weight\": null,\n            \"applied_filters\": []\n        }\n    },\n    \"send_notifications\": true\n}\n```\n\nA new user with such email address will be created and added to the account of the user that is making the request. The new user will receive an invitation email to Crunch.io with an activation link. In case the user exists on other or the same account, no changes to the user will be made.\n\nIf `send_notification` was included and true in the request, the user will receive a notification email informing her about the new shared dataset if requested so. New users, unless they have an OAuth provider specified, will need to set a password, and will receive an email with a link to do so.\n\n## Sending notification\n\nIf you share with a new user and don\u2019t include `send_notifications: true`, they will not receive an email inviting them to set a password for their new Crunch account. That\u2019s okay, though - they can always go to the web application and click `Forgot password` to send a new password reset token.",
        "operationId": "patch-datasets-dataset_id-permissions",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "a@crunch.io": {
                      "dataset_permissions": {
                        "edit": false,
                        "view": true
                      }
                    },
                    "b@crunch.io": {
                      "dataset_permissions": {
                        "edit": false,
                        "view": true
                      }
                    },
                    "dataset_url": "https://app.crunch.io/dataset/e46c50c99be9480b81706f9d6c037e17",
                    "foo@crunch.io": null,
                    "https://app.crunch.io/api/users/29e2a5378bfa42a1a6342937057d2713/": {
                      "dataset_permissions": {
                        "view": true
                      }
                    },
                    "https://app.crunch.io/api/users/8e46633f03b54069bee6b2561edf2c54/": {
                      "dataset_permissions": {
                        "view": true
                      }
                    },
                    "https://app.crunch.io/api/users/fb18705d265144efb2cc8d5f4fb653a1/": {
                      "dataset_permissions": {
                        "view": true
                      }
                    },
                    "message": "Please log in",
                    "send_notification": true,
                    "url_base": "https://app.crunch.io/password/change/${token}/"
                  }
                },
                "example-2": {
                  "value": {
                    "foo@crunch.io": {
                      "dataset_permissions": {
                        "edit": false,
                        "view": true
                      }
                    },
                    "send_notification": false
                  }
                },
                "example-3": {
                  "value": {
                    "foo@crunch.io": null
                  }
                },
                "example-4": {
                  "value": {
                    "a@crunch.io": {
                      "dataset_permissions": {
                        "edit": false,
                        "view": true
                      }
                    },
                    "b@crunch.io": {
                      "dataset_permissions": {
                        "edit": false,
                        "view": true
                      }
                    },
                    "send_notification": false
                  }
                },
                "example-5": {
                  "value": {
                    "dataset_url": "https://app.crunch.io/dataset/e46c50c99be9480b81706f9d6c037e17",
                    "https://app.crunch.io/api/users/29e2a5378bfa42a1a6342937057d2713/": {
                      "dataset_permissions": {
                        "view": true
                      }
                    },
                    "https://app.crunch.io/api/users/8e46633f03b54069bee6b2561edf2c54/": {
                      "dataset_permissions": {
                        "view": true
                      }
                    },
                    "https://app.crunch.io/api/users/fb18705d265144efb2cc8d5f4fb653a1/": {
                      "dataset_permissions": {
                        "view": true
                      }
                    },
                    "message": "New datasets for you!",
                    "send_notification": true,
                    "url_base": "https://app.crunch.io/password/change/${token}/"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "dataset_url": {
                    "format": "uri",
                    "type": "string",
                    "x-qt-uri-protocols": [
                      "https"
                    ]
                  },
                  "message": {
                    "type": "string"
                  },
                  "send_notification": {
                    "type": "boolean"
                  },
                  "url_base": {
                    "type": "string"
                  },
                  "user_email_address": {
                    "additionalProperties": false,
                    "properties": {
                      "dataset_permissions": {
                        "additionalProperties": false,
                        "properties": {
                          "edit": {
                            "type": "boolean"
                          },
                          "view": {
                            "type": "boolean"
                          }
                        },
                        "title": "ACrunchIoDatasetPermissions",
                        "type": "object"
                      }
                    },
                    "title": "CrunchIo",
                    "type": "object"
                  }
                },
                "title": "DatasetsDatasetIDPermissionsPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Add/change/revoke user access",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/permissions/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"a@crunch.io\": {\n    \"dataset_permissions\": {\n      \"edit\": false,\n      \"view\": true\n    }\n  },\n  \"b@crunch.io\": {\n    \"dataset_permissions\": {\n      \"edit\": false,\n      \"view\": true\n    }\n  },\n  \"dataset_url\": \"https://app.crunch.io/dataset/e46c50c99be9480b81706f9d6c037e17\",\n  \"foo@crunch.io\": null,\n  \"https://app.crunch.io/api/users/29e2a5378bfa42a1a6342937057d2713/\": {\n    \"dataset_permissions\": {\n      \"view\": true\n    }\n  },\n  \"https://app.crunch.io/api/users/8e46633f03b54069bee6b2561edf2c54/\": {\n    \"dataset_permissions\": {\n      \"view\": true\n    }\n  },\n  \"https://app.crunch.io/api/users/fb18705d265144efb2cc8d5f4fb653a1/\": {\n    \"dataset_permissions\": {\n      \"view\": true\n    }\n  },\n  \"message\": \"Please log in\",\n  \"send_notification\": true,\n  \"url_base\": \"https://app.crunch.io/password/change/${token}/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idPermissions = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/permissions/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"a@crunch.io\": {\n       \"dataset_permissions\": {\n         \"edit\": false,\n         \"view\": true\n       }\n     },\n     \"b@crunch.io\": {\n       \"dataset_permissions\": {\n         \"edit\": false,\n         \"view\": true\n       }\n     },\n     \"dataset_url\": \"https://app.crunch.io/dataset/e46c50c99be9480b81706f9d6c037e17\",\n     \"foo@crunch.io\": null,\n     \"https://app.crunch.io/api/users/29e2a5378bfa42a1a6342937057d2713/\":\n{\n       \"dataset_permissions\": {\n         \"view\": true\n       }\n     },\n     \"https://app.crunch.io/api/users/8e46633f03b54069bee6b2561edf2c54/\":\n{\n       \"dataset_permissions\": {\n         \"view\": true\n       }\n     },\n     \"https://app.crunch.io/api/users/fb18705d265144efb2cc8d5f4fb653a1/\":\n{\n       \"dataset_permissions\": {\n         \"view\": true\n       }\n     },\n     \"message\": \"Please log in\",\n     \"send_notification\": true,\n     \"url_base\": \"https://app.crunch.io/password/change/${token}/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/pk/": {
      "delete": {
        "description": "This endpoint unsets the primary key for this dataset.",
        "operationId": "delete-datasets-dataset_id-pk",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        },
        "summary": "Unset primary key",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/pk/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idPk = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/pk/', {\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "Setting a primary key on a dataset causes updates (particularly streamed updates) mentioning existing rows to be updated instead of new rows being inserted. A primary key can only be set on a variable that is type `numeric` or `text` and that has no duplicate or missing values, and it can only be set after that variable has been added to the dataset.\n\nThis endpoint returns a Shoji Entity. It contains one body key: pk, which is an array. The \u201cpk\u201d member indicates the URLs of the variables in the dataset which comprise the primary key. If there is no primary key for this dataset, the pk value will be `[]`.",
        "operationId": "get-datasets-dataset_id-pk",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "pk": [
                          "https://app.crunch.io/api/datasets/{dataset_id}/variables/000001/"
                        ]
                      },
                      "description": "Allows a user to get and set the primary key for a dataset",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/4b5bf85fc3dc4ec19ef2fa5f1ad64806/pk/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "pk": {
                          "items": {},
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPkGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List primary key",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/pk/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idPk = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/pk/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint will set a dataset's primary key. The `pk` key should be a list containing zero or more variable URLs. The variables referenced must be either text or numeric type and must have no duplicate or missing values. Setting pk to `[]` is equivalent to deleting the primary key for a dataset.\n\n**Note:** We currently support only a single primary key variable, so the POST payload array should be of length zero or one.",
        "operationId": "post-datasets-dataset_id-pk",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-3": {
                  "value": {
                    "body": {
                      "pk": [
                        "https://app.crunch.io/api/datasets/4b5bf85fc3dc4ec19ef2fa5f1ad64806/variables/5OxqquejALVYJf98REbSov000000/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "pk": {
                        "items": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "type": "array"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDPkPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Cannot use column as a primary key, unsupported data structure \"categorical\"\n"
                      ],
                      "message": "Cannot use column as a primary key, unsupported data structure \"categorical\"",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPkPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Set primary key",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/pk/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"pk\": []\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idPk = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/pk/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"pk\": []\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/preferences/": {
      "get": {
        "description": "Dataset preferences provide API clients with a key/value store for settings or customizations each would need for each user. The preferences shown are for your user account only and are not the same for all users of this dataset.\n\nBy default, all dataset preferences start out with only a weight key set to null, unless otherwise set.",
        "operationId": "get-datasets-dataset_id-preferences",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "selected_tags": [
                          "tag 1",
                          "tag 2",
                          "tag n"
                        ],
                        "weight": null
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/223fd4/preferences/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "selected_tags": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "weight": {
                          "type": "string"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDPreferencesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List user preferences",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/preferences/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idPreferences = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/preferences/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Use this endpoint to set preferences for this dataset. The preferences you set are for your user account only and are not applied to all users of this dataset. Preferences are unordered; clients should not assume that they are ordered.\n\n## Weight\n\nIf the dataset has `viewers_can_change_weight` setting set to `false`, then all users\u2019 preferences weight will be set to the dataset wide configured weight without any option to change it. Attempts to modify it will return a 403 response.\n\n## Selected tags\n\nIf the selected_tags preference is set to a non empty array, the API clients can use those tags to filter folders and show only variables that match the tags.\n\nTo delete attributes from the preferences resource, PATCH them with null.\n\n## Custom attributes\nYou can store any kind of user preference inside the body attribute that seems appropriate to you.\n",
        "operationId": "patch-datasets-dataset_id-preferences",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-2": {
                  "value": {
                    "body": {
                      "weight": "https://app.crunch.io/api/datasets/300774c82b3a4da084125272cfb47764/variables/6vBkjSr5HX4eZNo5pJQOkm00000a/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "weight": null
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "selected_tags": [
                        "cats"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "weight": {
                        "anyOf": [
                          {
                            "nullable": true
                          },
                          {
                            "format": "uri",
                            "type": "string",
                            "x-qt-uri-protocols": [
                              "https"
                            ]
                          }
                        ]
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDPreferencesPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "description": "Incorrect variable url was sent as weight."
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "A non-numeric value was set as weight."
          }
        },
        "summary": "Set user preferences",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/preferences/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"selected_tags\": [\n      \"nums\"\n    ],\n    \"weight\": \"https://app.crunch.io/api/datasets/9cba4e0243944cddaf4616c7f2d2af87/variables/3KfcZduiVZrmxyS4OQXQ0700000a/\"\n  },\n  \"element\": \"shoji:entity\",\n  \"weight\": \"https://app.crunch.io/api/datasets/449a1e2a77804903a170a2844d9c2396/variables/51302811eb2c4ba8a08df94b222dcba4/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idPreferences = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/preferences/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"selected_tags\": [\n         \"nums\"\n       ],\n       \"weight\": \"https://app.crunch.io/api/datasets/9cba4e0243944cddaf4616c7f2d2af87/variables/3KfcZduiVZrmxyS4OQXQ0700000a/\"\n     },\n     \"element\": \"shoji:entity\",\n     \"weight\": \"https://app.crunch.io/api/datasets/449a1e2a77804903a170a2844d9c2396/variables/51302811eb2c4ba8a08df94b222dcba4/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/publish/": {
      "get": {
        "description": "This endpoint returns a shoji entity with an `is_published` boolean attribute.",
        "operationId": "get-datasets-dataset_id-publish",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "is_published": false
                      },
                      "description": "Provides publish support for datasets",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/c723062b501248aea3dd08aa958b801c/publish/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "is_published": {
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPublishGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Is dataset published",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/publish/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idPublish = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/publish/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This API call allows to publish or unpublish this dataset. The related operation will also cause a re-routing of the dataset in case its publish status changes from `draft` to `public` and the dataset itself has a routing key associated with it. A sole lease operation is instead invoked in case the state is changed from `draft` to `public`, but the dataset has no routing key associated with it.",
        "operationId": "post-datasets-dataset_id-publish",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "is_published": false
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "is_published": true
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "properties": {
                      "is_published": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDPublishPostRequest",
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/22a014edb47e4e8aaf46ebf9677c3047/publish/",
                      "value": "https://app.crunch.io/api/progress/reroute_dataset%3A22a014edb47e4e8aaf46ebf9677c3047%249e5f4f93-3be0-443f-af7f-b09365de0b8c/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPublishPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Please specify a valid value for 'is_published\n"
                      ],
                      "message": "Please specify a valid value for 'is_published'",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDPublishPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Publish/unpublish dataset",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/publish/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"is_published\": false\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idPublish = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/publish/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n      \"element\": \"shoji:entity\",\n      \"body\": {\n        \"is_published\": false\n      }\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/export/": {
      "get": {
        "description": "This endpoint provides links you can use to export your dataset in different file formats.  Currently, the file formats supported are csv and spss.  The `views` attribute of this endpoint\u2019s response defines all formats available.",
        "operationId": "get-datasets-dataset_id-export",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/9c9b8a80cdd14901a09eb4971ef1f4f7/export/",
                      "views": {
                        "csv": "https://app.crunch.io/api/datasets/9c9b8a80cdd14901a09eb4971ef1f4f7/export/csv/",
                        "spss": "https://app.crunch.io/api/datasets/9c9b8a80cdd14901a09eb4971ef1f4f7/export/spss/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "csv": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "spss": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDExportGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List available export formats",
        "tags": [
          "Export Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/export/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idExport = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/export/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/export/{format}/": {
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Your chosen export format",
          "in": "path",
          "name": "format",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint triggers an asynchronous process that exports a dataset to one of several possible export formats. The request will return a 202 status with a Progress response in the body and a Location header pointing to the location of the exported file to be downloaded. Poll the progress URL for status on the completion of the export. When complete, GET the Location URL from the original response header to download the file.\n\nYou may also specify **filter**, **where**, **variables**, and/or **options** to export a subset of the dataset. See more information in the json schema below. \n\nThe following rules apply for all formats:\n\n* The dataset exclusion filter will be applied. The user\u2019s personal applied filters are not set unless they are explicitly included in the export request.\n* Hidden/discarded variables are not exported unless specified in a where clause which will also be evaluated over all non-hidden variables.\n* Personal/private variables are not exported unless indicated, then only the current user\u2019s personal variables will be exported.\n* Variables/columns will be ordered in a flattened version of the dataset\u2019s hierarchical order.\n* Derived variables will be exported with their values, without their functional links.\n\n### Options\nThe **options** object can contain additional properties specific to the export format requested:\n\n| Format | Attribute | Description | Default|\n| --- | --- | --- | --- | --- |\n| csv | use_category_ids | Export categorical data as its numeric IDs instead of category names | false |\n| csv | missing_values | If present, will use the specified string to indicate missing values. If omitted, will use the missing reason strings | omitted |\n| csv | header_field | Use the variable alias/name/description in the CSV header row, or null for no header row | \u201calias\u201d |\n| spss | var_label_field | Use the variable\u2019s name/description as SPSS variable label | \u201cdescription\u201d |\n| spss | prefix_subvariables | Prefix subvariable labels with the parent array variable label | false |\n| all | include_personal | Include the user\u2019s personal variables in the exported file | false |\n\n### SPSS\nCategorical-array and multiple-response variables will be exported as \u201cmrsets\u201d, as supported by SPSS. If the prefix_subvariables option is set to true, then subvariable labels will be prefixed with the parent label.\n\nTo pick which variable field to use on the label field on the SPSS variables, use the var_label_field in the options attribute in the POST body. The only valid fields are description and name.\n\n### CSV\n\nBy default, categorical variable values will be exported using the category name and missing values will use their corresponding reason string for all variables.\n\nThe missing values will be exported with their configured missing reason in the CSV file. If specified on the missing_values export option, then all missing values on all columns will use such string instead of the reason.\n\nTo control the output of the header row, use the header_field option. Valid values for this option are:\n\n* alias (default)\n* name\n* description\n* null - Sending null will make the resulting CSV without a header row.\n\nRefer to the options described on the table above for the csv format to change this behavior.",
        "operationId": "post-datasets-dataset_id-export-format",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "element": "shoji:view",
                    "filter": {
                      "args": [
                        {
                          "variable": "https://app.crunch.io/api/datasets/319b1745c5c04ae8a45e1f224634e2a9/variables/X/"
                        },
                        {
                          "value": 1
                        }
                      ],
                      "function": "=="
                    },
                    "options": {
                      "include_personal": true,
                      "missing_values": "NANANA",
                      "use_category_ids": false
                    },
                    "value": {
                      "filter": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/1d7efe799c0f4cd3b3b35367b2257b4d/variables/42tCUAvWQkaBwP1hw3eRZI000000/"
                          },
                          {
                            "value": 1
                          }
                        ],
                        "function": "=="
                      },
                      "options": {
                        "header_field": "alias",
                        "missing_values": "",
                        "use_category_ids": 1,
                        "var_label_field": "name"
                      },
                      "variables": [],
                      "where": {
                        "args": [
                          {
                            "id": [
                              "https://app.crunch.io/api/datasets/1eadac72641a4ab7a1d3cb6825c042b2/variables/377QJVJbXw8n5aWLGImKMh000000/"
                            ]
                          }
                        ],
                        "function": "identify"
                      }
                    },
                    "variables": [
                      "https://app.crunch.io/api/datasets/3c9db42556c64abd92b600514e363ac2/variables/0eEEg9wlsvjjeFWbsGRGdr000000/",
                      "https://app.crunch.io/api/datasets/3c9db42556c64abd92b600514e363ac2/variables/0eEEg9wlsvjjeFWbsGRGdr000001/"
                    ],
                    "where": {
                      "args": [
                        {
                          "map": {
                            "2n2TvkqRbHg5M7z0fUYdkZ000005": {
                              "variable": "https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000005/"
                            }
                          }
                        }
                      ],
                      "frame": {
                        "args": [
                          {
                            "map": {
                              "2n2TvkqRbHg5M7z0fUYdkZ000003": {
                                "variable": "https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000003/"
                              },
                              "2n2TvkqRbHg5M7z0fUYdkZ000004": {
                                "variable": "https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000004/"
                              },
                              "2n2TvkqRbHg5M7z0fUYdkZ000005": {
                                "variable": "https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000005/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      },
                      "function": "deselect"
                    }
                  }
                },
                "example-02": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "options": {
                        "header_field": "alias",
                        "missing_values": "",
                        "use_category_ids": false
                      },
                      "variables": [
                        "https://app.crunch.io/api/datasets/2b8ed5f47167490883b6f99fe0c2afb4/folders/",
                        "https://app.crunch.io/api/datasets/2b8ed5f47167490883b6f99fe0c2afb4/folders/hidden/"
                      ]
                    }
                  }
                },
                "example-03": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "options": {
                        "header_field": "alias",
                        "missing_values": "",
                        "use_category_ids": false
                      },
                      "variables": []
                    }
                  }
                },
                "example-04": {
                  "value": {
                    "element": "shoji:view",
                    "value": {}
                  }
                },
                "example-05": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "filter": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/fa899ff896b34ecda5ae67461045849a/variables/1hpeSSj6F53RaFJZdy0bi0000000/"
                          },
                          {
                            "value": 1
                          }
                        ],
                        "function": "=="
                      }
                    }
                  }
                },
                "example-06": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "where": {
                        "args": [
                          {
                            "id": [
                              "https://app.crunch.io/api/datasets/7df12f84b3754654a659547c8489c335/variables/3ODeXtscXTvYptI5ktrkhD000000/"
                            ]
                          }
                        ],
                        "function": "identify"
                      }
                    }
                  }
                },
                "example-07": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "where": {
                        "args": [
                          {
                            "map": {
                              "https://app.crunch.io/api/datasets/ebf802c26c3844269e2aab037342980b/variables/95fb953fc8364237a99496bc02dbacbe/": {
                                "variable": "https://app.crunch.io/api/datasets/ebf802c26c3844269e2aab037342980b/variables/95fb953fc8364237a99496bc02dbacbe/"
                              },
                              "https://app.crunch.io/api/datasets/ebf802c26c3844269e2aab037342980b/variables/c989672ef74546749a9814fdc18aba34/": {
                                "variable": "https://app.crunch.io/api/datasets/ebf802c26c3844269e2aab037342980b/variables/c989672ef74546749a9814fdc18aba34/"
                              },
                              "https://app.crunch.io/api/datasets/ebf802c26c3844269e2aab037342980b/variables/ef92414ad26a4c69a7407901f8929d47/": {
                                "variable": "https://app.crunch.io/api/datasets/ebf802c26c3844269e2aab037342980b/variables/ef92414ad26a4c69a7407901f8929d47/"
                              }
                            }
                          }
                        ],
                        "function": "select"
                      }
                    }
                  }
                },
                "example-08": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "options": {
                        "var_label_field": "name"
                      }
                    }
                  }
                },
                "example-09": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "options": {
                        "use_category_ids": 1
                      }
                    }
                  }
                },
                "example-10": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "filter": {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/1d7efe799c0f4cd3b3b35367b2257b4d/variables/42tCUAvWQkaBwP1hw3eRZI000000/"
                          },
                          {
                            "value": 1
                          }
                        ],
                        "function": "=="
                      }
                    }
                  }
                },
                "example-11": {
                  "value": {
                    "element": "shoji:view",
                    "value": {
                      "where": {
                        "args": [
                          {
                            "id": [
                              "https://app.crunch.io/api/datasets/1eadac72641a4ab7a1d3cb6825c042b2/variables/377QJVJbXw8n5aWLGImKMh000000/"
                            ]
                          }
                        ],
                        "function": "identify"
                      }
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-view-element"
                  },
                  "filter": {
                    "additionalProperties": false,
                    "description": "A Crunch filter expression defining a filter for the given export.",
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "integer"
                            },
                            "variable": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            }
                          },
                          "title": "FilterArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "function": {
                        "type": "string"
                      }
                    },
                    "title": "Filter",
                    "type": "object"
                  },
                  "options": {
                    "additionalProperties": false,
                    "properties": {
                      "include_personal": {
                        "type": "boolean"
                      },
                      "missing_values": {
                        "type": "string"
                      },
                      "use_category_ids": {
                        "type": "boolean"
                      }
                    },
                    "title": "DatasetsDatasetIDExportFormatPostRequestOptions",
                    "type": "object"
                  },
                  "value": {
                    "additionalProperties": false,
                    "properties": {
                      "filter": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                },
                                "variable": {
                                  "format": "uri",
                                  "type": "string",
                                  "x-qt-uri-protocols": [
                                    "https"
                                  ]
                                }
                              },
                              "title": "FilterArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "title": "Filter",
                        "type": "object"
                      },
                      "options": {
                        "additionalProperties": false,
                        "description": "An object of extra settings, which may be format specific. See descriptions above.",
                        "properties": {
                          "header_field": {
                            "type": "string"
                          },
                          "missing_values": {
                            "type": "string"
                          },
                          "use_category_ids": {
                            "title": "UseCategoryIDS",
                            "type": "boolean"
                          },
                          "var_label_field": {
                            "type": "string"
                          }
                        },
                        "title": "ValueOptions",
                        "type": "object"
                      },
                      "variables": {
                        "description": "An array of variable or folder URLs that indicate the variables to include. The subfolders mentioned will include all the subvariables under its subfolders as well.",
                        "items": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "type": "array"
                      },
                      "where": {
                        "additionalProperties": false,
                        "description": "A Crunch expression defining which variables to export.",
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "items": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  },
                                  "type": "array"
                                },
                                "map": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "variable": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      }
                                    },
                                    "required": [],
                                    "title": "2_N2TvkqRbHg5M7Z0FUYdkZ000005",
                                    "type": "object"
                                  },
                                  "type": "object"
                                }
                              },
                              "title": "PurpleArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "title": "ValueWhere",
                        "type": "object"
                      }
                    },
                    "title": "Value",
                    "type": "object"
                  },
                  "variables": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  },
                  "where": {
                    "additionalProperties": false,
                    "properties": {
                      "args": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "map": {
                              "additionalProperties": false,
                              "properties": {
                                "2n2TvkqRbHg5M7z0fUYdkZ000005": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "variable": {
                                      "format": "uri",
                                      "type": "string",
                                      "x-qt-uri-protocols": [
                                        "https"
                                      ]
                                    }
                                  },
                                  "title": "2_N2TvkqRbHg5M7Z0FUYdkZ000005",
                                  "type": "object"
                                }
                              },
                              "title": "Map",
                              "type": "object"
                            }
                          },
                          "title": "FluffyArg",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "frame": {
                        "additionalProperties": false,
                        "properties": {
                          "args": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "map": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "variable": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      }
                                    },
                                    "required": [],
                                    "title": "2_N2TvkqRbHg5M7Z0FUYdkZ000005",
                                    "type": "object"
                                  },
                                  "type": "object"
                                }
                              },
                              "title": "FrameArg",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "type": "string"
                          }
                        },
                        "title": "Frame",
                        "type": "object"
                      },
                      "function": {
                        "type": "string"
                      }
                    },
                    "title": "DatasetsDatasetIDExportFormatPostRequestWhere",
                    "type": "object"
                  }
                },
                "title": "DatasetsDatasetIDExportFormatPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/export/csv/",
                      "value": "https://app.crunch.io/api/progress/export_dataset%3A5930dcee3e0b4b9aa66937da08894f77%2410c6a85dfaef937f340e832f193c19fd/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDExportFormatPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Export in progress",
            "headers": {
              "Location": {
                "description": "URL where export will be delivered when completed",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Filter references invalid variables: 5F5DYtoMtCMomZAjTLKJAT000000"
                      ],
                      "message": "Filter references invalid variables: 5F5DYtoMtCMomZAjTLKJAT000000",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDExportFormatPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Export dataset",
        "tags": [
          "Export Data"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/export/{format}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:view\",\n  \"filter\": {\n    \"args\": [\n      {\n        \"variable\": \"https://app.crunch.io/api/datasets/319b1745c5c04ae8a45e1f224634e2a9/variables/X/\"\n      },\n      {\n        \"value\": 1\n      }\n    ],\n    \"function\": \"==\"\n  },\n  \"options\": {\n    \"include_personal\": true,\n    \"missing_values\": \"NANANA\",\n    \"use_category_ids\": false\n  },\n  \"value\": {\n    \"filter\": {\n      \"args\": [\n        {\n          \"variable\": \"https://app.crunch.io/api/datasets/1d7efe799c0f4cd3b3b35367b2257b4d/variables/42tCUAvWQkaBwP1hw3eRZI000000/\"\n        },\n        {\n          \"value\": 1\n        }\n      ],\n      \"function\": \"==\"\n    },\n    \"options\": {\n      \"header_field\": \"alias\",\n      \"missing_values\": \"\",\n      \"use_category_ids\": 1,\n      \"var_label_field\": \"name\"\n    },\n    \"variables\": [],\n    \"where\": {\n      \"args\": [\n        {\n          \"id\": [\n            \"https://app.crunch.io/api/datasets/1eadac72641a4ab7a1d3cb6825c042b2/variables/377QJVJbXw8n5aWLGImKMh000000/\"\n          ]\n        }\n      ],\n      \"function\": \"identify\"\n    }\n  },\n  \"variables\": [\n    \"https://app.crunch.io/api/datasets/3c9db42556c64abd92b600514e363ac2/variables/0eEEg9wlsvjjeFWbsGRGdr000000/\",\n    \"https://app.crunch.io/api/datasets/3c9db42556c64abd92b600514e363ac2/variables/0eEEg9wlsvjjeFWbsGRGdr000001/\"\n  ],\n  \"where\": {\n    \"args\": [\n      {\n        \"map\": {\n          \"2n2TvkqRbHg5M7z0fUYdkZ000005\": {\n            \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000005/\"\n          }\n        }\n      }\n    ],\n    \"frame\": {\n      \"args\": [\n        {\n          \"map\": {\n            \"2n2TvkqRbHg5M7z0fUYdkZ000003\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000003/\"\n            },\n            \"2n2TvkqRbHg5M7z0fUYdkZ000004\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000004/\"\n            },\n            \"2n2TvkqRbHg5M7z0fUYdkZ000005\": {\n              \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000005/\"\n            }\n          }\n        }\n      ],\n      \"function\": \"select\"\n    },\n    \"function\": \"deselect\"\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idExportFormat = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/export/{format}/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:view\",\n     \"filter\": {\n       \"args\": [\n         {\n           \"variable\": \"https://app.crunch.io/api/datasets/319b1745c5c04ae8a45e1f224634e2a9/variables/X/\"\n         },\n         {\n           \"value\": 1\n         }\n       ],\n       \"function\": \"==\"\n     },\n     \"options\": {\n       \"include_personal\": true,\n       \"missing_values\": \"NANANA\",\n       \"use_category_ids\": false\n     },\n     \"value\": {\n       \"filter\": {\n         \"args\": [\n           {\n             \"variable\": \"https://app.crunch.io/api/datasets/1d7efe799c0f4cd3b3b35367b2257b4d/variables/42tCUAvWQkaBwP1hw3eRZI000000/\"\n           },\n           {\n             \"value\": 1\n           }\n         ],\n         \"function\": \"==\"\n       },\n       \"options\": {\n         \"header_field\": \"alias\",\n         \"missing_values\": \"\",\n         \"use_category_ids\": 1,\n         \"var_label_field\": \"name\"\n       },\n       \"variables\": [],\n       \"where\": {\n         \"args\": [\n           {\n             \"id\": [\n               \"https://app.crunch.io/api/datasets/1eadac72641a4ab7a1d3cb6825c042b2/variables/377QJVJbXw8n5aWLGImKMh000000/\"\n             ]\n           }\n         ],\n         \"function\": \"identify\"\n       }\n     },\n     \"variables\": [\n       \"https://app.crunch.io/api/datasets/3c9db42556c64abd92b600514e363ac2/variables/0eEEg9wlsvjjeFWbsGRGdr000000/\",\n       \"https://app.crunch.io/api/datasets/3c9db42556c64abd92b600514e363ac2/variables/0eEEg9wlsvjjeFWbsGRGdr000001/\"\n     ],\n     \"where\": {\n       \"args\": [\n         {\n           \"map\": {\n             \"2n2TvkqRbHg5M7z0fUYdkZ000005\": {\n               \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000005/\"\n             }\n           }\n         }\n       ],\n       \"frame\": {\n         \"args\": [\n           {\n             \"map\": {\n               \"2n2TvkqRbHg5M7z0fUYdkZ000003\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000003/\"\n               },\n               \"2n2TvkqRbHg5M7z0fUYdkZ000004\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000004/\"\n               },\n               \"2n2TvkqRbHg5M7z0fUYdkZ000005\": {\n                 \"variable\": \"https://app.crunch.io/api/datasets/5930dcee3e0b4b9aa66937da08894f77/variables/2n2TvkqRbHg5M7z0fUYdkZ000005/\"\n               }\n             }\n           }\n         ],\n         \"function\": \"select\"\n       },\n       \"function\": \"deselect\"\n     }\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/schema/": {
      "get": {
        "description": "This endpoint returns schema-variable definitions for a given dataset. If you are the dataset editor, it will include secure variables. Otherwise, only public variables are returned.",
        "operationId": "get-datasets-dataset_id-schema",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Schema-variable definitions for this dataset",
                      "element": "crunch:table",
                      "metadata": {
                        "ca0": {
                          "alias": "ca0",
                          "categories": [
                            {
                              "id": 2,
                              "missing": false,
                              "name": "0.0",
                              "numeric_value": 0
                            },
                            {
                              "id": 3,
                              "missing": false,
                              "name": "1.0",
                              "numeric_value": 1
                            },
                            {
                              "id": 1,
                              "missing": true,
                              "name": "missing",
                              "numeric_value": null
                            },
                            {
                              "id": -1,
                              "missing": true,
                              "name": "No Data",
                              "numeric_value": null
                            }
                          ],
                          "derived": false,
                          "description": "",
                          "name": "M",
                          "notes": "",
                          "subvariables": [
                            {
                              "alias": "X",
                              "description": null,
                              "name": "X"
                            },
                            {
                              "alias": "Y",
                              "description": null,
                              "name": "Y"
                            },
                            {
                              "alias": "Z",
                              "description": null,
                              "name": "Z"
                            }
                          ],
                          "type": "categorical_array"
                        },
                        "ca1": {
                          "alias": "ca1",
                          "categories": [
                            {
                              "id": 2,
                              "missing": false,
                              "name": "0.0",
                              "numeric_value": 0
                            },
                            {
                              "id": 1,
                              "missing": false,
                              "name": "1.0",
                              "numeric_value": 1
                            },
                            {
                              "id": -1,
                              "missing": true,
                              "name": "No Data",
                              "numeric_value": null
                            }
                          ],
                          "derived": false,
                          "description": "",
                          "name": "V",
                          "notes": "",
                          "subvariables": [
                            {
                              "alias": "A",
                              "description": null,
                              "name": "A"
                            },
                            {
                              "alias": "B",
                              "description": null,
                              "name": "B"
                            },
                            {
                              "alias": "C",
                              "description": null,
                              "name": "C"
                            }
                          ],
                          "type": "categorical_array"
                        },
                        "wt": {
                          "alias": "wt",
                          "derived": false,
                          "description": "",
                          "missing_reasons": {
                            "No Data": -1
                          },
                          "name": "wt",
                          "notes": "",
                          "type": "numeric"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/16758e5ca2a5481c83da32b1b6465e46/schema/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Crunch-table-element"
                    },
                    "metadata": {
                      "additionalProperties": false,
                      "properties": {
                        "ca0": {
                          "additionalProperties": false,
                          "properties": {
                            "alias": {
                              "type": "string"
                            },
                            "categories": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "missing": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "numeric_value": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "nullable": true
                                      }
                                    ]
                                  }
                                },
                                "title": "Category",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "derived": {
                              "type": "boolean"
                            },
                            "description": {
                              "type": "string"
                            },
                            "missing_reasons": {
                              "additionalProperties": false,
                              "properties": {
                                "No Data": {
                                  "type": "integer"
                                }
                              },
                              "title": "MissingReasons",
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "subvariables": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "alias": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "title": "Subvariable",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "title": "Ca0",
                          "type": "object"
                        },
                        "ca1": {
                          "additionalProperties": false,
                          "properties": {
                            "alias": {
                              "type": "string"
                            },
                            "categories": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "missing": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "numeric_value": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "nullable": true
                                      }
                                    ]
                                  }
                                },
                                "title": "Category",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "derived": {
                              "type": "boolean"
                            },
                            "description": {
                              "type": "string"
                            },
                            "missing_reasons": {
                              "additionalProperties": false,
                              "properties": {
                                "No Data": {
                                  "type": "integer"
                                }
                              },
                              "title": "MissingReasons",
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "subvariables": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "alias": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "title": "Subvariable",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "title": "Ca0",
                          "type": "object"
                        },
                        "wt": {
                          "additionalProperties": false,
                          "properties": {
                            "alias": {
                              "type": "string"
                            },
                            "categories": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "missing": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "numeric_value": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "nullable": true
                                      }
                                    ]
                                  }
                                },
                                "title": "Category",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "derived": {
                              "type": "boolean"
                            },
                            "description": {
                              "type": "string"
                            },
                            "missing_reasons": {
                              "additionalProperties": false,
                              "properties": {
                                "No Data": {
                                  "type": "integer"
                                }
                              },
                              "title": "MissingReasons",
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "subvariables": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "alias": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "title": "Subvariable",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "title": "Ca0",
                          "type": "object"
                        }
                      },
                      "title": "Metadata",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDSchemaGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "View dataset schema",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/schema/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idSchema = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/schema/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/scripts/": {
      "get": {
        "description": "This endpoint returns an index of all Crunch Automation scripts that have been successfully executed.\n\nFor more information, see [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360041769292-Crunch-Automation-basics).",
        "operationId": "get-datasets-dataset_id-scripts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {},
                      "self": "https://app.crunch.io/api/datasets/060fe1badd0f42c5b84d65e81e3f8125/scripts/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDScriptsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List scripts",
        "tags": [
          "Crunch Automation"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/scripts/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idScripts = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/scripts/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint accepts a new Crunch Automation script text inside a shoji-document body attribute and performs a synchronous validation of the script contents and consistency against the current dataset schema. \n\nIn case of error, the server will return a 400 error response with a **crunch:error** as the body containing the list of errors.\n\nThe errors will be under the resolutions key containing a list of errors descriptions indicating the command number, and script line and column where for each error.\n\nIn the case of a successful validation, the server will return a 202 response with a **shoji:view** response body pointing to a progress indicator to follow the script execution status.\n\nThe dataset remains locked for changes during this script execution period.\n\nOn success, the new script entity will be created and available from the scripts catalog.\n\nFor more information, see [Crunch Help Center](https://help.crunch.io/hc/en-us/articles/360041769292-Crunch-Automation-basics).",
        "operationId": "post-datasets-dataset_id-scripts",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "body": "REPLACE TITLE IN Age WITH \"Edad\";"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "body": "\n\n\nRENAME q1a_b, q1a_c TO q1a_2, q1a_3;\n\nORGANIZE UniqueID into hidden;\n\n## RENAMING AND GROUPING ## \n\nREPLACE TITLE IN date WITH \"Date\";\n\nREPLACE TITLE IN d1 WITH \"Age Categories\";\nREPLACE DESCRIPTION IN d1 WITH \"What is your age?\";\n\nREPLACE TITLE IN d2 WITH \"Income\";\nREPLACE DESCRIPTION IN d2 WITH \"What is your gross household income?\";\n\nREPLACE TITLE IN d3 WITH \"Gender\";\nREPLACE DESCRIPTION IN d3 WITH \"Are you male or female?\";\n\nREPLACE TITLE IN d4 WITH \"Living arrangements\";\nREPLACE DESCRIPTION IN d3 WITH \"What is your household like?\";\n\n## d4o should be back-coded into something in d4\n\nORGANIZE q1a_1, q1a_2, q1a_3 into hidden \"|\";\n\nCREATE MULTIPLE DICHOTOMY\n    q1b_1, q1b_2, q1b_3, q1b_4, q1b_5, q1b_6\n    LABELS \"Coca-Cola\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\"\n    SELECTED 1\n\tAS q1b\n\tNAME \"Awareness\";\n\nORGANIZE q2a_1, q2a_2, q2a_3, q2a_4, q2a_5, q2a_6 into \"Number of colas consumed | At Home\";\nORGANIZE q2b_1, q2b_2, q2b_3, q2b_4, q2b_5, q2b_6 into \"Number of colas consumed | At Work\";\n\n\nSET EXCLUSION q3 = \"Dislike all cola\";\n\nREPLACE TITLE IN q3 WITH \"Main Cola\";\nREPLACE DESCRIPTION IN q3 WITH \"Which of the following is your fav cola?\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5a1, q5a2, q5a3, q5a4, q5a5, q5a6, q5a7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_feminine\n\tNAME \"Feminine\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5b1, q5b2, q5b3, q5b4, q5b5, q5b6, q5b7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_heath_conscious\n\tNAME \"Health Conscious\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5c1, \n    q5c2, \n    q5c3, \n    q5c4, \n    q5c5, \n    q5c6, \n    q5c7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_innocent\n\tNAME \"Innocent\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5d1, \n    q5d2, \n    q5d3, \n    q5d4, \n    q5d5, \n    q5d6, \n    q5d7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_older\n\tNAME \"Older\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5e1, \n    q5e2, \n    q5e3, \n    q5e4, \n    q5e5, \n    q5e6, \n    q5e7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_innocent2\n\tNAME \"Open to new experiences\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5f1, \n    q5f2, \n    q5f3, \n    q5f4, \n    q5f5, \n    q5f6, \n    q5f7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_rebellious\n\tNAME \"Rebellious\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5g1, \n    q5g2, \n    q5g3, \n    q5g4, \n    q5g5, \n    q5g6, \n    q5g7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_sleepy\n\tNAME \"Sleepy\";\n\nCREATE MULTIPLE DICHOTOMY\n    q5i1, \n    q5i2, \n    q5i3, \n    q5i4, \n    q5i5, \n    q5i6, \n    q5i7\n    LABELS \"Coke\", \"Diet Coke\", \"Coke Zero\", \"Pepsi\", \"Diet Pepsi\", \"Pepsi Max\", \"None of these\"\n    SELECTED 1\n\tAS q5_traditional\n\tNAME \"Traditional\";\n\nORGANIZE q6oe INTO hidden;\n\nREPLACE TITLE IN q7 WITH \"Weight-consciousness\";\nREPLACE DESCRIPTION IN q7 WITH \"Which of the following best describes you?\";\n\nREPLACE TITLE IN q8 WITH \"Exercise frequency\";\nREPLACE DESCRIPTION IN q8 WITH \"Do you even lift?\";\n\nDISPLAY\n\tq8 \n\tSUBTOTAL 1...4 LABEL \"At least weekly\" POSITION BOTTOM;\n\nORGANIZE \n\tq9_6_8,\n\tq9_6_7,\n\tq9_6_6,\n\tq9_6_5,\n\tq9_6_4,\n\tq9_6_3,\n\tq9_6_2,\n\tq9_6_1,\n\tq9_6_0,\n\tq9_5_8,\n\tq9_5_7,\n\tq9_5_6,\n\tq9_5_5,\n\tq9_5_4,\n\tq9_5_3,\n\tq9_5_2,\n\tq9_5_1,\n\tq9_5_0,\n\tq9_4_8,\n\tq9_4_7,\n\tq9_4_6,\n\tq9_4_5,\n\tq9_4_4,\n\tq9_4_3,\n\tq9_4_2,\n\tq9_4_1,\n\tq9_4_0,\n\tq9_3_8,\n\tq9_3_7,\n\tq9_3_6,\n\tq9_3_5,\n\tq9_3_4,\n\tq9_3_3,\n\tq9_3_2,\n\tq9_3_1,\n\tq9_3_0,\n\tq9_2_8,\n\tq9_2_7,\n\tq9_2_6,\n\tq9_2_5,\n\tq9_2_4,\n\tq9_2_3,\n\tq9_2_2,\n\tq9_2_1,\n\tq9_2_0,\n\tq9_1_8,\n\tq9_1_7,\n\tq9_1_6,\n\tq9_1_5,\n\tq9_1_4,\n\tq9_1_3,\n\tq9_1_2,\n\tq9_1_1,\n\tq9_1_0,\n\tq9_0_8,\n\tq9_0_7,\n\tq9_0_6,\n\tq9_0_5,\n\tq9_0_4,\n\tq9_0_3,\n\tq9_0_2,\n\tq9_0_1,\n\tq9_0_0\n\tINTO \"Max Diff\";\n\n\n# q4a\n# q4b\n# q4c\n# q4d\n# q4e\n# q4f\n"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "body": "CONVERT A, B, C TO CATEGORICAL;\nCONVERT wt TO NUMERIC;\nREPLACE DESCRIPTION IN A,B,C WITH \"Subvariable\";\nCREATE CATEGORICAL ARRAY A, B, C AS my_ca2 NAME \"My Categorical Array from script\"\n    DESCRIPTION \"Created from subvars\" NOTES \"Nothing to note\";\nCREATE MULTIPLE DICHOTOMY FROM my_ca SELECTED 1 AS my_mr1 NAME \"MR From array\";\nCREATE MULTIPLE DICHOTOMY A, B, C SELECTED 1 AS my_mr2 NAME \"MR From subvars\";\n\n# Check that new variables can be organized\nORGANIZE my_ca2,my_mr1,my_mr2 INTO \"arrays\";"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "body": "# Testing scripts\n\n# Ensure types of variables\nCONVERT q1...q5 TO CATEGORICAL;\nCONVERT A,B,C,wt TO NUMERIC;\nCONVERT D TO CATEGORICAL;\nCONVERT E TO TEXT;\n\n# Do some renames\nRENAME A TO pk;\nRENAME B TO random;\nRENAME C TO Age;\nRENAME D TO Gender;\nRENAME E TO text;\n\n# Create a MR variable from\n# variables q1 to q5\nCREATE MULTIPLE DICHOTOMY q1...q5 SELECTED 1\n    # There are the name, alias, etc\n    AS my_mr1 NAME \"My Multiple Response\" NOTES \"Created from\nscript\";\n# This one creates a MR from an existing CA `array`\nCREATE MULTIPLE DICHOTOMY FROM array SELECTED 1\n    AS my_mr2 NAME \"My MR from Array\" NOTES \"Created from script\ntoo\";\n\nCREATE CATEGORICAL ARRAY q1...q5\n    AS my_ca NAME \"My Categorical Array\" DESCRIPTION \"From q1\nto q5\";\n\n# Edit variable properties\nREPLACE TITLE IN Age WITH \"Respondent Age\";\nREPLACE DESCRIPTION IN Gender WITH \"M/F values\";\nREPLACE TITLE IN text WITH \"Free text response\";\nREPLACE TITLE IN wt WITH \"Weight\";\nREPLACE NOTES IN random,pk WITH \"Do not use these\";\nREPLACE DESCRIPTION IN q1...q5 WITH \"Subvariables for arrays\";\n\n# Organize into folders\nORGANIZE Age, Gender INTO \"Survey|Demographics\";\nORGANIZE text INTO \"Survey|Responses\";\n\nORGANIZE my_mr1, my_mr2, my_ca INTO \"Arrays|Derived\";\nORGANIZE array INTO \"Arrays|Base\";\n\n# Move into different roots, hide/secure\nORGANIZE pk INTO SECURE \"Control|PII\";\nORGANIZE random INTO SECURE \"Control|Randomization\";\nORGANIZE wt INTO HIDDEN \"Weight variables\";\nORGANIZE q1...q5 INTO HIDDEN \"Subvariables\";"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-5": {
                  "value": {
                    "body": {
                      "body": "# This is a test script\n# Set some types\nCONVERT A, B TO CATEGORICAL;\nCONVERT C TO NUMERIC;\nCONVERT X,Y,Z TO TEXT;\nCONVERT wt TO NUMERIC;\n\n# Normalize aliases\nRENAME A, B TO letterA, letterB;\nRENAME C TO NumC;\n\n# Exclude rows without weights\nSET EXCLUSION wt == 0;\n\n# Some organization\nORGANIZE letterA, letterB INTO \"Letters|first\";\nORGANIZE NumC INTO \"Numbers\";\nORGANIZE X,Y,Z INTO \"Letters|second\";\nORGANIZE wt INTO \"Weights\";\n\n# Run the replace command\nREPLACE TITLE IN letterA WITH \"Letter A\";\nREPLACE DESCRIPTION IN X, Y, Z WITH \"Last letters\";\n\nCREATE FILTER wt > 0.5 NAME \"More than half\";"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-6": {
                  "value": {
                    "body": {
                      "body": "CREATE NUMERIC\n2020 - birthyr\nAS age\nNAME \"Age\"\nDESCRIPTION \"Current Age\"\nNOTES \"As of 2020\";"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-7": {
                  "value": {
                    "body": {
                      "body": "ORGANIZE A, B, C INTO \"Letters|all\";\nORGANIZE X,Y,Z INTO \"Letters|all\";\nORGANIZE wt INTO \"Weights\";"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "body": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDScriptsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/060fe1badd0f42c5b84d65e81e3f8125/scripts/",
                      "value": "https://app.crunch.io/api/progress/run_script_task%3A060fe1badd0f42c5b84d65e81e3f8125%24dfeb9103-9827-4052-b23f-1815d74f9ea8/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDScriptsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Task in progress. Returns url that can be used to track execution status. See **Task Progress** endpoint documentation for more information."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Errors processing the script",
                      "element": "crunch:error",
                      "resolutions": [
                        {
                          "column": 0,
                          "command": 0,
                          "line": 0,
                          "message": "Cannot run multiple scripts on a dataset"
                        }
                      ],
                      "self": "https://app.crunch.io/api/datasets/fe78bf4e36124e4ba6543cd9de3da0d9/scripts/",
                      "type": "script:validation"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "type": "string"
                    },
                    "resolutions": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "column": {
                            "type": "integer"
                          },
                          "command": {
                            "type": "integer"
                          },
                          "line": {
                            "type": "integer"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Resolution",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDScriptsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create script",
        "tags": [
          "Crunch Automation"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/scripts/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"body\": \"REPLACE TITLE IN Age WITH \\\"Edad\\\";\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idScripts = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/scripts/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"body\": \"REPLACE TITLE IN Age WITH \\\"Edad\\\";;\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/scripts/output/": {
      "delete": {
        "description": "There are two ways to revert the output of a script:\n\n* A **soft** delete (or undo) of a script's created artifacts and variables, or\n* A **hard** revert (or restore) that returns the dataset to the state it was before running such script.\n\nThe difference between both is that a hard revert restores the dataset, as it drops all ensuing scripts and their output (artifacts and variables), while an undo only deletes the artifacts and variables created by this script, but changes made by other scripts and this script's record will remain in place. In both cases, the associated script will be deleted.\n\n**This endpoint performs a soft delete or undo.**\n\nIn cases where there are any dependencies that prevent the artifacts from being deleted, the request will return a 409 response.",
        "operationId": "get-datasets-dataset_id-scripts",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "summary": "Undo",
        "tags": [
          "Crunch Automation"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/scripts/output/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idScripts = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/scripts/output/', {\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/scripts/revert/": {
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "There are two ways to revert the output of a script:\n\n* A **soft** delete (or undo) of a script's created artifacts and variables, or\n* A **hard** revert (or restore) that returns the dataset to the state it was before running such script.\n\nThe difference between both is that a hard revert restores the dataset, as it drops all ensuing scripts and their output (artifacts and variables), while an undo only deletes the artifacts and variables created by this script, but changes made by other scripts and this script's record will remain in place. In both cases, the associated script will be deleted.\n\n**This endpoint performs a hard revert or restore.**\n\nThe application stores a savepoint of the dataset directly before the execution of the commands in a script.\n\nTo perform a script-driven restore where all the associated non-versioned artifacts are deleted, the client must send a POST request to the revert endpoint. This will fire up an asynchronous task to iteratively drop all the artifacts from all scripts and restore the dataset.\n\nIn cases where there are any dependencies that prevent this script from being reverted, the request will return a 409 response.",
        "operationId": "get-datasets-dataset_id-scripts",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "summary": "Restore",
        "tags": [
          "Crunch Automation"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/scripts/revert/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idScripts = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/scripts/revert/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/scripts/{script_id}/": {
      "get": {
        "description": "This endpoint returns details about any given script.",
        "operationId": "get-datasets-dataset_id-scripts-script_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "body": "REPLACE TITLE IN Age WITH \"Edad\";",
                        "creation_time": "2020-09-02T00:49:13.011000+00:00",
                        "items_created": 0,
                        "mutations": true
                      },
                      "catalogs": {
                        "output": "http://local.crunch.io:38918/api/datasets/3ab8dce790964c9f884339ca76b66943/scripts/36579da0997848f3afa5360d3a18a149/output/"
                      },
                      "element": "shoji:entity",
                      "fragments": {
                        "revert": "http://local.crunch.io:38918/api/datasets/3ab8dce790964c9f884339ca76b66943/scripts/36579da0997848f3afa5360d3a18a149/revert/"
                      },
                      "self": "http://local.crunch.io:38918/api/datasets/3ab8dce790964c9f884339ca76b66943/scripts/36579da0997848f3afa5360d3a18a149/",
                      "views": {
                        "savepoint": "http://local.crunch.io:38918/api/datasets/3ab8dce790964c9f884339ca76b66943/savepoints/4d250962ae0b4d37bb6dd549e8616eb3/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "body": {
                          "description": "Script text",
                          "type": "string"
                        },
                        "creation_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "items_created": {
                          "type": "number"
                        },
                        "mutations": {
                          "type": "boolean"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "properties": {
                        "output": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "fragments": {
                      "properties": {
                        "revert": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "savepoint": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "DatasetsDatasetIDScriptsScriptIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "message": {
                        "dataset_id": "69ee37f9bf6e40a29858e5ff140dcc5f",
                        "id": "4aa1137302294badab559c6dba9cfcf2",
                        "version": "master__tip"
                      },
                      "status": 404,
                      "url": "/datasets/69ee37f9bf6e40a29858e5ff140dcc5f/scripts/4aa1137302294badab559c6dba9cfcf2/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "additionalProperties": false,
                      "properties": {
                        "dataset_id": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Message",
                      "type": "object"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDScriptsScriptIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Script details",
        "tags": [
          "Crunch Automation"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/scripts/{script_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idScriptsScript_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/scripts/{script_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the script you are working with",
          "in": "path",
          "name": "script_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/cube/": {
      "get": {
        "description": "In the Crunch system, any analysis is also referred to as a **cube**. Cubes are the mechanical means of representing analyses to and from the Crunch system; you can think of them as spreadsheets that might have more than two dimensions.\n\nFor more information, visit [Multidimensional Analysis](https://help.crunch.io/hc/en-us/articles/360044737751-Multidimensional-Analysis).",
        "operationId": "get-datasets-dataset_id-cube",
        "parameters": [
          {
            "description": "An expression containing dimensions and measures.",
            "in": "query",
            "name": "query",
            "schema": {
              "default": "{\"dimensions\":[{\"variable\":\"https://app.crunch.io/api/datasets/58772f1b724f4e49aa8044f621aafad0/variables/0y76lIEcFJQ35OskK0z9FG000003/\"}],\"measures\":{\"count\":{\"function\":\"cube_count\",\"args\":[]}},\"weight\":null}",
              "example": "{\"dimensions\":[{\"variable\":\"https://app.crunch.io/api/datasets/58772f1b724f4e49aa8044f621aafad0/variables/0y76lIEcFJQ35OskK0z9FG000003/\"}],\"measures\":{\"count\":{\"function\":\"cube_count\",\"args\":[]}},\"weight\":null}",
              "type": "string"
            }
          },
          {
            "description": "An expression that filters the rows considered in the cube. If omitted, all (non-excluded) rows in the dataset are considered.",
            "in": "query",
            "name": "filter",
            "schema": {
              "default": "{\"function\":\"==\",\"args\":[{\"variable\":\"https://app.crunch.io/api/datasets/58772f1b724f4e49aa8044f621aafad0/variables/0y76lIEcFJQ35OskK0z9FG000003/\"},{\"value\":2}]}",
              "example": "{\"function\":\"==\",\"args\":[{\"variable\":\"https://app.crunch.io/api/datasets/58772f1b724f4e49aa8044f621aafad0/variables/0y76lIEcFJQ35OskK0z9FG000003/\"},{\"value\":2}]}",
              "type": "string"
            }
          },
          {
            "description": "If false, will compute the cube with the dataset\u2019s exclusion filter removed. Only users with \u201cedit\u201d permissions on the dataset may query without the exclusion filter.",
            "in": "query",
            "name": "exclusion",
            "schema": {
              "default": "0",
              "example": "0",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/ca55aacc30544491a22046d54daf8b96/cube/?query=%7B%22measures%22%3A%7B%22count%22%3A%7B%22function%22%3A%22cube_count%22%2C%22args%22%3A%5B%5D%7D%7D%2C%22dimensions%22%3A%5B%7B%22variable%22%3A%22https%3A%2F%2Fapp.crunch.io%2Fapi%2Fdatasets%2Fca55aacc30544491a22046d54daf8b96%2Fvariables%2Feddef8d38ab444dab14472a08320f10e%2F%22%7D%5D%7D",
                      "value": {
                        "query": {
                          "dimensions": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/ca55aacc30544491a22046d54daf8b96/variables/eddef8d38ab444dab14472a08320f10e/"
                            }
                          ],
                          "measures": {
                            "count": {
                              "args": [],
                              "function": "cube_count"
                            }
                          },
                          "weight": null
                        },
                        "query_environment": {
                          "filter": []
                        },
                        "result": {
                          "counts": [
                            6,
                            5,
                            3,
                            0
                          ],
                          "dimensions": [
                            {
                              "derived": true,
                              "references": {
                                "alias": "Zesty_Sentiment",
                                "name": "Zesty Sentiment"
                              },
                              "type": {
                                "categories": [
                                  {
                                    "id": 1,
                                    "name": "Positive",
                                    "numeric_value": 1
                                  },
                                  {
                                    "id": 2,
                                    "name": "Neutral",
                                    "numeric_value": 0
                                  },
                                  {
                                    "id": 3,
                                    "name": "Negative",
                                    "numeric_value": -1
                                  },
                                  {
                                    "id": -1,
                                    "missing": true,
                                    "name": "No Data",
                                    "numeric_value": null
                                  }
                                ],
                                "class": "categorical",
                                "ordinal": false
                              }
                            }
                          ],
                          "element": "crunch:cube",
                          "filter_stats": {
                            "filtered": {
                              "unweighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 14
                              },
                              "weighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 14
                              }
                            },
                            "filtered_complete": {
                              "unweighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 14
                              },
                              "weighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 14
                              }
                            }
                          },
                          "filtered": {
                            "unweighted_n": 14,
                            "weighted_n": 14
                          },
                          "measures": {
                            "count": {
                              "data": [
                                6,
                                5,
                                3,
                                0
                              ],
                              "metadata": {
                                "derived": true,
                                "references": {},
                                "type": {
                                  "class": "numeric",
                                  "integer": true,
                                  "missing_reasons": {
                                    "No Data": -1
                                  },
                                  "missing_rules": {}
                                }
                              },
                              "n_missing": 0
                            }
                          },
                          "missing": 0,
                          "n": 14,
                          "unfiltered": {
                            "unweighted_n": 14,
                            "weighted_n": 14
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "query": {
                          "additionalProperties": false,
                          "properties": {
                            "dimensions": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "variable": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  }
                                },
                                "required": [],
                                "title": "QueryDimension",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "measures": {
                              "additionalProperties": false,
                              "properties": {
                                "count": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "args": {
                                      "items": {},
                                      "type": "array"
                                    },
                                    "function": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [],
                                  "title": "PurpleCount",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "QueryMeasures",
                              "type": "object"
                            },
                            "weight": {
                              "nullable": true
                            }
                          },
                          "required": [],
                          "title": "Query",
                          "type": "object"
                        },
                        "query_environment": {
                          "additionalProperties": false,
                          "properties": {
                            "filter": {
                              "items": {},
                              "type": "array"
                            }
                          },
                          "required": [],
                          "title": "QueryEnvironment",
                          "type": "object"
                        },
                        "result": {
                          "additionalProperties": false,
                          "properties": {
                            "counts": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "dimensions": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "derived": {
                                    "type": "boolean"
                                  },
                                  "references": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "alias": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [],
                                    "title": "DimensionReferences",
                                    "type": "object"
                                  },
                                  "type": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "categories": {
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "id": {
                                              "type": "integer"
                                            },
                                            "missing": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "numeric_value": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "nullable": true
                                                }
                                              ]
                                            }
                                          },
                                          "required": [],
                                          "title": "Category",
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "class": {
                                        "type": "string"
                                      },
                                      "ordinal": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [],
                                    "title": "DimensionType",
                                    "type": "object"
                                  }
                                },
                                "required": [],
                                "title": "ResultDimension",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "element": {
                              "type": "string"
                            },
                            "filter_stats": {
                              "additionalProperties": false,
                              "properties": {
                                "filtered": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "unweighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    },
                                    "weighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    }
                                  },
                                  "required": [],
                                  "title": "FilteredCompleteClass",
                                  "type": "object"
                                },
                                "filtered_complete": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "unweighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    },
                                    "weighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    }
                                  },
                                  "required": [],
                                  "title": "FilteredCompleteClass",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "FilterStats",
                              "type": "object"
                            },
                            "filtered": {
                              "additionalProperties": false,
                              "properties": {
                                "unweighted_n": {
                                  "type": "integer"
                                },
                                "weighted_n": {
                                  "type": "integer"
                                }
                              },
                              "required": [],
                              "title": "UnfilteredClass",
                              "type": "object"
                            },
                            "measures": {
                              "additionalProperties": false,
                              "properties": {
                                "count": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "data": {
                                      "items": {
                                        "type": "integer"
                                      },
                                      "type": "array"
                                    },
                                    "metadata": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "derived": {
                                          "type": "boolean"
                                        },
                                        "references": {
                                          "additionalProperties": false,
                                          "title": "MissingRulesClass",
                                          "type": "object"
                                        },
                                        "type": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "class": {
                                              "type": "string"
                                            },
                                            "integer": {
                                              "type": "boolean"
                                            },
                                            "missing_reasons": {
                                              "additionalProperties": false,
                                              "properties": {
                                                "No Data": {
                                                  "type": "integer"
                                                }
                                              },
                                              "required": [],
                                              "title": "MissingReasons",
                                              "type": "object"
                                            },
                                            "missing_rules": {
                                              "additionalProperties": false,
                                              "title": "MissingRulesClass",
                                              "type": "object"
                                            }
                                          },
                                          "required": [],
                                          "title": "MetadataType",
                                          "type": "object"
                                        }
                                      },
                                      "required": [],
                                      "title": "Metadata",
                                      "type": "object"
                                    },
                                    "n_missing": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [],
                                  "title": "FluffyCount",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "ResultMeasures",
                              "type": "object"
                            },
                            "missing": {
                              "type": "integer"
                            },
                            "n": {
                              "type": "integer"
                            },
                            "unfiltered": {
                              "additionalProperties": false,
                              "properties": {
                                "unweighted_n": {
                                  "type": "integer"
                                },
                                "weighted_n": {
                                  "type": "integer"
                                }
                              },
                              "required": [],
                              "title": "UnfilteredClass",
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "Result",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDCubeGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Error calling 'cube_mean' for mean. No variable with id '413q8uMCKNsGDlzA3Kr5Dw000000'"
                      ],
                      "message": "Error calling 'cube_mean' for mean. No variable with id '413q8uMCKNsGDlzA3Kr5Dw000000'",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDCubeGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Calculate data cube (via url query)",
        "tags": [
          "Data Cubes"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/cube/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idCube = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/cube/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "In the Crunch system, any analysis is also referred to as a **cube**. Cubes are the mechanical means of representing analyses to and from the Crunch system; you can think of them as spreadsheets that might have more than two dimensions.\n\nFor more information, visit [Multidimensional Analysis](https://help.crunch.io/hc/en-us/articles/360044737751-Multidimensional-Analysis).",
        "operationId": "post-datasets-dataset_id-cube",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "query": {
                      "dimensions": [
                        {
                          "variable": "https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000000/"
                        },
                        {
                          "variable": "https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000001/"
                        }
                      ],
                      "measures": {
                        "count": {
                          "args": [],
                          "function": "cube_count"
                        }
                      }
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "query": {
                    "additionalProperties": false,
                    "properties": {
                      "dimensions": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "variable": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            }
                          },
                          "required": [],
                          "title": "Dimension",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "measures": {
                        "additionalProperties": false,
                        "properties": {
                          "count": {
                            "additionalProperties": false,
                            "properties": {
                              "args": {
                                "items": {},
                                "type": "array"
                              },
                              "function": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "Count",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "Measures",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Query",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDCubePostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/cube/",
                      "value": {
                        "query": {
                          "dimensions": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000000/"
                            },
                            {
                              "variable": "https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000001/"
                            }
                          ],
                          "measures": {
                            "count": {
                              "args": [],
                              "function": "cube_count"
                            }
                          },
                          "weight": null
                        },
                        "query_environment": {
                          "filter": []
                        },
                        "result": {
                          "counts": [
                            557,
                            1198,
                            0,
                            1278,
                            1493,
                            0,
                            0,
                            0,
                            0
                          ],
                          "dimensions": [
                            {
                              "derived": false,
                              "references": {
                                "alias": "Admit",
                                "description": null,
                                "name": "Admit"
                              },
                              "type": {
                                "categories": [
                                  {
                                    "id": 1,
                                    "missing": false,
                                    "name": "Admitted",
                                    "numeric_value": null
                                  },
                                  {
                                    "id": 2,
                                    "missing": false,
                                    "name": "Rejected",
                                    "numeric_value": null
                                  },
                                  {
                                    "id": -1,
                                    "missing": true,
                                    "name": "No Data",
                                    "numeric_value": null
                                  }
                                ],
                                "class": "categorical",
                                "ordinal": false
                              }
                            },
                            {
                              "derived": false,
                              "references": {
                                "alias": "Gender",
                                "description": null,
                                "name": "Gender"
                              },
                              "type": {
                                "categories": [
                                  {
                                    "id": 2,
                                    "missing": false,
                                    "name": "Female",
                                    "numeric_value": null
                                  },
                                  {
                                    "id": 1,
                                    "missing": false,
                                    "name": "Male",
                                    "numeric_value": null
                                  },
                                  {
                                    "id": -1,
                                    "missing": true,
                                    "name": "No Data",
                                    "numeric_value": null
                                  }
                                ],
                                "class": "categorical",
                                "ordinal": false
                              }
                            }
                          ],
                          "element": "crunch:cube",
                          "filter_stats": {
                            "filtered": {
                              "unweighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 4526
                              },
                              "weighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 4526
                              }
                            },
                            "filtered_complete": {
                              "unweighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 4526
                              },
                              "weighted": {
                                "missing": 0,
                                "other": 0,
                                "selected": 4526
                              }
                            }
                          },
                          "filtered": {
                            "unweighted_n": 4526,
                            "weighted_n": 4526
                          },
                          "measures": {
                            "count": {
                              "data": [
                                557,
                                1198,
                                0,
                                1278,
                                1493,
                                0,
                                0,
                                0,
                                0
                              ],
                              "metadata": {
                                "derived": true,
                                "references": {},
                                "type": {
                                  "class": "numeric",
                                  "integer": true,
                                  "missing_reasons": {
                                    "No Data": -1
                                  },
                                  "missing_rules": {}
                                }
                              },
                              "n_missing": 0
                            }
                          },
                          "missing": 0,
                          "n": 4526,
                          "unfiltered": {
                            "unweighted_n": 4526,
                            "weighted_n": 4526
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "additionalProperties": false,
                      "properties": {
                        "query": {
                          "additionalProperties": false,
                          "properties": {
                            "dimensions": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "variable": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  }
                                },
                                "required": [],
                                "title": "QueryDimension",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "measures": {
                              "additionalProperties": false,
                              "properties": {
                                "count": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "args": {
                                      "items": {},
                                      "type": "array"
                                    },
                                    "function": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [],
                                  "title": "PurpleCount",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "QueryMeasures",
                              "type": "object"
                            },
                            "weight": {
                              "nullable": true
                            }
                          },
                          "required": [],
                          "title": "Query",
                          "type": "object"
                        },
                        "query_environment": {
                          "additionalProperties": false,
                          "properties": {
                            "filter": {
                              "items": {},
                              "type": "array"
                            }
                          },
                          "required": [],
                          "title": "QueryEnvironment",
                          "type": "object"
                        },
                        "result": {
                          "additionalProperties": false,
                          "properties": {
                            "counts": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "dimensions": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "derived": {
                                    "type": "boolean"
                                  },
                                  "references": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "alias": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "nullable": true
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [],
                                    "title": "DimensionReferences",
                                    "type": "object"
                                  },
                                  "type": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "categories": {
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "id": {
                                              "type": "integer"
                                            },
                                            "missing": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "numeric_value": {
                                              "nullable": true
                                            }
                                          },
                                          "required": [],
                                          "title": "Category",
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "class": {
                                        "type": "string"
                                      },
                                      "ordinal": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [],
                                    "title": "DimensionType",
                                    "type": "object"
                                  }
                                },
                                "required": [],
                                "title": "ResultDimension",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "element": {
                              "type": "string"
                            },
                            "filter_stats": {
                              "additionalProperties": false,
                              "properties": {
                                "filtered": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "unweighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    },
                                    "weighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    }
                                  },
                                  "required": [],
                                  "title": "FilteredCompleteClass",
                                  "type": "object"
                                },
                                "filtered_complete": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "unweighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    },
                                    "weighted": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "missing": {
                                          "type": "integer"
                                        },
                                        "other": {
                                          "type": "integer"
                                        },
                                        "selected": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [],
                                      "title": "Weighted",
                                      "type": "object"
                                    }
                                  },
                                  "required": [],
                                  "title": "FilteredCompleteClass",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "FilterStats",
                              "type": "object"
                            },
                            "filtered": {
                              "additionalProperties": false,
                              "properties": {
                                "unweighted_n": {
                                  "type": "integer"
                                },
                                "weighted_n": {
                                  "type": "integer"
                                }
                              },
                              "required": [],
                              "title": "UnfilteredClass",
                              "type": "object"
                            },
                            "measures": {
                              "additionalProperties": false,
                              "properties": {
                                "count": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "data": {
                                      "items": {
                                        "type": "integer"
                                      },
                                      "type": "array"
                                    },
                                    "metadata": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "derived": {
                                          "type": "boolean"
                                        },
                                        "references": {
                                          "additionalProperties": false,
                                          "title": "MissingRulesClass",
                                          "type": "object"
                                        },
                                        "type": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "class": {
                                              "type": "string"
                                            },
                                            "integer": {
                                              "type": "boolean"
                                            },
                                            "missing_reasons": {
                                              "additionalProperties": false,
                                              "properties": {
                                                "No Data": {
                                                  "type": "integer"
                                                }
                                              },
                                              "required": [],
                                              "title": "MissingReasons",
                                              "type": "object"
                                            },
                                            "missing_rules": {
                                              "additionalProperties": false,
                                              "title": "MissingRulesClass",
                                              "type": "object"
                                            }
                                          },
                                          "required": [],
                                          "title": "MetadataType",
                                          "type": "object"
                                        }
                                      },
                                      "required": [],
                                      "title": "Metadata",
                                      "type": "object"
                                    },
                                    "n_missing": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [],
                                  "title": "FluffyCount",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "ResultMeasures",
                              "type": "object"
                            },
                            "missing": {
                              "type": "integer"
                            },
                            "n": {
                              "type": "integer"
                            },
                            "unfiltered": {
                              "additionalProperties": false,
                              "properties": {
                                "unweighted_n": {
                                  "type": "integer"
                                },
                                "weighted_n": {
                                  "type": "integer"
                                }
                              },
                              "required": [],
                              "title": "UnfilteredClass",
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "Result",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Value",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDCubePostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          }
        },
        "summary": "Calculate data cube",
        "tags": [
          "Data Cubes"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/cube/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"query\": {\n    \"dimensions\": [\n      {\n        \"variable\": \"https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000000/\"\n      },\n      {\n        \"variable\": \"https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000001/\"\n      }\n    ],\n    \"measures\": {\n      \"count\": {\n        \"args\": [],\n        \"function\": \"cube_count\"\n      }\n    }\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idCube = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/cube/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"query\": {\n       \"dimensions\": [\n         {\n           \"variable\": \"https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000000/\"\n         },\n         {\n           \"variable\": \"https://app.crunch.io/api/datasets/9b26300ee31342f39c4286b504b6da25/variables/5QrIa1ixR6M5FS4cfG04d3000001/\"\n         }\n       ],\n       \"measures\": {\n         \"count\": {\n           \"args\": [],\n           \"function\": \"cube_count\"\n         }\n       }\n     }\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/settings/": {
      "get": {
        "description": "This endpont returns all the available settings for a given dataset.",
        "operationId": "get-datasets-dataset_id-settings",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "complete_cases_default": null,
                        "dashboard_deck": null,
                        "generating_script": null,
                        "integration": null,
                        "min_base_size": 0,
                        "population": null,
                        "suppress_on_min_base_size": true,
                        "variable_folders": true,
                        "viewers_can_change_weight": true,
                        "viewers_can_export": false,
                        "viewers_can_share": true,
                        "weight": null
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/d211c8ec89d74c51b5f5c4d1f49fffa5/settings/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "complete_cases_default": {
                          "nullable": true
                        },
                        "dashboard_deck": {
                          "nullable": true
                        },
                        "generating_script": {
                          "nullable": true
                        },
                        "integration": {
                          "nullable": true
                        },
                        "min_base_size": {
                          "type": "integer"
                        },
                        "population": {
                          "nullable": true
                        },
                        "suppress_on_min_base_size": {
                          "type": "boolean"
                        },
                        "variable_folders": {
                          "type": "boolean"
                        },
                        "viewers_can_change_weight": {
                          "type": "boolean"
                        },
                        "viewers_can_export": {
                          "type": "boolean"
                        },
                        "viewers_can_share": {
                          "type": "boolean"
                        },
                        "weight": {
                          "nullable": true
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSettingsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List settings",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/settings/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idSettings = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/settings/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint allows you to change the following settings:\n\n* dashboard_deck\n* complete_cases_default\n* min_base_size\n* population size\n* population magnitude\n* suppress_on_min_base_size\n* viewers_can_change_weight\n* viewers_can_export\n* viewers_can_share\n* weight\n\nIf you attempt to change other values, a 400 error will result.",
        "operationId": "patch-datasets-dataset_id-settings",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "min_base_size": 10,
                      "viewers_can_change_weight": false,
                      "viewers_can_export": true,
                      "weight": null
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "viewers_can_export": true
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "complete_cases_default": {
                        "type": "boolean"
                      },
                      "dashboard_deck": {
                        "description": "When set, points to a deck that will become publicly visible and be used as dashboard by the web client.",
                        "type": "string"
                      },
                      "min_base_size": {
                        "type": "integer"
                      },
                      "population": {
                        "properties": {
                          "magnitude": {
                            "type": "integer"
                          },
                          "size": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "suppress_on_min_base_size": {
                        "type": "boolean"
                      },
                      "viewers_can_change_weight": {
                        "description": "When true, all users with access can set their own personal **weight; else, the editor configured **weight** will be applied to all without option to change.",
                        "type": "boolean"
                      },
                      "viewers_can_export": {
                        "description": "When false, only editor can export; else, all users with view access can export the data.",
                        "type": "boolean"
                      },
                      "viewers_can_share": {
                        "default": "true",
                        "description": "When true, all users can share the dataset with other users or teams; Defaults to True.",
                        "type": "boolean"
                      },
                      "weight": {
                        "description": "Default initial weight for all new users on this dataset, and when **viewers_can_change_weight** is false, this variable will be the always-applied weight for all viewers of the dataset.",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDSettingsPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid value for viewers_can_export\n"
                      ],
                      "message": "Invalid value for viewers_can_export",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDSettingsPatchRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Change settings",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/settings/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"min_base_size\": 10,\n    \"viewers_can_export\": true,\n    \"viewers_can_change_weight\": false,\n    \"weight\": null\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idSettings = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/settings/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"min_base_size\": 10,\n       \"viewers_can_export\": true,\n       \"viewers_can_change_weight\": false,\n       \"weight\": null\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/state/": {
      "get": {
        "description": "Returns information about the current state of a given dataset.\n\nThe usages for these endpoint include:\n* If the dataset is being edited by someone else\n* Latest revision (to poll if there have been changes since last time)\n* See if the dataset has pending stream messages\n",
        "operationId": "get-datasets-dataset_id-state",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "current_editor": "https://app.crunch.io/api/users/1bbaa20131894a7bb0204a6777937a70/",
                        "current_editor_name": "captain-9463fee147ae1b3f781a4b5009865bd9eb1f763e60a7130e21fa378f868dc5d4",
                        "pending_messages": 0,
                        "revision": "000002"
                      },
                      "description": "Returns information about the current state of the dataset",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/248bce99087845f4939cbccec5ab2721/state/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "current_editor": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "current_editor_name": {
                          "type": "string"
                        },
                        "pending_messages": {
                          "type": "integer"
                        },
                        "revision": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDStateGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dataset's current state",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/state/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idState = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/state/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/users/": {
      "get": {
        "description": "This endpoint returns a full list of users that have access to a given dataset via the different sources:\n\n* When the dataset belongs to a project, as project members\n* Members of teams that are shared with the dataset\n* Direct shares to specific users\n\nThe response will be a catalog with each user as member with the tuple indicating the coalesced permissions and information about the type of access.",
        "operationId": "get-datasets-dataset_id-users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/users/9a4bf3b22df043949217f2ac17b359c4/": {
                          "access_time": "1970-01-01T00:00:00+00:00",
                          "account_permissions": {
                            "admin_account": true,
                            "create_datasets": true
                          },
                          "coalesced_permissions": {
                            "edit": true,
                            "view": true
                          },
                          "collaborator": false,
                          "email": "aec7e024782b3052d393b4550c2743575f2a1a21bdf6bb7adfe889cc01b7ea3a@example.com",
                          "name": "aec7e024782b3052d393b4550c2743575f2a1a21bdf6bb7adfe889cc01b7ea3a",
                          "permissions": {
                            "edit": true,
                            "view": true
                          },
                          "project_permissions": {
                            "edit": true,
                            "view": true
                          },
                          "teams": [],
                          "user": "https://app.crunch.io/api/users/9a4bf3b22df043949217f2ac17b359c4/"
                        },
                        "https://app.crunch.io/api/users/b2ea140f78ce421782606c93c1a77621/": {
                          "access_time": null,
                          "account_permissions": {
                            "admin_account": false,
                            "create_datasets": false
                          },
                          "coalesced_permissions": {
                            "edit": false,
                            "view": true
                          },
                          "collaborator": true,
                          "email": "try_to_make_invited_user_editor@domain.example",
                          "name": "try_to_make_invited_user_editor@domain.example",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "project_permissions": {
                            "edit": false,
                            "view": false
                          },
                          "teams": [],
                          "user": "https://app.crunch.io/api/users/b2ea140f78ce421782606c93c1a77621/"
                        },
                        "https://app.crunch.io/api/users/e16e92db5506407c9c91dab78d8085a4/": {
                          "access_time": null,
                          "account_permissions": {
                            "admin_account": false,
                            "create_datasets": true
                          },
                          "coalesced_permissions": {
                            "edit": true,
                            "view": true
                          },
                          "collaborator": false,
                          "email": "invite@with_email_2.com",
                          "name": "invite@with_email_2.com",
                          "permissions": {
                            "edit": true,
                            "view": true
                          },
                          "project_permissions": {
                            "edit": false,
                            "view": false
                          },
                          "teams": [],
                          "user": "https://app.crunch.io/api/users/e16e92db5506407c9c91dab78d8085a4/"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/43af9ee7a67e44859f3b4e3bc90cbffa/users/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "access_time": {
                            "anyOf": [
                              {
                                "format": "date-time",
                                "type": "string"
                              },
                              {
                                "nullable": true
                              }
                            ]
                          },
                          "account_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "admin_account": {
                                "type": "boolean"
                              },
                              "create_datasets": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "AccountPermissions",
                            "type": "object"
                          },
                          "coalesced_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Permissions",
                            "type": "object"
                          },
                          "collaborator": {
                            "type": "boolean"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Permissions",
                            "type": "object"
                          },
                          "project_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Permissions",
                            "type": "object"
                          },
                          "teams": {
                            "items": {},
                            "type": "array"
                          },
                          "user": {
                            "format": "uri",
                            "type": "string",
                            "x-qt-uri-protocols": [
                              "https"
                            ]
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "properties": {
                        "user_uri": {
                          "properties": {
                            "access_time": {
                              "description": "Timestamp of last access to dataset via web app.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "account_permissions": {
                              "description": "Account permissions for the user.",
                              "properties": {
                                "admin_account": {
                                  "type": "boolean"
                                },
                                "create_datasets": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "collaborator": {
                              "description": "True if this user is in a different account from this dataset.",
                              "type": "boolean"
                            },
                            "email": {
                              "description": "Email address of the user.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user.",
                              "type": "string"
                            },
                            "permissions": {
                              "description": "Permissions this user has to this access, combining all sources.",
                              "properties": {
                                "edit": {
                                  "type": "boolean"
                                },
                                "view": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDUsersGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dataset users",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/users/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idUsers = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/users/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint allows you to add, remove, and invite new users to your dataset.\n\nIn the example below, we add user with id 00005, remove user 00002, and invite a new user to Crunch (user@email.com). Because send_notification was included and set to true, these users will also receive an email notification about any new access they have been granted.\n\nNote that instead of using the URL for the user, you could instead use their email address. This is particularly helpful if you\u2019re trying to add a user that doesn\u2019t yet have a Crunch account.",
        "operationId": "patch-datasets-dataset_id-users",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/users/00002/": null,
                      "https://app.crunch.io/api/users/00005/": {
                        "permissions": {
                          "edit": false,
                          "view": true
                        }
                      },
                      "message": "optional message to include in email notification",
                      "send_notification": true,
                      "user@email.com": {
                        "permissions": {
                          "view": true
                        }
                      }
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "send_notification": {
                        "type": "boolean"
                      },
                      "user_id": {
                        "additionalProperties": false,
                        "description": "Or email address.",
                        "properties": {
                          "permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "title": "Permissions",
                            "type": "object"
                          }
                        },
                        "title": "HTTPSAppCrunchIoAPIUsers",
                        "type": "object"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDUsersPatchRequest",
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "https://app.crunch.io/api/users/a9ea250399384b58820a0285fc88f73c/": {
                        "access_time": null,
                        "account_permissions": {
                          "admin_account": false,
                          "create_datasets": true
                        },
                        "coalesced_permissions": {
                          "edit": false,
                          "view": true
                        },
                        "collaborator": false,
                        "email": "f16ea7a6ecb2f834f0680675a3ce5a9c621638da4f3b86a7732a869194595b71@example.com",
                        "name": "f16ea7a6ecb2f834f0680675a3ce5a9c621638da4f3b86a7732a869194595b71@example.com",
                        "permissions": {
                          "edit": false,
                          "view": true
                        },
                        "project_permissions": {
                          "edit": false,
                          "view": false
                        },
                        "teams": [],
                        "user": "https://app.crunch.io/api/users/a9ea250399384b58820a0285fc88f73c/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "user_url": {
                          "properties": {
                            "access_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "account_permissions": {
                              "properties": {
                                "admin_account": {
                                  "type": "boolean"
                                },
                                "create_datasets": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "coalesced_permissions": {
                              "properties": {
                                "edit": {
                                  "type": "boolean"
                                },
                                "view": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "collaborator": {
                              "type": "boolean"
                            },
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "permissions": {
                              "properties": {
                                "edit": {
                                  "type": "boolean"
                                },
                                "view": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "project_permissions": {
                              "properties": {
                                "edit": {
                                  "type": "boolean"
                                },
                                "view": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "teams": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "user": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDUsersPatchRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item updated"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Add/remove/invite dataset users",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/users/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"index\": {\n    \"send_notification\": true,\n    \"message\": \"optional message to include in email notification\",\n    \"https://app.crunch.io/api/users/00005/\": {\n      \"permissions\": {\n        \"edit\": false,\n        \"view\": true\n      }\n    },\n    \"https://app.crunch.io/api/users/00002/\": null,\n    \"user@email.com\": {\n      \"permissions\": {\n        \"view\": true\n      }\n    }\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idUsers = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/users/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"index\": {\n       \"send_notification\": true,\n       \"message\": \"optional message to include in email notification\",\n       \"https://app.crunch.io/api/users/00005/\": {\n         \"permissions\": {\n           \"edit\": false,\n           \"view\": true\n         }\n       },\n       \"https://app.crunch.io/api/users/00002/\": null,\n       \"user@email.com\": {\n         \"permissions\": {\n           \"view\": true\n         }\n       }\n     }\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/": {
      "get": {
        "description": "This endpoint returns all decks in this dataset that are accessible to the current user. This includes decks created by the user, as well as all public decks in the dataset.\n\nTo determine if a deck belongs to the current user, check the owner_id attribute.",
        "operationId": "get-datasets-dataset_id-decks",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/cc9161/decks/2b53e/": {
                          "creation_time": "1987-10-15T11:45:00",
                          "id": "2b53e",
                          "is_public": true,
                          "name": "Default deck",
                          "owner_id": "https://app.crunch.io/api/users/4cba5/",
                          "owner_name": "Other Person",
                          "team": "https://app.crunch.io/api/teams/58acf7/"
                        },
                        "https://app.crunch.io/api/datasets/cc9161/decks/4fa25/": {
                          "creation_time": "1986-11-26T12:05:00",
                          "id": "4fa25",
                          "is_public": false,
                          "name": "my new deck",
                          "owner_id": "https://app.crunch.io/api/users/abcd3/",
                          "owner_name": "Real Person",
                          "team": null
                        }
                      },
                      "order": "https://app.crunch.io/api/datasets/223fd4/decks/order/",
                      "self": "https://app.crunch.io/api/datasets/223fd4/decks/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "deck_url": {
                          "properties": {
                            "creation_time": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "is_public": {
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Human-friendly string identifier.",
                              "type": "string"
                            },
                            "owner_id": {
                              "description": "Url for the owner of this deck.",
                              "format": "uri",
                              "type": "string"
                            },
                            "owner_name": {
                              "description": "Name of the owner of the deck (referred by owner_id).",
                              "type": "string"
                            },
                            "team": {
                              "description": "If the deck is shared through a team, it will point to it. null by default.",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Index",
                      "type": "object"
                    },
                    "orders": {
                      "additionalProperties": false,
                      "properties": {
                        "order": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Orders",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDDecksGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List decks",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecks = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint allows you to edit multiple decks at once. The following attributes are editable:\n\n* name\n* description\n* is_public\n\nFor decks that the current user owns, name, description and is_public are editable. Only the deck owner can edit the mentioned attributes on a deck even if the deck is public. Other deck attributes are not editable and will respond with 400 status if the request tries to change them.\n\nOn success, the server will respond with status code 204 (No Content).\n\nPublic decks cannot contain analyses that refer to secure variables. Attempting to create one results in a 400 response. Hidden variables, however, are permitted.",
        "operationId": "patch-datasets-dataset_id-decks",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/datasets/cc9161/decks/4fa25/": {
                        "is_public": true,
                        "name": "Renamed deck"
                      }
                    },
                    "order": "https://app.crunch.io/api/datasets/223fd4/decks/order/"
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "index": {
                    "properties": {
                      "deck_url": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "is_public": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Bulk-edit multiple decks",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/decks/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/cc9161/decks/4fa25/\": {\n      \"is_public\": true,\n      \"name\": \"Renamed deck\"\n    }\n  },\n  \"order\": \"https://app.crunch.io/api/datasets/223fd4/decks/order/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idDecks = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/cc9161/decks/4fa25/\": {\n         \"is_public\": true,\n         \"name\": \"Renamed deck\"\n       }\n     },\n     \"order\": \"https://app.crunch.io/api/datasets/223fd4/decks/order/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "This endpoint creates a new deck for this dataset. The only required body attribute is name; other attributes are optional.",
        "operationId": "post-datasets-dataset_id-decks",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "title": "Dashboard 34"
                      },
                      "is_public": true,
                      "name": "deck",
                      "team": "https://app.crunch.io/api/teams/661e14488eed4bd3bdfe908c269af22e/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "name": "MainDeck"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "is_public": false,
                      "name": "Deck"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "name": "create_analysis_q_env_weight_id"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-5": {
                  "value": {
                    "body": {
                      "name": "patch_conflict_team_share1",
                      "team": "https://app.crunch.io/api/teams/ef04231643d4479685a6dbb56faca591/"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-6": {
                  "value": {
                    "body": {
                      "is_public": true,
                      "name": "deck"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "dashboard": {
                        "additionalProperties": false,
                        "properties": {
                          "title": {
                            "type": "string"
                          }
                        },
                        "title": "Dashboard",
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "is_public": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "team": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDDecksPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Cannot create a public item shared to a team\n"
                      ],
                      "message": "Cannot create a public item shared to a team",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDDecksPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create deck",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/decks/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"dashboard\": {\n      \"title\": \"Dashboard 34\"\n    },\n    \"is_public\": true,\n    \"name\": \"deck\",\n    \"team\": \"https://app.crunch.io/api/teams/661e14488eed4bd3bdfe908c269af22e/\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idDecks = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"dashboard\": {\n         \"title\": \"Dashboard 34\"\n       },\n       \"is_public\": true,\n       \"name\": \"deck\",\n       \"team\": \"https://app.crunch.io/api/teams/661e14488eed4bd3bdfe908c269af22e/\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/order/": {
      "get": {
        "description": "This endpoint allows the user to arrange how API clients, such as the web application, will present the deck catalog. The deck order contains all decks that are visible to the current user, both personal and public. Unlike many other shoji:order resources, this order does not allow grouping or nesting: it will always be a flat list of deck URLs.\n\n\n",
        "operationId": "get-datasets-dataset_id-decks-order",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:order",
                      "graph": [
                        "https://app.crunch.io/api/datasets/223fd4/decks/1/",
                        "https://app.crunch.io/api/datasets/223fd4/decks/2/",
                        "https://app.crunch.io/api/datasets/223fd4/decks/3/"
                      ],
                      "self": "https://app.crunch.io/api/datasets/223fd4/decks/order/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-order-element"
                    },
                    "graph": {
                      "description": "Array of deck urls.",
                      "items": {
                        "format": "uri",
                        "type": "string",
                        "x-qt-uri-protocols": [
                          "https"
                        ]
                      },
                      "type": "array"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDDecksOrderGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List deck order",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/order/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecksOrder = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/order/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Use this endpoint to change the order of the decks. A 204 (No Content) response indicates success.\n\nIf the payload contains only a subset of available decks, those decks not referenced will be appended at the bottom of the top level graph in arbitrary order.\n\nIncluding invalid URLs, such as URLs of decks that are not present in the catalog, will return a 400 response from the server.\n\nThe deck order should always be a flat list of URLs. Nesting or grouping is not supported by the web application. Server will return a 400 response if the order supplied in the the request has nesting.",
        "operationId": "patch-datasets-dataset_id-decks-order",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:order",
                    "graph": [
                      "https://app.crunch.io/api/datasets/223fd4/decks/1/",
                      "https://app.crunch.io/api/datasets/223fd4/decks/3/"
                    ],
                    "self": "https://app.crunch.io/api/datasets/223fd4/decks/order/"
                  }
                }
              },
              "schema": {
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-order-element"
                  },
                  "graph": {
                    "description": "Array of deck urls.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "self": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Change deck order",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/decks/order/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:order\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/223fd4/decks/1/\",\n    \"https://app.crunch.io/api/datasets/223fd4/decks/3/\"\n  ],\n  \"self\": \"https://app.crunch.io/api/datasets/223fd4/decks/order/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idDecksOrder = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/order/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:order\",\n     \"graph\": [\n       \"https://app.crunch.io/api/datasets/223fd4/decks/1/\",\n       \"https://app.crunch.io/api/datasets/223fd4/decks/3/\"\n     ],\n     \"self\": \"https://app.crunch.io/api/datasets/223fd4/decks/order/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/{deck_id}/": {
      "delete": {
        "description": "This endpoint deletes a given deck.",
        "operationId": "delete-datasets-dataset_id-decks-deck_id",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        },
        "summary": "Delete deck",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idDecksDeck_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/', {\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "This endpoint retrieves all details and attributes about one deck.",
        "operationId": "get-datasets-dataset_id-decks-deck_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "creation_time": "2020-05-20T19:43:47.561000+00:00",
                        "description": "",
                        "id": "a677f1b26b214c2bb420a37f7b226d08",
                        "is_public": false,
                        "name": "deck",
                        "owner_id": "https://app.crunch.io/api/users/01e0bda377b94b56a3779f3978fa73f6/",
                        "owner_name": "captain-7a32fec033f8f480cf91ef3653c52caf0e57e301c81607e2f3c43ca395b309ea",
                        "team": "https://app.crunch.io/api/teams/661e14488eed4bd3bdfe908c269af22e/"
                      },
                      "catalogs": {
                        "slides": "https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/decks/a677f1b26b214c2bb420a37f7b226d08/slides/"
                      },
                      "description": "Detail of one deck",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/decks/a677f1b26b214c2bb420a37f7b226d08/",
                      "views": {
                        "export": "https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/decks/a677f1b26b214c2bb420a37f7b226d08/export/"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "creation_time": {
                          "description": "Time when this deck was created.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "description": "Longer annotations for this deck.",
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Human-friendly string identifier.",
                          "type": "string"
                        },
                        "owner_id": {
                          "description": "The URL for the owner of this deck.",
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "owner_name": {
                          "description": "Name of the owner of the deck (referred by owner_id).",
                          "type": "string"
                        },
                        "team": {
                          "description": "If the deck is shared through a team, it will point to it. null by default.",
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "slides": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "views": {
                      "additionalProperties": false,
                      "properties": {
                        "export": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Views",
                      "type": "object"
                    }
                  },
                  "title": "DatasetsDatasetIDDecksDeckIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Deck  not found"
                      ],
                      "message": "Deck  not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDDecksDeckIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Deck details",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecksDeck_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the deck you are working with",
          "in": "path",
          "name": "deck_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "This endpoint edits a given deck. For deck entities that the current user owns, name, description, teams and is_public are editable. Other deck attributes are not editable.\n\nAttempting to PATCH is_public: true to a deck containing an analysis that references a secure variable will receive a 400 response.",
        "operationId": "patch-datasets-dataset_id-decks-deck_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": []
                          }
                        ]
                      }
                    },
                    "description": "description",
                    "element": "shoji:entity",
                    "is_public": true,
                    "name": "shared deck",
                    "team": null
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": [
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/628a307bb38f47848fdb36f44067fb6d/decks/c404e953143940ee897958bbc7f390d3/slides/b28e6476508b445a8a575b85526f78b6/",
                                "w": 6,
                                "x": 0,
                                "y": 0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": [
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/628a307bb38f47848fdb36f44067fb6d/decks/c404e953143940ee897958bbc7f390d3/slides/b28e6476508b445a8a575b85526f78b6/",
                                "maxH": 4,
                                "maxW": 4,
                                "minH": 2,
                                "minW": 2,
                                "moved": false,
                                "static": false,
                                "w": 4,
                                "x": 0,
                                "y": 0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": [
                              {
                                "h": 2,
                                "i": "https://app.crunch.io/api/datasets/628a307bb38f47848fdb36f44067fb6d/decks/c404e953143940ee897958bbc7f390d3/slides/b28e6476508b445a8a575b85526f78b6/",
                                "maxH": 4,
                                "maxW": 4,
                                "minH": 2,
                                "minW": 2,
                                "moved": false,
                                "static": false,
                                "w": 2,
                                "x": 0,
                                "y": 0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-5": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": [
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/ef914b272fba45c69bfc9f105b610403/decks/338d4ce2cda347cca00982a160862e1c/slides/894ed70a20db425e9fb53b906dc23387/",
                                "w": 6,
                                "x": 0,
                                "y": 0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-6": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": [
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/89d87034a50c4891ab6fd21a70c11182/",
                                "w": 6,
                                "x": 0,
                                "y": 0
                              },
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/de708090ff554e2ca5c8d843c1cfc016/",
                                "w": 6,
                                "x": 6,
                                "y": 0
                              },
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/cd9a22acb96d4f04851b65bb0e1a8408/",
                                "w": 6,
                                "x": 0,
                                "y": 4
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-7": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": [
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/89d87034a50c4891ab6fd21a70c11182/",
                                "moved": false,
                                "static": false,
                                "w": 6,
                                "x": 0,
                                "y": 0
                              },
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/de708090ff554e2ca5c8d843c1cfc016/",
                                "moved": false,
                                "static": false,
                                "w": 6,
                                "x": 6,
                                "y": 0
                              },
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/cd9a22acb96d4f04851b65bb0e1a8408/",
                                "moved": false,
                                "static": false,
                                "w": 6,
                                "x": 0,
                                "y": 4
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-8": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": [
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/89d87034a50c4891ab6fd21a70c11182/",
                                "maxH": 12,
                                "maxW": 12,
                                "minH": 2,
                                "minW": 2,
                                "moved": false,
                                "static": false,
                                "w": 6,
                                "x": 6,
                                "y": 0
                              },
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/de708090ff554e2ca5c8d843c1cfc016/",
                                "maxH": 12,
                                "maxW": 12,
                                "minH": 2,
                                "minW": 2,
                                "moved": false,
                                "static": false,
                                "w": 6,
                                "x": 6,
                                "y": 4
                              },
                              {
                                "h": 4,
                                "i": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/decks/140c3f0293a540139c7b2646dc6af215/slides/cd9a22acb96d4f04851b65bb0e1a8408/",
                                "maxH": 12,
                                "maxW": 12,
                                "minH": 2,
                                "minW": 2,
                                "moved": false,
                                "static": false,
                                "w": 6,
                                "x": 0,
                                "y": 0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-9": {
                  "value": {
                    "body": {
                      "dashboard": {
                        "tabs": [
                          {
                            "name": "Untitled 1",
                            "tileLayout": []
                          }
                        ]
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "dashboard": {
                        "additionalProperties": false,
                        "properties": {
                          "tabs": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "tileLayout": {
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "h": {
                                        "type": "integer"
                                      },
                                      "i": {
                                        "format": "uri",
                                        "type": "string",
                                        "x-qt-uri-protocols": [
                                          "https"
                                        ]
                                      },
                                      "maxH": {
                                        "type": "integer"
                                      },
                                      "maxW": {
                                        "type": "integer"
                                      },
                                      "minH": {
                                        "type": "integer"
                                      },
                                      "minW": {
                                        "type": "integer"
                                      },
                                      "moved": {
                                        "type": "boolean"
                                      },
                                      "static": {
                                        "type": "boolean"
                                      },
                                      "w": {
                                        "type": "integer"
                                      },
                                      "x": {
                                        "type": "integer"
                                      },
                                      "y": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "TileLayout",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [],
                              "title": "Tab",
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [],
                        "title": "Dashboard",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "description": {
                    "type": "string"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "is_public": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "team": {
                    "nullable": true
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDDecksDeckIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Edit deck",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"dashboard\": {\n      \"tabs\": [\n        {\n          \"name\": \"Untitled 1\",\n          \"tileLayout\": []\n        }\n      ]\n    }\n  },\n  \"description\": \"description\",\n  \"element\": \"shoji:entity\",\n  \"is_public\": true,\n  \"name\": \"shared deck\",\n  \"team\": null\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idDecksDeck_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"dashboard\": {\n         \"tabs\": [\n           {\n             \"name\": \"Untitled 1\",\n             \"tileLayout\": []\n           }\n         ]\n       }\n     },\n     \"description\": \"description\",\n     \"element\": \"shoji:entity\",\n     \"is_public\": true,\n     \"name\": \"shared deck\",\n     \"team\": null\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/{deck_id}/export/": {
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the deck you are working with",
          "in": "path",
          "name": "deck_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Exporting a deck initiates a download of that deck rendered as a Microsoft Excel or PowerPoint file. A JSON option is also available, which includes all the data that appears in a XLSX or PPTX download.\n\nA filter-environment can be specified to apply one or more filters to all slides in the deck. These filters are applied in addition to any filter(s) in the analysis of each slide. Any filter environment must appear in the body of the request.\n\n## XLSX\nA successful POST to this endpoint returns a 202 (Accepted) response indicating the export job has been started.\n\nThe Location header of the response contains the download URL for the export file.\n\nThe response body contains a progress URL on which export completion status may be queried.\n\nClients should note the download URL, monitor progress, and when complete, GET the download location. See Progress for details.\n\nThe XLSX download format is indicated by the Accept: header on the POST. Since XLSX is the default format, if no such header is provided on the POST, this endpoint will produce an xlsx file. If desired, an `Accept: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet` header can be used to explicitly specify Excel (xlsx) download format.\n\nNote that very large exports may take some time.\n\nIf the same export is requested before a prior request is completed, the same 202 response will be returned, indicating the same download and progress locations. If the prior export is finished, the export will be generated again.\n\n## PPTX\nA PowerPoint-format deck export is specified by the following Location header:\n\n`Accept: application/vnd.openxmlformats-officedocument.presentationml.presentation`\n\n## JSON\nProviding an `Accept: application/json` header for this endpoint produces a JSON export of the deck payload. This is the same JSON used to form an XLSX or PPTX deck export and contains an analysis for each slide in the deck.",
        "operationId": "post-datasets-dataset_id-decks-deck_id-export",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {},
                    "element": "shoji:entity",
                    "filter_environment": [
                      {
                        "args": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/aeaab9fc4afe4ac389f2471bda40c5e5/variables/7DSPHOyuFU7oJm5WpHl3tY000000/"
                          },
                          {
                            "column": [
                              1
                            ]
                          }
                        ],
                        "function": "in"
                      }
                    ]
                  }
                },
                "example-2": {
                  "value": {
                    "body": {},
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "filter_environment": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "args": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "column": {
                                "items": {
                                  "type": "integer"
                                },
                                "type": "array"
                              },
                              "variable": {
                                "format": "uri",
                                "type": "string",
                                "x-qt-uri-protocols": [
                                  "https"
                                ]
                              }
                            },
                            "required": [],
                            "title": "Arg",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "function": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "FilterEnvironment",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDDecksDeckIDExportPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:view",
                      "self": "https://app.crunch.io/api/datasets/a5a3d3890a6e453d85662e9c66a9b7e9/decks/5f9720247f1145d6918d0a4463b17131/export/",
                      "value": "https://app.crunch.io/api/progress/export_deck%3Aa5a3d3890a6e453d85662e9c66a9b7e9%24a3af7cb7765f3fee01c49225bf34415d/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-view-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "value": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDDecksDeckIDExportPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item created"
          }
        },
        "summary": "Export deck",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/export/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {},\n  \"element\": \"shoji:entity\",\n  \"filter_environment\": [\n    {\n      \"args\": [\n        {\n          \"variable\": \"https://app.crunch.io/api/datasets/aeaab9fc4afe4ac389f2471bda40c5e5/variables/7DSPHOyuFU7oJm5WpHl3tY000000/\"\n        },\n        {\n          \"column\": [\n            1\n          ]\n        }\n      ],\n      \"function\": \"in\"\n    }\n  ]\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idDecksDeck_idExport = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/export/',\n{\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {},\n     \"element\": \"shoji:entity\",\n     \"filter_environment\": [\n       {\n         \"args\": [\n           {\n             \"variable\": \"https://app.crunch.io/api/datasets/aeaab9fc4afe4ac389f2471bda40c5e5/variables/7DSPHOyuFU7oJm5WpHl3tY000000/\"\n           },\n           {\n             \"column\": [\n               1\n             ]\n           }\n         ],\n         \"function\": \"in\"\n       }\n     ]\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.value)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/{deck_id}/slides/": {
      "get": {
        "description": "This endpont retrieves a list of the slides in a given deck.",
        "operationId": "get-datasets-dataset_id-decks-deck_id-slides",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "A catalog of the Slides in this Deck",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/123/decks/123/slides/123/": {
                          "analysis_url": "https://app.crunch.io/api/datasets/123/decks/123/slides/123/analyses/123/",
                          "display_settings": {
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "subtitle": "z",
                          "title": "slide 1",
                          "type": "analysis"
                        },
                        "https://app.crunch.io/api/datasets/123/decks/123/slides/456/": {
                          "analysis_url": "https://app.crunch.io/api/datasets/123/decks/123/slides/456/",
                          "display_settings": {
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "subtitle": "",
                          "title": "slide 2",
                          "type": "analysis"
                        },
                        "https://app.crunch.io/api/datasets/123/decks/123/slides/789/": {
                          "markdown": "# Some markdown\ntext",
                          "subtitle": "",
                          "title": "slide 3",
                          "type": "markdown"
                        }
                      },
                      "orders": {
                        "flat": "https://app.crunch.io/api/datasets/123/decks/123/slides/flat/"
                      },
                      "self": "https://app.crunch.io/api/datasets/123/decks/123/slides/",
                      "specification": "https://app.crunch.io/api/specifications/slides/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "slide_url": {
                          "properties": {
                            "analysis_url": {
                              "description": "Points to the first (and typically only) analysis contained on this slide.",
                              "format": "uri",
                              "type": "string"
                            },
                            "display_settings": {
                              "description": "Settings used to load the analysis.",
                              "properties": {
                                "vizType": {
                                  "properties": {
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "markdown": {
                              "type": "string"
                            },
                            "subtitle": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "type": {
                              "default": "analysis",
                              "enum": [
                                "analysis",
                                "markdown"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Index",
                      "type": "object"
                    },
                    "orders": {
                      "additionalProperties": false,
                      "properties": {
                        "flat": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Orders",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "specification": {
                      "type": "string"
                    }
                  },
                  "title": "DatasetsDatasetIDDecksDeckIDSlidesGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List slides",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecksDeck_idSlides = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the deck you are working with",
          "in": "path",
          "name": "deck_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint creates a new slide. The body should be wrapped as a shoji:entity. On success, the server returns a 201 (Created) response with a Location header containing the URL of the newly created slide entity.\n\nSlide type - Each slide has a type, currently one of **analysis** or **markdown**, defaulting to analysis when not specified.\n\nThe body of an analysis slide must contain an analyses array item containing one or more analysis bodies as described in the Analysis section. A **regular*** slide contains exactly one analysis. Only a paired-filter slide contains multiple analyses and those must occur in matched target-control pairs.\n\nA markdown slide should contain a **markdown** item containing the markdown text as a string. If omitted, the markdown is the empty string.\n\nAn **analyses** field appearing in a markdown slide payload is ignored, as is a markdown field in an analysis-slide payload. The slide type is the sole arbiter of what fields are required and used.\n\nBecause public decks cannot contain analyses that refer to secure variables, attempting to create a slide on a public deck that references a secure variable results in a 400 response. Hidden variables, however, are permitted.\n\nOn each analysis, only a query field is required to create a new slide; other attributes are optional.",
        "operationId": "post-datasets-dataset_id-decks-deck_id-slides",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-01": {
                  "value": {
                    "analyses": [
                      {
                        "query": {
                          "dimensions": [
                            {
                              "local": "v1.variables"
                            },
                            {
                              "local": "v1.subvariables"
                            },
                            {
                              "local": "v1.categories"
                            }
                          ],
                          "measures": {
                            "count": {
                              "args": [],
                              "function": "cube_count"
                            }
                          },
                          "with": {
                            "v1": {
                              "args": [
                                [
                                  {
                                    "args": [
                                      {
                                        "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/"
                                      }
                                    ],
                                    "function": "as_selected"
                                  },
                                  {
                                    "args": [
                                      {
                                        "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/"
                                      }
                                    ],
                                    "function": "as_selected"
                                  }
                                ]
                              ],
                              "function": "fuse"
                            }
                          }
                        }
                      }
                    ],
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "countsOrPercents": {
                              "value": "count"
                            },
                            "weighted": {
                              "value": true
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/variables/0lTUa4UO7GeI3qZOMPsmhK000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          }
                        }
                      ],
                      "markdown": "# title\n body",
                      "subtitle": "",
                      "title": "S1",
                      "type": "markdown"
                    },
                    "element": "shoji:entity",
                    "markdown": "# title\n body",
                    "subtitle": "Slide Subtitle",
                    "title": "Slide Title",
                    "type": "markdown"
                  }
                },
                "example-02": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 1
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "histogram"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/18917a1e1cf04bfb965c0665135b8734/variables/3kJGzhX1raKyuMCxK61vq2000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          }
                        }
                      ],
                      "subtitle": "one analysis",
                      "title": "slide1"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-03": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 1
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "histogram"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/18917a1e1cf04bfb965c0665135b8734/variables/3kJGzhX1raKyuMCxK61vq2000001/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          }
                        }
                      ],
                      "subtitle": "two analyses",
                      "title": "slide2"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-04": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 1
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "histogram"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/18917a1e1cf04bfb965c0665135b8734/variables/3kJGzhX1raKyuMCxK61vq2000001/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          },
                          "query_environment": {}
                        }
                      ],
                      "subtitle": "two analyses",
                      "title": "slide2"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-05": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": {
                                "column": 2
                              }
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 2
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": true
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/3e78dab27eba41a3b014edb7ef962dd3/variables/ac62f49fe0944baf8030839227d7cf06/"
                              },
                              {
                                "variable": "https://app.crunch.io/api/datasets/3e78dab27eba41a3b014edb7ef962dd3/variables/6516786c22f74b4bbf5e7b55543ebd41/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "ObamaIdeology",
                      "title": "ShutdownBlame"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-06": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 0
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "args": [
                                  {
                                    "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/000001/"
                                  },
                                  {
                                    "value": null
                                  }
                                ],
                                "function": "rollup"
                              },
                              {
                                "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "x",
                      "title": "y"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-07": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 2
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/628a307bb38f47848fdb36f44067fb6d/variables/6dOZ9fHV0HAqgr43zNUen1000007/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "Basin_Name"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-08": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 2
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/ef914b272fba45c69bfc9f105b610403/variables/5ub04IUYrTadFWs9FEgxh2000000/"
                              },
                              {
                                "variable": "https://app.crunch.io/api/datasets/ef914b272fba45c69bfc9f105b610403/variables/5ub04IUYrTadFWs9FEgxh2000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "pdl_employee_jobtitle",
                      "title": "pdl_employee_jobtitle"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-09": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 2
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.browse"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/variables/5GGNHjeRJjedbdte7RlTFE000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "x"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-10": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 2
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/variables/5GGNHjeRJjedbdte7RlTFE000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "x"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-11": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 2
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "groupedBarPlot"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/297b71dc0f74456fa7f241e7db51d031/variables/5GGNHjeRJjedbdte7RlTFE000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "x"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-12": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 2
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [
                              {
                                "args": [
                                  {
                                    "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/00000d/"
                                  },
                                  {
                                    "column": [
                                      "000005"
                                    ]
                                  }
                                ],
                                "function": "any",
                                "name": "mymrset: Response #2"
                              }
                            ],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "x"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-13": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "columnSignificance": {
                              "value": null
                            },
                            "countsOrPercents": {
                              "value": "percent"
                            },
                            "currentTab": {
                              "value": 0
                            },
                            "decimalPlaces": {
                              "value": 0
                            },
                            "percentageDirection": {
                              "value": "colPct"
                            },
                            "populationMagnitude": {
                              "value": 3
                            },
                            "showEmpty": {
                              "value": false
                            },
                            "showMean": {
                              "value": false
                            },
                            "showSignif": {
                              "value": false
                            },
                            "showValueLabels": {
                              "value": false
                            },
                            "uiView": {
                              "value": "app.datasets.analyze"
                            },
                            "vizType": {
                              "value": "table"
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/de620c7f794a4181b4d9c079c88bd62a/variables/000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "weight": null
                          },
                          "query_environment": {
                            "filter": [],
                            "weight": null
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "x"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-14": {
                  "value": {
                    "body": {
                      "markdown": "# title\n body",
                      "title": "Markdown slide",
                      "type": "markdown"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-15": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "countsOrPercents": {
                              "value": "count"
                            },
                            "weighted": {
                              "value": true
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/adde224f7b974fc8a13d916cc00f87b9/variables/4O4bQgzv0XzuCdxZAwvCU4000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "S1"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-16": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "countsOrPercents": {
                              "value": "count"
                            },
                            "weighted": {
                              "value": true
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/4e53913d9550404d9ccb495da5fc21cc/variables/4z1J7bOHaNyn3g9NAyIOwr000001/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          },
                          "query_environment": {
                            "filter": [
                              "722f9a795494476b94c569d1641be90a"
                            ]
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "S1"
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-17": {
                  "value": {
                    "body": {
                      "analyses": [
                        {
                          "display_settings": {
                            "countsOrPercents": {
                              "value": "count"
                            },
                            "weighted": {
                              "value": true
                            }
                          },
                          "query": {
                            "dimensions": [
                              {
                                "variable": "https://app.crunch.io/api/datasets/2b66556f705e4cc4970bf778fe89f6bc/variables/45O2zh9vXyDDDCAzWgu6dq000000/"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            }
                          }
                        }
                      ],
                      "subtitle": "",
                      "title": "S1"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "properties": {
                  "analyses": {
                    "items": {
                      "properties": {
                        "query": {
                          "properties": {
                            "dimensions": {
                              "items": {
                                "properties": {
                                  "local": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "measures": {
                              "properties": {
                                "count": {
                                  "properties": {
                                    "args": {
                                      "items": {},
                                      "type": "array"
                                    },
                                    "function": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "with": {
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "body": {
                    "properties": {
                      "analyses": {
                        "items": {
                          "properties": {
                            "display_settings": {
                              "type": "string"
                            },
                            "query": {
                              "properties": {
                                "dimensions": {
                                  "items": {
                                    "properties": {
                                      "variable": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "measures": {
                                  "properties": {
                                    "count": {
                                      "properties": {
                                        "args": {
                                          "items": {},
                                          "type": "array"
                                        },
                                        "function": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "markdown": {
                        "type": "string"
                      },
                      "subtitle": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-order-element"
                  },
                  "markdown": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "default": "analysis",
                    "enum": [
                      "markdown",
                      "analysis"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "unrecognized slide-type: ' Not markdown'"
                      ],
                      "message": "unrecognized slide-type: ' Not markdown'",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDDecksDeckIDSlidesPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create slide",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"analyses\": [\n    {\n      \"query\": {\n        \"dimensions\": [\n          {\n            \"local\": \"v1.variables\"\n          },\n          {\n            \"local\": \"v1.subvariables\"\n          },\n          {\n            \"local\": \"v1.categories\"\n          }\n        ],\n        \"measures\": {\n          \"count\": {\n            \"args\": [],\n            \"function\": \"cube_count\"\n          }\n        },\n        \"with\": {\n          \"v1\": {\n            \"args\": [\n              [\n                {\n                  \"args\": [\n                    {\n                      \"variable\": \"https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/\"\n                    }\n                  ],\n                  \"function\": \"as_selected\"\n                },\n                {\n                  \"args\": [\n                    {\n                      \"variable\": \"https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/\"\n                    }\n                  ],\n                  \"function\": \"as_selected\"\n                }\n              ]\n            ],\n            \"function\": \"fuse\"\n          }\n        }\n      }\n    }\n  ],\n  \"body\": {\n    \"analyses\": [\n      {\n        \"display_settings\": {\n          \"countsOrPercents\": {\n            \"value\": \"count\"\n          },\n          \"weighted\": {\n            \"value\": true\n          }\n        },\n        \"query\": {\n          \"dimensions\": [\n            {\n              \"variable\": \"https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/variables/0lTUa4UO7GeI3qZOMPsmhK000000/\"\n            }\n          ],\n          \"measures\": {\n            \"count\": {\n              \"args\": [],\n              \"function\": \"cube_count\"\n            }\n          }\n        }\n      }\n    ],\n    \"markdown\": \"# title\\n body\",\n    \"subtitle\": \"\",\n    \"title\": \"S1\",\n    \"type\": \"markdown\"\n  },\n  \"element\": \"shoji:entity\",\n  \"markdown\": \"# title\\n body\",\n  \"subtitle\": \"Slide Subtitle\",\n  \"title\": \"Slide Title\",\n  \"type\": \"markdown\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idDecksDeck_idSlides = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/',\n{\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"analyses\": [\n       {\n         \"query\": {\n           \"dimensions\": [\n             {\n               \"local\": \"v1.variables\"\n             },\n             {\n               \"local\": \"v1.subvariables\"\n             },\n             {\n               \"local\": \"v1.categories\"\n             }\n           ],\n           \"measures\": {\n             \"count\": {\n               \"args\": [],\n               \"function\": \"cube_count\"\n             }\n           },\n           \"with\": {\n             \"v1\": {\n               \"args\": [\n                 [\n                   {\n                     \"args\": [\n                       {\n                         \"variable\": \"https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/\"\n                       }\n                     ],\n                     \"function\": \"as_selected\"\n                   },\n                   {\n                     \"args\": [\n                       {\n                         \"variable\": \"https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/\"\n                       }\n                     ],\n                     \"function\": \"as_selected\"\n                   }\n                 ]\n               ],\n               \"function\": \"fuse\"\n             }\n           }\n         }\n       }\n     ],\n     \"body\": {\n       \"analyses\": [\n         {\n           \"display_settings\": {\n             \"countsOrPercents\": {\n               \"value\": \"count\"\n             },\n             \"weighted\": {\n               \"value\": true\n             }\n           },\n           \"query\": {\n             \"dimensions\": [\n               {\n                 \"variable\": \"https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/variables/0lTUa4UO7GeI3qZOMPsmhK000000/\"\n               }\n             ],\n             \"measures\": {\n               \"count\": {\n                 \"args\": [],\n                 \"function\": \"cube_count\"\n               }\n             }\n           }\n         }\n       ],\n       \"markdown\": \"# title\\n body\",\n       \"subtitle\": \"\",\n       \"title\": \"S1\",\n       \"type\": \"markdown\"\n     },\n     \"element\": \"shoji:entity\",\n     \"markdown\": \"# title\\n body\",\n     \"subtitle\": \"Slide Subtitle\",\n     \"title\": \"Slide Title\",\n     \"type\": \"markdown\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/{deck_id}/slides/flat/": {
      "get": {
        "description": "This endpont returns a list of all the slides in the deck in order.",
        "operationId": "get-datasets-dataset_id-decks-deck_id-slides-flat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Order of the slides on this deck",
                      "element": "shoji:order",
                      "graph": [
                        "/api/datasets/123/decks/123/slides/123/",
                        "/api/datasets/123/decks/123/slides/456/"
                      ],
                      "self": "/api/datasets/123/decks/123/slides/flat/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-order-element"
                    },
                    "graph": {
                      "description": "Array of slide URLs.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "title": "DatasetsDatasetIDDecksDeckIDSlidesFlatGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List slide order",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/flat/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecksDeck_idSlidesFlat = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/flat/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the deck you are working with",
          "in": "path",
          "name": "deck_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "To make changes to the order, send the full shoji:order resource to this endpoint with the new order on its graph attribute.\n\nAny slide not mentioned on the payload will be added at the end of the graph in arbitrary order.\n\nThis is a flat order: grouping or nesting is not allowed. Sending a nested order to this endpoint will generate a 400 response.",
        "operationId": "patch-datasets-dataset_id-decks-deck_id-slides-flat",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "description": "Order of the slides on this deck",
                    "element": "shoji:order",
                    "graph": [
                      "/api/datasets/123/decks/123/slides/123/",
                      "/api/datasets/123/decks/123/slides/456/"
                    ],
                    "self": "/api/datasets/123/decks/123/slides/flat/"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-order-element"
                  },
                  "graph": {
                    "description": "Array of slide URLs.",
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  },
                  "self": {
                    "type": "string"
                  }
                },
                "title": "DatasetsDatasetIDDecksDeckIDSlidesFlatPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Change slide order",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/flat/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"description\": \"Order of the slides on this deck\",\n  \"element\": \"shoji:order\",\n  \"graph\": [\n    \"/api/datasets/123/decks/123/slides/123/\",\n    \"/api/datasets/123/decks/123/slides/456/\"\n  ],\n  \"self\": \"/api/datasets/123/decks/123/slides/flat/\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idDecksDeck_idSlidesFlat = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/flat/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"description\": \"Order of the slides on this deck\",\n     \"element\": \"shoji:order\",\n     \"graph\": [\n       \"/api/datasets/123/decks/123/slides/123/\",\n       \"/api/datasets/123/decks/123/slides/456/\"\n     ],\n     \"self\": \"/api/datasets/123/decks/123/slides/flat/\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/": {
      "delete": {
        "description": "",
        "operationId": "delete-datasets-dataset_id-decks-deck_id-slides-slide_id",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        },
        "summary": "Delete slide",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idDecksDeck_idSlidesSlide_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/',\n{\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "Returns the detail information for a given slide",
        "operationId": "get-datasets-dataset_id-decks-deck_id-slides-slide_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "analysis_url": "https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/decks/a677f1b26b214c2bb420a37f7b226d08/slides/73d31615f5284363ad6423dfd82c294b/analyses/6e0d49fd61064460b08800c7e078e136/",
                        "dataset_id": "5a6ca26628274544a74c458ea90a46e2",
                        "deck_id": "a677f1b26b214c2bb420a37f7b226d08",
                        "display_settings": {
                          "countsOrPercents": {
                            "value": "count"
                          },
                          "weighted": {
                            "value": true
                          }
                        },
                        "id": "73d31615f5284363ad6423dfd82c294b",
                        "subtitle": "",
                        "title": "S1",
                        "transform": {},
                        "type": "analysis",
                        "version": "master__tip"
                      },
                      "catalogs": {
                        "analyses": "https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/decks/a677f1b26b214c2bb420a37f7b226d08/slides/73d31615f5284363ad6423dfd82c294b/analyses/"
                      },
                      "description": "Returns the detail information for a given slide",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/5a6ca26628274544a74c458ea90a46e2/decks/a677f1b26b214c2bb420a37f7b226d08/slides/73d31615f5284363ad6423dfd82c294b/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "analysis_url": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "dataset_id": {
                          "type": "string"
                        },
                        "deck_id": {
                          "type": "string"
                        },
                        "display_settings": {
                          "additionalProperties": false,
                          "properties": {
                            "countsOrPercents": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [],
                              "title": "CountsOrPercents",
                              "type": "object"
                            },
                            "weighted": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "boolean"
                                }
                              },
                              "required": [],
                              "title": "Weighted",
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "DisplaySettings",
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "subtitle": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "transform": {
                          "additionalProperties": false,
                          "title": "Transform",
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "analyses": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDDecksDeckIDSlidesSlideIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Slide not found"
                      ],
                      "message": "Slide not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDDecksDeckIDSlidesSlideIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Slide details",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecksDeck_idSlidesSlide_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the deck you are working with",
          "in": "path",
          "name": "deck_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the slide you are working with",
          "in": "path",
          "name": "slide_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "patch-datasets-dataset_id-decks-deck_id-slides-slide_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "subtitle": "Tis a silly place",
                      "title": "Camelot"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "subtitle": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "subtitle": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDDecksDeckIDSlidesSlideIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Cannot edit: x"
                      ],
                      "message": "Cannot edit: x",
                      "status": "400"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Update slide",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"subtitle\": \"Tis a silly place\",\n    \"title\": \"Camelot\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idDecksDeck_idSlidesSlide_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"subtitle\": \"Tis a silly place\",\n       \"title\": \"Camelot\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/": {
      "get": {
        "description": "Each slide contains one or more analyses. An analysis \u2013 a table or graph with some specific combination of variables defining measures, rows, columns, and tabs; and settings such as percentage direction and decimal places \u2013 can be saved to a deck, which can then be exported, or the analysis can be reloaded in whole in the application or even exported as a standalone embeddable result. Note that while a slide can have multiple analyses, only the first analysis for each slide is used when exporting to Excel or PowerPoint.\n\nAn analysis is defined by a query, query environment, and display settings. To save an analysis, POST these to a deck as a new slide.\n\nAnalysis queries are described in detail in the feature guide. Filters may contain a mix of stored filters or expressions. Expressions may contain an optional name which may be used to label results.\n\nDisplay settings can be anything a client may need to reproduce the view of the data returned from the query. The settings the Crunch web client uses are shown here, but other clients are free to store other attributes as they see fit. Display settings should be objects with a value member.",
        "operationId": "get-datasets-dataset_id-decks-deck_id-slides-slide_id-analyses",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "List of all analyses inside this slide",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/decks/39e837852d1e4d22ada34fbe7cb7bb38/slides/eaf7b61a91e8481e9f5756a034f1db77/analyses/2049af9d9fa645edb3b595f51f9dc336/": {
                          "display_settings": {},
                          "query": {
                            "dimensions": [
                              {
                                "local": "v1.variables"
                              },
                              {
                                "local": "v1.subvariables"
                              },
                              {
                                "local": "v1.categories"
                              }
                            ],
                            "measures": {
                              "count": {
                                "args": [],
                                "function": "cube_count"
                              }
                            },
                            "with": {
                              "v1": {
                                "args": [
                                  [
                                    {
                                      "args": [
                                        {
                                          "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/"
                                        }
                                      ],
                                      "function": "as_selected"
                                    },
                                    {
                                      "args": [
                                        {
                                          "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/"
                                        }
                                      ],
                                      "function": "as_selected"
                                    }
                                  ]
                                ],
                                "function": "fuse"
                              }
                            }
                          },
                          "query_environment": {}
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/decks/39e837852d1e4d22ada34fbe7cb7bb38/slides/eaf7b61a91e8481e9f5756a034f1db77/analyses/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "description": {
                      "default": "",
                      "example": "List of all analyses inside this slide",
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "properties": {
                        "slide_url": {
                          "properties": {
                            "display_settings": {
                              "additionalProperties": true,
                              "example": {},
                              "type": "object"
                            },
                            "query": {
                              "additionalProperties": true,
                              "example": {
                                "dimensions": [
                                  {
                                    "local": "v1.variables"
                                  },
                                  {
                                    "local": "v1.subvariables"
                                  },
                                  {
                                    "local": "v1.categories"
                                  }
                                ],
                                "measures": {
                                  "count": {
                                    "args": [],
                                    "function": "cube_count"
                                  }
                                },
                                "with": {
                                  "v1": {
                                    "args": [
                                      [
                                        {
                                          "args": [
                                            {
                                              "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/"
                                            }
                                          ],
                                          "function": "as_selected"
                                        },
                                        {
                                          "args": [
                                            {
                                              "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/"
                                            }
                                          ],
                                          "function": "as_selected"
                                        }
                                      ]
                                    ],
                                    "function": "fuse"
                                  }
                                }
                              },
                              "properties": {
                                "dimensions": {
                                  "example": [
                                    {
                                      "local": "v1.variables"
                                    },
                                    {
                                      "local": "v1.subvariables"
                                    }
                                  ],
                                  "items": {
                                    "properties": {
                                      "local": {
                                        "default": "",
                                        "example": "v1.variables",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array",
                                  "x-additionalItems": true
                                },
                                "measures": {
                                  "additionalProperties": true,
                                  "example": {
                                    "count": {
                                      "args": [],
                                      "function": "cube_count"
                                    }
                                  },
                                  "properties": {
                                    "count": {
                                      "additionalProperties": true,
                                      "description": "",
                                      "example": {
                                        "args": [],
                                        "function": "cube_count"
                                      },
                                      "properties": {
                                        "args": {
                                          "default": [],
                                          "example": [],
                                          "items": {},
                                          "type": "array",
                                          "x-additionalItems": true
                                        },
                                        "function": {
                                          "default": "",
                                          "example": "cube_count",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "with": {
                                  "additionalProperties": true,
                                  "example": {
                                    "v1": {
                                      "args": [
                                        [
                                          {
                                            "args": [
                                              {
                                                "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/"
                                              }
                                            ],
                                            "function": "as_selected"
                                          },
                                          {
                                            "args": [
                                              {
                                                "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/"
                                              }
                                            ],
                                            "function": "as_selected"
                                          }
                                        ]
                                      ],
                                      "function": "fuse"
                                    }
                                  },
                                  "properties": {
                                    "v1": {
                                      "additionalProperties": true,
                                      "example": {
                                        "args": [
                                          [
                                            {
                                              "args": [
                                                {
                                                  "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/"
                                                }
                                              ],
                                              "function": "as_selected"
                                            },
                                            {
                                              "args": [
                                                {
                                                  "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/"
                                                }
                                              ],
                                              "function": "as_selected"
                                            }
                                          ]
                                        ],
                                        "function": "fuse"
                                      },
                                      "properties": {
                                        "args": {
                                          "example": [
                                            [
                                              {
                                                "args": [
                                                  {
                                                    "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/"
                                                  }
                                                ],
                                                "function": "as_selected"
                                              },
                                              {
                                                "args": [
                                                  {
                                                    "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/"
                                                  }
                                                ],
                                                "function": "as_selected"
                                              }
                                            ]
                                          ],
                                          "items": {},
                                          "type": "array",
                                          "x-additionalItems": true
                                        },
                                        "function": {
                                          "default": "",
                                          "example": "fuse",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "query_environment": {
                              "additionalProperties": true,
                              "description": "",
                              "example": {},
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "self": {
                      "default": "",
                      "description": "",
                      "example": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/decks/39e837852d1e4d22ada34fbe7cb7bb38/slides/eaf7b61a91e8481e9f5756a034f1db77/analyses/",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List analyses",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecksDeck_idSlidesSlide_idAnalyses = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the deck you are working with",
          "in": "path",
          "name": "deck_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the slide you are working with",
          "in": "path",
          "name": "slide_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/{analysis_id}/": {
      "get": {
        "description": "An analysis is defined by a query, query environment, and display settings. To save an analysis, POST these to a deck as a new slide.\n\nAnalysis queries are described in detail in the feature guide. Filters may contain a mix of stored filters or expressions. Expressions may contain an optional name which may be used to label results.\n\nDisplay settings can be anything a client may need to reproduce the view of the data returned from the query. The settings the Crunch web client uses are shown here, but other clients are free to store other attributes as they see fit. Display settings should be objects with a value member.",
        "operationId": "get-datasets-dataset_id-decks-deck_id-slides-slide_id-analyses-analysis_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "display_settings": {
                          "columnSignificance": {
                            "value": null
                          },
                          "countsOrPercents": {
                            "value": "percent"
                          },
                          "currentTab": {
                            "value": 0
                          },
                          "decimalPlaces": {
                            "value": 0
                          },
                          "percentageDirection": {
                            "value": "colPct"
                          },
                          "populationMagnitude": {
                            "value": 3
                          },
                          "showEmpty": {
                            "value": true
                          },
                          "showMean": {
                            "value": true
                          },
                          "showSignif": {
                            "value": false
                          },
                          "showValueLabels": {
                            "value": false
                          },
                          "uiView": {
                            "value": "app.datasets.analyze"
                          },
                          "vizType": {
                            "value": "table"
                          }
                        },
                        "id": "e443506b266c4cb98d02ba9c6846a13e",
                        "query": {
                          "dimensions": [
                            {
                              "variable": "https://app.crunch.io/api/datasets/1433e16a07474ec1b1b3c0fbb0acd3c8/variables/000000/"
                            },
                            {
                              "args": [
                                {
                                  "variable": "https://app.crunch.io/api/datasets/1433e16a07474ec1b1b3c0fbb0acd3c8/variables/000001/"
                                },
                                {
                                  "value": null
                                }
                              ],
                              "function": "rollup"
                            }
                          ],
                          "measures": {
                            "count": {
                              "args": [],
                              "function": "cube_count"
                            }
                          },
                          "weight": "https://app.crunch.io/api/datasets/1433e16a07474ec1b1b3c0fbb0acd3c8/variables/88908b0a6be04128be2fb1d69d0a0bcf/"
                        },
                        "query_environment": {
                          "filter": [],
                          "weight": "https://app.crunch.io/api/datasets/1433e16a07474ec1b1b3c0fbb0acd3c8/variables/88908b0a6be04128be2fb1d69d0a0bcf/"
                        },
                        "transform": {
                          "rows_dimension": {
                            "elements": {
                              "1": {
                                "fill": "#340043"
                              },
                              "2": {
                                "fill": "#640083"
                              },
                              "3": {
                                "fill": "#9100bf"
                              },
                              "4": {
                                "fill": "#c300ff"
                              },
                              "9": {
                                "fill": "#e17fff"
                              }
                            }
                          },
                          "version": "1.0"
                        },
                        "viz_specs": {}
                      },
                      "description": "Data to build a given analysis",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/1433e16a07474ec1b1b3c0fbb0acd3c8/decks/1189c989befb4fdd9a4d6e18a6200b49/slides/0699538ecf4d434da31dc73815cae616/analyses/e443506b266c4cb98d02ba9c6846a13e/"
                    }
                  },
                  "example-2": {
                    "value": {
                      "body": {
                        "display_settings": {},
                        "id": "2049af9d9fa645edb3b595f51f9dc336",
                        "query": {
                          "dimensions": [
                            {
                              "local": "v1.variables"
                            },
                            {
                              "local": "v1.subvariables"
                            },
                            {
                              "local": "v1.categories"
                            }
                          ],
                          "measures": {
                            "count": {
                              "args": [],
                              "function": "cube_count"
                            }
                          },
                          "with": {
                            "v1": {
                              "args": [
                                [
                                  {
                                    "args": [
                                      {
                                        "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/0e4674f46dcb4188adc82b7fca1f3ede/"
                                      }
                                    ],
                                    "function": "as_selected"
                                  },
                                  {
                                    "args": [
                                      {
                                        "variable": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/variables/e19bb384f740410a833ee361a08a21a5/"
                                      }
                                    ],
                                    "function": "as_selected"
                                  }
                                ]
                              ],
                              "function": "fuse"
                            }
                          }
                        },
                        "query_environment": {},
                        "transform": {},
                        "viz_specs": {}
                      },
                      "description": "Data to build a given analysis",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/3b7aea07d2554426baa1f4b50342e6b0/decks/39e837852d1e4d22ada34fbe7cb7bb38/slides/eaf7b61a91e8481e9f5756a034f1db77/analyses/2049af9d9fa645edb3b595f51f9dc336/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "display_settings": {
                          "additionalProperties": false,
                          "description": "Contains client-specific instructions on how to recreate the analysis.",
                          "properties": {
                            "bins": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "bivariateCycle": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "columnSignificance": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "countMarginType": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "countsOrPercents": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "currentTab": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "decimalPlaces": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "dropdownSettings": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "geoChart": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "groupMode": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "marginLocation": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "minBaseSize": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "percentageDirection": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "pivot": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "populationMagnitude": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "populationSize": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "preferredBarPlotMode": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "selectedColumn": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "separateOrCombined": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "showCategoriesSubtotals": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "showDescription": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "showEmpty": {
                              "additionalProperties": false,
                              "properties": {
                                "disabled": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "type": "boolean"
                                }
                              },
                              "title": "ShowEmpty",
                              "type": "object"
                            },
                            "showMean": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "showSignif": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "showValueLabels": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "showVisualization": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "simpleOrExtended": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "sortDirection": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "sortKey": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "integer"
                                }
                              },
                              "title": "Bins",
                              "type": "object"
                            },
                            "sortSource": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "suppressOnMinBaseSize": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "uiView": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            },
                            "vizType": {
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "col_id": {
                                          "type": "integer"
                                        },
                                        "row_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "title": "ValueClass",
                                      "type": "object"
                                    },
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "title": "ValueUnion"
                                }
                              },
                              "title": "BivariateCycle",
                              "type": "object"
                            }
                          },
                          "title": "DisplaySettings",
                          "type": "object"
                        },
                        "query": {
                          "additionalProperties": false,
                          "properties": {
                            "dimensions": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "variable": {
                                    "format": "uri",
                                    "type": "string",
                                    "x-qt-uri-protocols": [
                                      "https"
                                    ]
                                  }
                                },
                                "title": "Dimension",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "measures": {
                              "additionalProperties": false,
                              "properties": {
                                "count": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "args": {
                                      "items": {},
                                      "type": "array"
                                    },
                                    "function": {
                                      "type": "string"
                                    }
                                  },
                                  "title": "Count",
                                  "type": "object"
                                }
                              },
                              "title": "Measures",
                              "type": "object"
                            }
                          },
                          "title": "Query",
                          "type": "object"
                        },
                        "transform": {
                          "additionalProperties": false,
                          "description": "Contains client-specific instructions on how to manipulate the rendering of the analysis.",
                          "properties": {
                            "app_schema": {
                              "additionalProperties": false,
                              "properties": {
                                "rows_dimension": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "elements": {
                                      "additionalProperties": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "fill": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [],
                                        "title": "Element",
                                        "type": "object"
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "title": "RowsDimension",
                                  "type": "object"
                                },
                                "version": {
                                  "type": "string"
                                }
                              },
                              "title": "AppSchema",
                              "type": "object"
                            },
                            "rows_dimension": {
                              "additionalProperties": false,
                              "properties": {
                                "elements": {
                                  "additionalProperties": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "fill": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [],
                                    "title": "Element",
                                    "type": "object"
                                  },
                                  "type": "object"
                                }
                              },
                              "title": "RowsDimension",
                              "type": "object"
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "title": "Transform",
                          "type": "object"
                        },
                        "viz_specs": {
                          "additionalProperties": false,
                          "properties": {
                            "kpi": {
                              "additionalProperties": false,
                              "properties": {
                                "aux_indicators": {
                                  "additionalProperties": false,
                                  "title": "AuxIndicators",
                                  "type": "object"
                                },
                                "select": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "value": {
                                      "anyOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "col_id": {
                                              "type": "integer"
                                            },
                                            "row_id": {
                                              "type": "integer"
                                            }
                                          },
                                          "title": "ValueClass",
                                          "type": "object"
                                        },
                                        {
                                          "nullable": true
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "title": "ValueUnion"
                                    }
                                  },
                                  "title": "BivariateCycle",
                                  "type": "object"
                                }
                              },
                              "title": "Kpi",
                              "type": "object"
                            }
                          },
                          "title": "VizSpecs",
                          "type": "object"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "query_environment": {
                      "additionalProperties": false,
                      "description": "Contains weight and filters to be used for rendering/evaluating this analysis. The weight item must be a variable-URL, null, or the key may be omitted. A variable-URL must correspond to a variable in the weight_variables collection for the dataset. A value of null indicates unweighted. When the weight key is omitted, the current-weight of the user making the evaluate/render/export request is used and may vary between users.",
                      "properties": {
                        "filter": {
                          "items": {},
                          "type": "array"
                        }
                      },
                      "title": "QueryEnvironment",
                      "type": "object"
                    }
                  },
                  "title": "DatasetsDatasetIDDecksDeckIDSlidesSlideIDAnalysesAnalysisIDPatchRequestaa",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDDecksDeckIDSlidesSlideIDAnalysesAnalysisIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Analysis details",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/{analysis_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idDecksDeck_idSlidesSlide_idAnalysesAnalysis_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/{analysis_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the deck you are working with",
          "in": "path",
          "name": "deck_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the slide you are working with",
          "in": "path",
          "name": "slide_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the analysis you are working with",
          "in": "path",
          "name": "analysis_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Editable attributes are:\n\n* query\n* query_environment\n* display_settings\n* transform\n\nProviding invalid values for those attributes or extra attributes will be rejected with a 400 response from the server.\n\nEditing an analysis query on a public deck cannot add reference to a secure variable; such a request results in a 400 response. Hidden variables, however, are permitted.",
        "operationId": "patch-datasets-dataset_id-decks-deck_id-slides-slide_id-analyses-analysis_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "display_settings": {
                        "bins": {
                          "value": 7
                        },
                        "bivariateCycle": {
                          "value": "stack"
                        },
                        "columnSignificance": {
                          "value": null
                        },
                        "countMarginType": {
                          "value": "unweighted"
                        },
                        "countsOrPercents": {
                          "value": "count"
                        },
                        "currentTab": {
                          "value": 0
                        },
                        "decimalPlaces": {
                          "value": 2
                        },
                        "dropdownSettings": {
                          "value": 0
                        },
                        "geoChart": {
                          "value": true
                        },
                        "groupMode": {
                          "value": "stack"
                        },
                        "marginLocation": {
                          "value": "after"
                        },
                        "minBaseSize": {
                          "value": 0
                        },
                        "percentageDirection": {
                          "value": "colPct"
                        },
                        "pivot": {
                          "value": true
                        },
                        "populationMagnitude": {
                          "value": 3
                        },
                        "populationSize": {
                          "value": 0
                        },
                        "preferredBarPlotMode": {
                          "value": "groupedBarPlot"
                        },
                        "selectedColumn": {
                          "value": 0
                        },
                        "separateOrCombined": {
                          "value": "separate"
                        },
                        "showCategoriesSubtotals": {
                          "value": "both"
                        },
                        "showDescription": {
                          "value": true
                        },
                        "showEmpty": {
                          "disabled": true,
                          "value": false
                        },
                        "showMean": {
                          "value": false
                        },
                        "showSignif": {
                          "value": false
                        },
                        "showValueLabels": {
                          "value": false
                        },
                        "showVisualization": {
                          "value": true
                        },
                        "simpleOrExtended": {
                          "value": "simple"
                        },
                        "sortDirection": {
                          "value": 0
                        },
                        "sortKey": {
                          "value": 0
                        },
                        "sortSource": {
                          "value": ""
                        },
                        "suppressOnMinBaseSize": {
                          "value": true
                        },
                        "uiView": {
                          "value": "app.datasets.analyze"
                        },
                        "vizType": {
                          "value": "kpi"
                        }
                      },
                      "query": {
                        "dimensions": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/18917a1e1cf04bfb965c0665135b8734/variables/3kJGzhX1raKyuMCxK61vq2000003/"
                          }
                        ],
                        "measures": {
                          "count": {
                            "args": [],
                            "function": "cube_count"
                          }
                        }
                      },
                      "transform": {
                        "app_schema": {
                          "rows_dimension": {
                            "elements": {
                              "1": {
                                "fill": "#316395"
                              },
                              "2": {
                                "fill": "#cf3e3e"
                              },
                              "3": {
                                "fill": "#feb82c"
                              },
                              "4": {
                                "fill": "#37ad6c"
                              },
                              "5": {
                                "fill": "#9537b5"
                              },
                              "6": {
                                "fill": "#17becf"
                              },
                              "7": {
                                "fill": "#e377c2"
                              }
                            }
                          },
                          "version": "1.0"
                        },
                        "rows_dimension": {
                          "elements": {
                            "1": {
                              "fill": "#316395"
                            },
                            "2": {
                              "fill": "#cf3e3e"
                            },
                            "3": {
                              "fill": "#feb82c"
                            },
                            "4": {
                              "fill": "#37ad6c"
                            },
                            "5": {
                              "fill": "#9537b5"
                            },
                            "6": {
                              "fill": "#17becf"
                            },
                            "7": {
                              "fill": "#e377c2"
                            }
                          }
                        },
                        "version": "1.0"
                      },
                      "viz_specs": {
                        "kpi": {
                          "aux_indicators": {},
                          "select": {
                            "value": {
                              "col_id": 0,
                              "row_id": 1
                            }
                          }
                        }
                      }
                    },
                    "element": "shoji:entity",
                    "query_environment": {
                      "filter": []
                    }
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "query": {
                        "dimensions": [
                          {
                            "variable": "https://app.crunch.io/api/datasets/18917a1e1cf04bfb965c0665135b8734/variables/3kJGzhX1raKyuMCxK61vq2000002/"
                          }
                        ],
                        "measures": {
                          "count": {
                            "args": [],
                            "function": "cube_count"
                          }
                        }
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "display_settings": {
                        "countsOrPercents": {
                          "value": "count"
                        },
                        "currentTab": {
                          "value": 0
                        },
                        "decimalPlaces": {
                          "value": 1
                        },
                        "percentageDirection": {
                          "value": "colPct"
                        },
                        "populationMagnitude": {
                          "value": 3
                        },
                        "showEmpty": {
                          "value": false
                        },
                        "showMean": {
                          "value": false
                        },
                        "showSignif": {
                          "value": false
                        },
                        "uiView": {
                          "value": "app.datasets.analyze"
                        },
                        "vizType": {
                          "value": "histogram"
                        }
                      }
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "display_settings": {
                        "bins": {
                          "value": 7
                        },
                        "bivariateCycle": {
                          "value": "stack"
                        },
                        "columnSignificance": {
                          "value": null
                        },
                        "countMarginType": {
                          "value": "unweighted"
                        },
                        "countsOrPercents": {
                          "value": "count"
                        },
                        "currentTab": {
                          "value": 0
                        },
                        "decimalPlaces": {
                          "value": 2
                        },
                        "dropdownSettings": {
                          "value": 0
                        },
                        "geoChart": {
                          "value": true
                        },
                        "groupMode": {
                          "value": "stack"
                        },
                        "marginLocation": {
                          "value": "after"
                        },
                        "minBaseSize": {
                          "value": 0
                        },
                        "percentageDirection": {
                          "value": "colPct"
                        },
                        "pivot": {
                          "value": true
                        },
                        "populationMagnitude": {
                          "value": 3
                        },
                        "populationSize": {
                          "value": 0
                        },
                        "preferredBarPlotMode": {
                          "value": "groupedBarPlot"
                        },
                        "selectedColumn": {
                          "value": 0
                        },
                        "separateOrCombined": {
                          "value": "separate"
                        },
                        "showCategoriesSubtotals": {
                          "value": "both"
                        },
                        "showDescription": {
                          "value": true
                        },
                        "showEmpty": {
                          "disabled": true,
                          "value": false
                        },
                        "showMean": {
                          "value": false
                        },
                        "showSignif": {
                          "value": false
                        },
                        "showValueLabels": {
                          "value": false
                        },
                        "showVisualization": {
                          "value": true
                        },
                        "simpleOrExtended": {
                          "value": "simple"
                        },
                        "sortDirection": {
                          "value": 0
                        },
                        "sortKey": {
                          "value": 0
                        },
                        "sortSource": {
                          "value": ""
                        },
                        "suppressOnMinBaseSize": {
                          "value": true
                        },
                        "vizType": {
                          "value": "kpi"
                        }
                      },
                      "transform": {
                        "app_schema": {
                          "rows_dimension": {
                            "elements": {
                              "1": {
                                "fill": "#316395"
                              },
                              "2": {
                                "fill": "#cf3e3e"
                              },
                              "3": {
                                "fill": "#feb82c"
                              },
                              "4": {
                                "fill": "#37ad6c"
                              },
                              "5": {
                                "fill": "#9537b5"
                              },
                              "6": {
                                "fill": "#17becf"
                              },
                              "7": {
                                "fill": "#e377c2"
                              }
                            }
                          },
                          "version": "1.0"
                        },
                        "rows_dimension": {
                          "elements": {
                            "1": {
                              "fill": "#316395"
                            },
                            "2": {
                              "fill": "#cf3e3e"
                            },
                            "3": {
                              "fill": "#feb82c"
                            },
                            "4": {
                              "fill": "#37ad6c"
                            },
                            "5": {
                              "fill": "#9537b5"
                            },
                            "6": {
                              "fill": "#17becf"
                            },
                            "7": {
                              "fill": "#e377c2"
                            }
                          }
                        },
                        "version": "1.0"
                      },
                      "viz_specs": {
                        "kpi": {
                          "aux_indicators": {},
                          "select": {
                            "value": {
                              "col_id": 0,
                              "row_id": 1
                            }
                          }
                        }
                      }
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "display_settings": {
                        "additionalProperties": false,
                        "properties": {
                          "bins": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "bivariateCycle": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "columnSignificance": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "countMarginType": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "countsOrPercents": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "currentTab": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "decimalPlaces": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "dropdownSettings": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "geoChart": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "groupMode": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "marginLocation": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "minBaseSize": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "percentageDirection": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "pivot": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "populationMagnitude": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "populationSize": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "preferredBarPlotMode": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "selectedColumn": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "separateOrCombined": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "showCategoriesSubtotals": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "showDescription": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "showEmpty": {
                            "additionalProperties": false,
                            "properties": {
                              "disabled": {
                                "type": "boolean"
                              },
                              "value": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "ShowEmpty",
                            "type": "object"
                          },
                          "showMean": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "showSignif": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "showValueLabels": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "showVisualization": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "simpleOrExtended": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "sortDirection": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "sortKey": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "integer"
                              }
                            },
                            "required": [],
                            "title": "Bins",
                            "type": "object"
                          },
                          "sortSource": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "suppressOnMinBaseSize": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "uiView": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          },
                          "vizType": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "col_id": {
                                        "type": "integer"
                                      },
                                      "row_id": {
                                        "type": "integer"
                                      }
                                    },
                                    "required": [],
                                    "title": "ValueClass",
                                    "type": "object"
                                  },
                                  {
                                    "nullable": true
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "title": "ValueUnion"
                              }
                            },
                            "required": [],
                            "title": "BivariateCycle",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "DisplaySettings",
                        "type": "object"
                      },
                      "query": {
                        "additionalProperties": false,
                        "properties": {
                          "dimensions": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "variable": {
                                  "format": "uri",
                                  "type": "string",
                                  "x-qt-uri-protocols": [
                                    "https"
                                  ]
                                }
                              },
                              "required": [],
                              "title": "Dimension",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "measures": {
                            "additionalProperties": false,
                            "properties": {
                              "count": {
                                "additionalProperties": false,
                                "properties": {
                                  "args": {
                                    "items": {},
                                    "type": "array"
                                  },
                                  "function": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "Count",
                                "type": "object"
                              }
                            },
                            "required": [],
                            "title": "Measures",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "Query",
                        "type": "object"
                      },
                      "transform": {
                        "additionalProperties": false,
                        "properties": {
                          "app_schema": {
                            "additionalProperties": false,
                            "properties": {
                              "rows_dimension": {
                                "additionalProperties": false,
                                "properties": {
                                  "elements": {
                                    "additionalProperties": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "fill": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [],
                                      "title": "Element",
                                      "type": "object"
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [],
                                "title": "RowsDimension",
                                "type": "object"
                              },
                              "version": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "AppSchema",
                            "type": "object"
                          },
                          "rows_dimension": {
                            "additionalProperties": false,
                            "properties": {
                              "elements": {
                                "additionalProperties": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "fill": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [],
                                  "title": "Element",
                                  "type": "object"
                                },
                                "type": "object"
                              }
                            },
                            "required": [],
                            "title": "RowsDimension",
                            "type": "object"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Transform",
                        "type": "object"
                      },
                      "viz_specs": {
                        "additionalProperties": false,
                        "properties": {
                          "kpi": {
                            "additionalProperties": false,
                            "properties": {
                              "aux_indicators": {
                                "additionalProperties": false,
                                "title": "AuxIndicators",
                                "type": "object"
                              },
                              "select": {
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "anyOf": [
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "properties": {
                                          "col_id": {
                                            "type": "integer"
                                          },
                                          "row_id": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [],
                                        "title": "ValueClass",
                                        "type": "object"
                                      },
                                      {
                                        "nullable": true
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "title": "ValueUnion"
                                  }
                                },
                                "required": [],
                                "title": "BivariateCycle",
                                "type": "object"
                              }
                            },
                            "required": [],
                            "title": "Kpi",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "VizSpecs",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "query_environment": {
                    "additionalProperties": false,
                    "properties": {
                      "filter": {
                        "items": {},
                        "type": "array"
                      }
                    },
                    "required": [],
                    "title": "QueryEnvironment",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDDecksDeckIDSlidesSlideIDAnalysesAnalysisIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Cannot edit attribute: x"
                      ],
                      "message": "Cannot edit attribute: x",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Update analysis",
        "tags": [
          "Slides"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/{analysis_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"display_settings\": {\n      \"bins\": {\n        \"value\": 7\n      },\n      \"bivariateCycle\": {\n        \"value\": \"stack\"\n      },\n      \"columnSignificance\": {\n        \"value\": null\n      },\n      \"countMarginType\": {\n        \"value\": \"unweighted\"\n      },\n      \"countsOrPercents\": {\n        \"value\": \"count\"\n      },\n      \"currentTab\": {\n        \"value\": 0\n      },\n      \"decimalPlaces\": {\n        \"value\": 2\n      },\n      \"dropdownSettings\": {\n        \"value\": 0\n      },\n      \"geoChart\": {\n        \"value\": true\n      },\n      \"groupMode\": {\n        \"value\": \"stack\"\n      },\n      \"marginLocation\": {\n        \"value\": \"after\"\n      },\n      \"minBaseSize\": {\n        \"value\": 0\n      },\n      \"percentageDirection\": {\n        \"value\": \"colPct\"\n      },\n      \"pivot\": {\n        \"value\": true\n      },\n      \"populationMagnitude\": {\n        \"value\": 3\n      },\n      \"populationSize\": {\n        \"value\": 0\n      },\n      \"preferredBarPlotMode\": {\n        \"value\": \"groupedBarPlot\"\n      },\n      \"selectedColumn\": {\n        \"value\": 0\n      },\n      \"separateOrCombined\": {\n        \"value\": \"separate\"\n      },\n      \"showCategoriesSubtotals\": {\n        \"value\": \"both\"\n      },\n      \"showDescription\": {\n        \"value\": true\n      },\n      \"showEmpty\": {\n        \"disabled\": true,\n        \"value\": false\n      },\n      \"showMean\": {\n        \"value\": false\n      },\n      \"showSignif\": {\n        \"value\": false\n      },\n      \"showValueLabels\": {\n        \"value\": false\n      },\n      \"showVisualization\": {\n        \"value\": true\n      },\n      \"simpleOrExtended\": {\n        \"value\": \"simple\"\n      },\n      \"sortDirection\": {\n        \"value\": 0\n      },\n      \"sortKey\": {\n        \"value\": 0\n      },\n      \"sortSource\": {\n        \"value\": \"\"\n      },\n      \"suppressOnMinBaseSize\": {\n        \"value\": true\n      },\n      \"uiView\": {\n        \"value\": \"app.datasets.analyze\"\n      },\n      \"vizType\": {\n        \"value\": \"kpi\"\n      }\n    },\n    \"query\": {\n      \"dimensions\": [\n        {\n          \"variable\": \"https://app.crunch.io/api/datasets/18917a1e1cf04bfb965c0665135b8734/variables/3kJGzhX1raKyuMCxK61vq2000003/\"\n        }\n      ],\n      \"measures\": {\n        \"count\": {\n          \"args\": [],\n          \"function\": \"cube_count\"\n        }\n      }\n    },\n    \"transform\": {\n      \"app_schema\": {\n        \"rows_dimension\": {\n          \"elements\": {\n            \"1\": {\n              \"fill\": \"#316395\"\n            },\n            \"2\": {\n              \"fill\": \"#cf3e3e\"\n            },\n            \"3\": {\n              \"fill\": \"#feb82c\"\n            },\n            \"4\": {\n              \"fill\": \"#37ad6c\"\n            },\n            \"5\": {\n              \"fill\": \"#9537b5\"\n            },\n            \"6\": {\n              \"fill\": \"#17becf\"\n            },\n            \"7\": {\n              \"fill\": \"#e377c2\"\n            }\n          }\n        },\n        \"version\": \"1.0\"\n      },\n      \"rows_dimension\": {\n        \"elements\": {\n          \"1\": {\n            \"fill\": \"#316395\"\n          },\n          \"2\": {\n            \"fill\": \"#cf3e3e\"\n          },\n          \"3\": {\n            \"fill\": \"#feb82c\"\n          },\n          \"4\": {\n            \"fill\": \"#37ad6c\"\n          },\n          \"5\": {\n            \"fill\": \"#9537b5\"\n          },\n          \"6\": {\n            \"fill\": \"#17becf\"\n          },\n          \"7\": {\n            \"fill\": \"#e377c2\"\n          }\n        }\n      },\n      \"version\": \"1.0\"\n    },\n    \"viz_specs\": {\n      \"kpi\": {\n        \"aux_indicators\": {},\n        \"select\": {\n          \"value\": {\n            \"col_id\": 0,\n            \"row_id\": 1\n          }\n        }\n      }\n    }\n  },\n  \"element\": \"shoji:entity\",\n  \"query_environment\": {\n    \"filter\": []\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idDecksDeck_idSlidesSlide_idAnalysesAnalysis_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/decks/{deck_id}/slides/{slide_id}/analyses/{analysis_id}/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"display_settings\": {\n         \"bins\": {\n           \"value\": 7\n         },\n         \"bivariateCycle\": {\n           \"value\": \"stack\"\n         },\n         \"columnSignificance\": {\n           \"value\": null\n         },\n         \"countMarginType\": {\n           \"value\": \"unweighted\"\n         },\n         \"countsOrPercents\": {\n           \"value\": \"count\"\n         },\n         \"currentTab\": {\n           \"value\": 0\n         },\n         \"decimalPlaces\": {\n           \"value\": 2\n         },\n         \"dropdownSettings\": {\n           \"value\": 0\n         },\n         \"geoChart\": {\n           \"value\": true\n         },\n         \"groupMode\": {\n           \"value\": \"stack\"\n         },\n         \"marginLocation\": {\n           \"value\": \"after\"\n         },\n         \"minBaseSize\": {\n           \"value\": 0\n         },\n         \"percentageDirection\": {\n           \"value\": \"colPct\"\n         },\n         \"pivot\": {\n           \"value\": true\n         },\n         \"populationMagnitude\": {\n           \"value\": 3\n         },\n         \"populationSize\": {\n           \"value\": 0\n         },\n         \"preferredBarPlotMode\": {\n           \"value\": \"groupedBarPlot\"\n         },\n         \"selectedColumn\": {\n           \"value\": 0\n         },\n         \"separateOrCombined\": {\n           \"value\": \"separate\"\n         },\n         \"showCategoriesSubtotals\": {\n           \"value\": \"both\"\n         },\n         \"showDescription\": {\n           \"value\": true\n         },\n         \"showEmpty\": {\n           \"disabled\": true,\n           \"value\": false\n         },\n         \"showMean\": {\n           \"value\": false\n         },\n         \"showSignif\": {\n           \"value\": false\n         },\n         \"showValueLabels\": {\n           \"value\": false\n         },\n         \"showVisualization\": {\n           \"value\": true\n         },\n         \"simpleOrExtended\": {\n           \"value\": \"simple\"\n         },\n         \"sortDirection\": {\n           \"value\": 0\n         },\n         \"sortKey\": {\n           \"value\": 0\n         },\n         \"sortSource\": {\n           \"value\": \"\"\n         },\n         \"suppressOnMinBaseSize\": {\n           \"value\": true\n         },\n         \"uiView\": {\n           \"value\": \"app.datasets.analyze\"\n         },\n         \"vizType\": {\n           \"value\": \"kpi\"\n         }\n       },\n       \"query\": {\n         \"dimensions\": [\n           {\n             \"variable\": \"https://app.crunch.io/api/datasets/18917a1e1cf04bfb965c0665135b8734/variables/3kJGzhX1raKyuMCxK61vq2000003/\"\n           }\n         ],\n         \"measures\": {\n           \"count\": {\n             \"args\": [],\n             \"function\": \"cube_count\"\n           }\n         }\n       },\n       \"transform\": {\n         \"app_schema\": {\n           \"rows_dimension\": {\n             \"elements\": {\n               \"1\": {\n                 \"fill\": \"#316395\"\n               },\n               \"2\": {\n                 \"fill\": \"#cf3e3e\"\n               },\n               \"3\": {\n                 \"fill\": \"#feb82c\"\n               },\n               \"4\": {\n                 \"fill\": \"#37ad6c\"\n               },\n               \"5\": {\n                 \"fill\": \"#9537b5\"\n               },\n               \"6\": {\n                 \"fill\": \"#17becf\"\n               },\n               \"7\": {\n                 \"fill\": \"#e377c2\"\n               }\n             }\n           },\n           \"version\": \"1.0\"\n         },\n         \"rows_dimension\": {\n           \"elements\": {\n             \"1\": {\n               \"fill\": \"#316395\"\n             },\n             \"2\": {\n               \"fill\": \"#cf3e3e\"\n             },\n             \"3\": {\n               \"fill\": \"#feb82c\"\n             },\n             \"4\": {\n               \"fill\": \"#37ad6c\"\n             },\n             \"5\": {\n               \"fill\": \"#9537b5\"\n             },\n             \"6\": {\n               \"fill\": \"#17becf\"\n             },\n             \"7\": {\n               \"fill\": \"#e377c2\"\n             }\n           }\n         },\n         \"version\": \"1.0\"\n       },\n       \"viz_specs\": {\n         \"kpi\": {\n           \"aux_indicators\": {},\n           \"select\": {\n             \"value\": {\n               \"col_id\": 0,\n               \"row_id\": 1\n             }\n           }\n         }\n       }\n     },\n     \"element\": \"shoji:entity\",\n     \"query_environment\": {\n       \"filter\": []\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/tags/": {
      "get": {
        "description": "This endpoint returns all variable tags present in a given dataset.",
        "operationId": "get-datasets-dataset_id-tags",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "description": "Variable tags for this dataset.",
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/98a3ab6e826f476c809ca546cc85f938/tags/tag%204/": {
                          "name": "tag 4"
                        },
                        "https://app.crunch.io/api/datasets/98a3ab6e826f476c809ca546cc85f938/tags/tag1/": {
                          "name": "tag1"
                        },
                        "https://app.crunch.io/api/datasets/98a3ab6e826f476c809ca546cc85f938/tags/tag2/": {
                          "name": "tag2"
                        },
                        "https://app.crunch.io/api/datasets/98a3ab6e826f476c809ca546cc85f938/tags/tag3/": {
                          "name": "tag3"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/98a3ab6e826f476c809ca546cc85f938/tags/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTagsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List variable tags",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/tags/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idTags = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/tags/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "This endpoint allows you to create a new variable tag and designate which variables attached to that variable tag.\n\nThe only allowed characters for tag names are: (unicode) letters, numbers, underscores and spaces; any other character is forbidden. Furthermore, tag names cannot be blank or consist only of space characters. The maximum allowed length for tag names is 20 characters.\n\nOptionally, the request payload may contain the initial list of variable urls that are to be attached to the new tag.\n\nA successful request will return a 201 status. The newly created \u201cvariable tag\u201d entity\u2019s URL is returned in the Location header.",
        "operationId": "post-datasets-dataset_id-tags",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "Hotel Barcel\u00f3",
                      "variables": [
                        "https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000001/",
                        "https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000000/",
                        "https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000002/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "name": "nums",
                      "variables": [
                        "https://app.crunch.io/api/datasets/a91840a9651944bba82200798f495cbd/variables/3jMrOzEXduhRGv6cfA2Eae000000/",
                        "https://app.crunch.io/api/datasets/a91840a9651944bba82200798f495cbd/variables/3jMrOzEXduhRGv6cfA2Eae000002/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "name": "others",
                      "variables": [
                        "https://app.crunch.io/api/datasets/a91840a9651944bba82200798f495cbd/variables/3jMrOzEXduhRGv6cfA2Eae000003/",
                        "https://app.crunch.io/api/datasets/a91840a9651944bba82200798f495cbd/variables/3jMrOzEXduhRGv6cfA2Eae00000a/",
                        "https://app.crunch.io/api/datasets/a91840a9651944bba82200798f495cbd/variables/3jMrOzEXduhRGv6cfA2Eae00000b/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "description": "Tag name.",
                        "type": "string"
                      },
                      "variables": {
                        "description": "Variables to include in this tag.",
                        "items": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "type": "array"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DatasetsDatasetIDTagsPostRequest",
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "201": {
            "description": "Item created",
            "headers": {
              "Location": {
                "description": "URI of the newly-created tag.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Tag names cannot exceed 30 characters"
                      ],
                      "message": "Tag names cannot exceed 30 characters",
                      "status": "400 Bad Request"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTagsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create variable tag",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/tags/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"Hotel Barcel\u00f3\",\n    \"variables\": [\n      \"https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000001/\",\n      \"https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000000/\",\n      \"https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000002/\"\n    ]\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idTags = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/tags/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"Hotel Barcel\u00f3\",\n       \"variables\": [\n         \"https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000001/\",\n         \"https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000000/\",\n         \"https://app.crunch.io/api/datasets/c9c754448f184e219ae2d68a2f764f70/variables/4rhEz2FmTyRV82Q3KF1flE000002/\"\n       ]\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/tags/{tag_name}": {
      "delete": {
        "description": "This endpoint deletes a variable tag and removes all variable associations to it.",
        "operationId": "delete-datasets-dataset_id-tags-tag",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        },
        "summary": "Delete variable tag",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/tags/{tag_name} \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idTagsTag = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/tags/{tag_name}', {\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "This endpoint lists the variables attached to a given tag.",
        "operationId": "get-datasets-dataset_id-tags-tag",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "name": "tag1",
                        "variables": [
                          "https://app.crunch.io/api/datasets/9192ee15acc14d77a9ffb3047452781a/variables/5XhFiBP3xxbI1k0DtgmtFu000001/"
                        ]
                      },
                      "description": "Variable tag details",
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/datasets/9192ee15acc14d77a9ffb3047452781a/tags/tag1/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "variables": {
                          "items": {
                            "format": "uri",
                            "type": "string",
                            "x-qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTagsTagGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Tag with name 'invalid_tag' not found"
                      ],
                      "message": "Tag with name 'invalid_tag' not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDTagsTagGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "List variables attached to tag",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/tags/{tag_name} \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idTagsTag = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/tags/{tag_name}', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique name of the tag you are working with",
          "in": "path",
          "name": "tag_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "To edit a variable tag, PATCH it with a shoji:entity object. The server will return a 204 response on success or 400 if the request is invalid.\n\nAdding or deleting variables is achieved by modifying the variables attribute to contain the desired variable URLs. Clearing the variables in the tag can be done by setting the variables attribute to an empty list ([]).",
        "operationId": "post-datasets-dataset_id-tags-tag",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "tag1",
                      "variables": [
                        "https://app.crunch.io/api/datasets/223fd4/variables/00000/",
                        "https://app.crunch.io/api/datasets/223fd4/variables/00001/"
                      ]
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "properties": {
                  "body": {
                    "properties": {
                      "name": {
                        "description": "Tag name",
                        "type": "string"
                      },
                      "variables": {
                        "description": "Array of variable URIs.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Edit variable tag",
        "tags": [
          "Dataset Details"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/tags/{tag_name} \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"name\": \"tag1\",\n    \"variables\": [\n      \"https://app.crunch.io/api/datasets/223fd4/variables/00000/\",\n      \"https://app.crunch.io/api/datasets/223fd4/variables/00001/\"\n    ]\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idTagsTag = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/tags/{tag_name}', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:entity\",\n     \"body\": {\n       \"name\": \"tag1\",\n       \"variables\": [\n         \"https://app.crunch.io/api/datasets/223fd4/variables/00000/\",\n         \"https://app.crunch.io/api/datasets/223fd4/variables/00001/\"\n       ]\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/folders/": {
      "get": {
        "description": "This endpoint returns the contents of the root variable folder.\n\nWhen a dataset is created without an order specified, the root folder will contain a flat list of all variables. As variables get grouped into folders, the root folder will continue showing any ungrouped variables in addition to the top-level folders.\n\nThis endpoint can be filtered by Variable Tags, so that only \u201ctagged\u201d variables are exposed. In contrast with the normal behavior, empty Folders are not exposed when Variable Tags are applied.\n\nIn order to specify the tags to filter by, one or more `tag=<tag_name> ` query string parameters must be added to the Folder GET requests.\n\nThe following are examples of tag filtering:\n\n* `/datasets/{id}/folders/?tag=tag1`\n* `/datasets/{id}/folders/?tag=tag1&tag=tag2`\n\nWhen filtering by multiple tags, the set of tagged variables will be constructed using `AND` logic. That is, when filtering by `tag=tag1&tag=tag2`, only variables that are tagged both tag1 **and** tag2 will be exposed.\n\nThe structure of the filtered Folder endpoints is exactly the same as their unfiltered counterparts.\n\nIf one or more of the `tag=<tag_name>` parameters are invalid, the Folder endpoint returns a `400 Bad Request` response with a helpful message on the reason for the failure to apply the tag(s).",
        "operationId": "get-datasets-dataset_id-folders",
        "parameters": [
          {
            "description": "tag",
            "in": "query",
            "name": "tag",
            "schema": {
              "default": "cats",
              "example": "cats",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "name": "Root"
                      },
                      "catalogs": {
                        "hidden": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/hidden/",
                        "parents": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/parents/",
                        "personal": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/variables/personal/",
                        "secure": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/secure/",
                        "trash": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/trash/"
                      },
                      "description": "This is the variables' folder root",
                      "element": "shoji:catalog",
                      "graph": [],
                      "index": {},
                      "self": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/",
                      "size": 0
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "Folder name, empty for root folder.",
                          "type": "string"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "hidden": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "parents": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "personal": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "secure": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "trash": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "graph": {
                      "description": "Array of URLs for variables and subfolders in this folder.",
                      "items": {},
                      "type": "array"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "size": {
                      "description": "Number of total variables stored under this folder and its subfolders.",
                      "type": "integer"
                    }
                  },
                  "title": "DatasetsDatasetIDFoldersGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List contents of root folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/folders/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFolders = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Use this endpoint to move elements out of their existing folders into the root folder.\n\nIn this folder, sub-folders and variables must be unique by name. Trying to move a folder or a variable that conflicts with the existing children of it will receive a 409 response.\n\nTo reorder the elements inside this folder, PATCH the folder\u2019s graph with a different order. The graph array must be a flat list and all the elements must be URLs that currently exist in the catalog\u2019s index. New elements cannot be included just by adding them on the graph, though the PATCH request may also include an index to add items, as described above.",
        "operationId": "patch-datasets-dataset_id-folders",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "graph": [
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000000/",
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000001/",
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000004/",
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000005/",
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/folders/106db08119c245b29dce1692700d37f5/",
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/",
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/": {},
                      "https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/": {}
                    }
                  }
                },
                "example-2": {
                  "value": {
                    "element": "shoji:catalog",
                    "graph": [],
                    "index": {
                      "https://app.crunch.io/api/datasets/6089fc9d532e425b95e656b3ae788932/variables/4oNEDhPjZt4MfnZw0INrgm000000/": {}
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  },
                  "index": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "summary": "Move elements to root folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/folders/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000000/\",\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000001/\",\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000004/\",\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000005/\",\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/folders/106db08119c245b29dce1692700d37f5/\",\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/\",\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/\"\n  ],\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{}\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idFolders = await fetch(\n    'https://app.crunch.io/api/datasets/{dataset_id}/folders/', {\n        method: 'PATCH',\n        headers: {\n            'Authorization': 'Bearer 598d9e1105',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"element\": \"shoji:catalog\",\n            \"graph\": [\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000000/\",\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000001/\",\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000004/\",\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000005/\",\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/folders/106db08119c245b29dce1692700d37f5/\",\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/\",\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/\"\n            ],\n            \"index\": {\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n                \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{}\n            }\n        })\n    })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Use this endpoint to create a variable folder. Post a folder representation to the URL of the folder in which you want the new folder to be created (that is, the new folder will be a subfolder of it).\n\nThe payload must must be a shoji entity containing a body member with only the name of the new subfolder. Note that all entities (variables and folders) collected in a folder must have unique names, but names do not need to be globally unique. If a duplicate folder name is found, the endpoint will return a 400 response.\n\nAdditionally, an index member can be included containing URLs of the variables or folders that will be children of the new folder. The tuples associated with each variable should be an empty object. These variables or folders will be moved into the new folder from their previous locations.\n\nAn optional graph member indicates the order of entities within the folder. If included, it must contain all the items that the index contains.",
        "operationId": "post-datasets-dataset_id-folders",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-2": {
                  "value": {
                    "body": {
                      "name": "test"
                    },
                    "element": "shoji:catalog"
                  }
                },
                "example-3": {
                  "value": {
                    "body": {
                      "name": "Group A"
                    },
                    "element": "shoji:catalog"
                  }
                },
                "example-4": {
                  "value": {
                    "body": {
                      "name": "sf1"
                    },
                    "element": "shoji:entity",
                    "index": {
                      "https://app.crunch.io/api/datasets/76286a4fd1834a01b8d09bb1dc630a2e/variables/5ae653b7e136481e8271ddb23b8471e8/": {},
                      "https://app.crunch.io/api/datasets/76286a4fd1834a01b8d09bb1dc630a2e/variables/6e19bd355e724eee9036b351841d722a/": {}
                    }
                  }
                },
                "example-5": {
                  "value": {
                    "body": {
                      "name": "sf1"
                    },
                    "element": "shoji:entity",
                    "graph": [
                      "https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000000/",
                      "https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000001/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000000/": {},
                      "https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000001/": {}
                    }
                  }
                },
                "example-6": {
                  "value": {
                    "body": {
                      "name": "sf2"
                    },
                    "element": "shoji:entity",
                    "graph": [
                      "https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000003/",
                      "https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000004/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000003/": {},
                      "https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000004/": {}
                    }
                  }
                },
                "example-7": {
                  "value": {
                    "body": {
                      "name": "subfolder"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  },
                  "index": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersPostRequest",
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "201": {
            "description": "Item created",
            "headers": {
              "Location": {
                "description": "URI of new folder",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid folder or variable URL: ../../variables/001as0BRKoGsNaC5hM974w000001/\n"
                      ],
                      "message": "Invalid folder or variable URL: ../../variables/001as0BRKoGsNaC5hM974w000001/",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create sub-folder under root folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/folders/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"subfolder\"\n  },\n  \"element\": \"shoji:entity\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000002/\",\n    \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000001/\"\n  ],\n  \"index\": {\n    \"../variables/001as0BRKoGsNaC5hM974w000001/\": {},\n    \"https://app.crunch.io/api/datasets/0849b34691fa4ebe841f17c9a8079d98/variables/2ORFzjKCHfsxWynqi3pjUe000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/249b7244c427499093e9314c1671355e/variables/4zuoOYQ1ynJawtDSRHBhAp000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/249b7244c427499093e9314c1671355e/variables/4zuoOYQ1ynJawtDSRHBhAp000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/6b0e13dac50d4169be2837be99c6e636/variables/3bBwvfZQ3Sm28tmfyqGcAg000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/76286a4fd1834a01b8d09bb1dc630a2e/variables/5ae653b7e136481e8271ddb23b8471e8/\":\n{},\n    \"https://app.crunch.io/api/datasets/76286a4fd1834a01b8d09bb1dc630a2e/variables/6e19bd355e724eee9036b351841d722a/\":\n{},\n    \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000004/\":\n{},\n    \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000004/\":\n{},\n    \"https://app.crunch.io/api/datasets/a6a119d441ba474e9c3315027dc782d2/variables/a9cc80f72b2d4e36aaeda778073a9c9b/\":\n{},\n    \"https://app.crunch.io/api/datasets/a98dfa13a1404f8e838a892fff0d8a38/variables/4OwB1YGLd6PWT6bcUZuMjo000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/b263d63ad6c846b69887497f726e7911/variables/1FWr0yhRUIfjpCT4RJWdy6000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/b2f6a53359724ddc861afac4d3b1fa57/variables/2dz4TQJWKBI5cZ75hFyejc000001/\":\n{}\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idFolders = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"subfolder\"\n     },\n     \"element\": \"shoji:entity\",\n     \"graph\": [\n       \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000002/\",\n       \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000001/\"\n     ],\n     \"index\": {\n       \"../variables/001as0BRKoGsNaC5hM974w000001/\": {},\n       \"https://app.crunch.io/api/datasets/0849b34691fa4ebe841f17c9a8079d98/variables/2ORFzjKCHfsxWynqi3pjUe000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/249b7244c427499093e9314c1671355e/variables/4zuoOYQ1ynJawtDSRHBhAp000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/249b7244c427499093e9314c1671355e/variables/4zuoOYQ1ynJawtDSRHBhAp000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/6b0e13dac50d4169be2837be99c6e636/variables/3bBwvfZQ3Sm28tmfyqGcAg000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/76286a4fd1834a01b8d09bb1dc630a2e/variables/5ae653b7e136481e8271ddb23b8471e8/\":\n{},\n       \"https://app.crunch.io/api/datasets/76286a4fd1834a01b8d09bb1dc630a2e/variables/6e19bd355e724eee9036b351841d722a/\":\n{},\n       \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/827df55bb35d43ecbc7fc8c4e64f315a/variables/0Q2NVGmnsqH9tqRRlH69ZT000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/8d3241319a1a4e849180782043c0ed99/variables/6BjgJ2EKO5o6GmFmFmBxcw000004/\":\n{},\n       \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000004/\":\n{},\n       \"https://app.crunch.io/api/datasets/a6a119d441ba474e9c3315027dc782d2/variables/a9cc80f72b2d4e36aaeda778073a9c9b/\":\n{},\n       \"https://app.crunch.io/api/datasets/a98dfa13a1404f8e838a892fff0d8a38/variables/4OwB1YGLd6PWT6bcUZuMjo000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/b263d63ad6c846b69887497f726e7911/variables/1FWr0yhRUIfjpCT4RJWdy6000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/b2f6a53359724ddc861afac4d3b1fa57/variables/2dz4TQJWKBI5cZ75hFyejc000001/\":\n{}\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/folders/hidden/": {
      "get": {
        "description": "The hidden folder is a special-purpose folder that lives outside the regular variable folders tree.\n\nVariables and subfolders that should only be visible to dataset editors should be placed in the hidden folder.\n\nTo hide variables, PATCH the hidden folder\u2019s index with the URLs of the variables. To \u201cunhide\u201d them, PATCH them to a different folder.",
        "operationId": "get-datasets-dataset_id-folders-hidden",
        "parameters": [
          {
            "description": "tag",
            "in": "query",
            "name": "tag",
            "schema": {
              "default": "cats",
              "example": "cats",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "name": "Hidden"
                      },
                      "element": "shoji:catalog",
                      "graph": [],
                      "index": {},
                      "self": "https://app.crunch.io/api/datasets/c6aeb804abb7454b8e253ba8383d9d3e/folders/hidden/",
                      "size": 0
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "graph": {
                      "items": {},
                      "type": "array"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersHiddenGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List hidden elements",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/folders/hidden/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFoldersHidden = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/hidden/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Use this endpoint to move elements out of their existing folders into the hidden folder.\n\nIn this folder, sub-folders and variables must be unique by name. Trying to move a folder or a variable that conflicts with the existing children of it will receive a 409 response.\n\nTo reorder the elements inside this folder, PATCH the folder\u2019s graph with a different order. The graph array must be a flat list and all the elements must be URLs that currently exist in the catalog\u2019s index. New elements cannot be included just by adding them on the graph, though the PATCH request may also include an index to add items, as described above.",
        "operationId": "patch-datasets-dataset_id-folders-hidden",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/datasets/e496dff8acc34d4e9893b03c446b180a/variables/4e09f661be3545a4a9a485fcffc67dcf/": {}
                    }
                  }
                },
                "example-2": {
                  "value": {
                    "element": "shoji:catalog",
                    "graph": [
                      "https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000001/",
                      "https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000002/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000001/": {},
                      "https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000002/": {}
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  },
                  "index": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersHiddenPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "summary": "Hide elements",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/folders/hidden/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/33e744ad16754b9aa72424ea3357567f/variables/3yknJDSHJGKJjoXitZ9ZEf000002/\"\n  ],\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/0cb74cfa4af547fa887fac159ba3e90b/variables/0ecE3CtH65VF8xxSILUsRg000009/\":\n{},\n    \"https://app.crunch.io/api/datasets/2b8ed5f47167490883b6f99fe0c2afb4/variables/3zjmj750UUdZtKt388UAiQ000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/2c3ce8f8c22348b79acbbdc7d6e5c2c5/variables/4a20162388d7437bb40b9ddfcd1b86d6/\":\n{},\n    \"https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/33e744ad16754b9aa72424ea3357567f/variables/3yknJDSHJGKJjoXitZ9ZEf000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/81f67aa5d93547a7bbddd14a1a6c8534/variables/4aiSAE8dnQCY1cVmlDbBwC000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/81f67aa5d93547a7bbddd14a1a6c8534/variables/4aiSAE8dnQCY1cVmlDbBwC000006/\":\n{},\n    \"https://app.crunch.io/api/datasets/91886e380ec24b99aa8c9f8895daf4f7/variables/9291aaae6cd74104bb810ef38cb4ae7f/\":\n{},\n    \"https://app.crunch.io/api/datasets/9f5ced9d543e497da662bd406852a640/variables/840cd303fdb741e0b01ff73f1d134539/\":\n{},\n    \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v00000b/\":\n{},\n    \"https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/e496dff8acc34d4e9893b03c446b180a/variables/4e09f661be3545a4a9a485fcffc67dcf/\":\n{}\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idFoldersHidden = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/hidden/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"graph\": [\n       \"https://app.crunch.io/api/datasets/33e744ad16754b9aa72424ea3357567f/variables/3yknJDSHJGKJjoXitZ9ZEf000002/\"\n     ],\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/0cb74cfa4af547fa887fac159ba3e90b/variables/0ecE3CtH65VF8xxSILUsRg000009/\":\n{},\n       \"https://app.crunch.io/api/datasets/2b8ed5f47167490883b6f99fe0c2afb4/variables/3zjmj750UUdZtKt388UAiQ000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/2c3ce8f8c22348b79acbbdc7d6e5c2c5/variables/4a20162388d7437bb40b9ddfcd1b86d6/\":\n{},\n       \"https://app.crunch.io/api/datasets/3230bf672dfb46dc8ac1fc3a34128413/variables/33eKPiETFeYSN4b6vTS26t000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/33e744ad16754b9aa72424ea3357567f/variables/3yknJDSHJGKJjoXitZ9ZEf000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/81f67aa5d93547a7bbddd14a1a6c8534/variables/4aiSAE8dnQCY1cVmlDbBwC000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/81f67aa5d93547a7bbddd14a1a6c8534/variables/4aiSAE8dnQCY1cVmlDbBwC000006/\":\n{},\n       \"https://app.crunch.io/api/datasets/91886e380ec24b99aa8c9f8895daf4f7/variables/9291aaae6cd74104bb810ef38cb4ae7f/\":\n{},\n       \"https://app.crunch.io/api/datasets/9f5ced9d543e497da662bd406852a640/variables/840cd303fdb741e0b01ff73f1d134539/\":\n{},\n       \"https://app.crunch.io/api/datasets/a65d2adfd89d4c7b8af8600853898905/variables/5HOWSf1y3NOYu3hfFRnRZ1000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v00000b/\":\n{},\n       \"https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/dc409cf1daf04277b3996d31a4426d06/variables/534UCMZfI5Q1DUWA4cmBEk000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/e496dff8acc34d4e9893b03c446b180a/variables/4e09f661be3545a4a9a485fcffc67dcf/\":\n{}\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Use this endpoint to create a variable folder. Post a folder representation to the URL of the folder in which you want the new folder to be created (that is, the new folder will be a subfolder of it).\n\nThe payload must must be a shoji entity containing a body member with only the name of the new subfolder. Note that all entities (variables and folders) collected in a folder must have unique names, but names do not need to be globally unique. If a duplicate folder name is found, the endpoint will return a 400 response.\n\nAdditionally, an index member can be included containing URLs of the variables or folders that will be children of the new folder. The tuples associated with each variable should be an empty object. These variables or folders will be moved into the new folder from their previous locations.\n\nAn optional graph member indicates the order of entities within the folder. If included, it must contain all the items that the index contains.",
        "operationId": "post-datasets-dataset_id-folders-hidden",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "hidden subfolder"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersHiddenPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "headers": {
              "Location": {
                "description": "URI of new folder",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Create hidden sub-folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/folders/hidden/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"hidden subfolder\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idFoldersHidden = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/hidden/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"hidden subfolder\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/folders/parents/": {
      "get": {
        "description": "This endpoint allows you to discover a folder\u2019s parents branch making multiple GET requests.\n\nThis read-only endpoint returns a shoji:catalog listing all the public folders that live under the root tree where each tuple has its name and the URL of its parent folder. The position attribute indicates the position on its parent\u2019s graph.",
        "operationId": "get-datasets-dataset_id-folders-parents",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "../2211cc911d2d40d3ac5fc529d55d1837/": {
                          "name": "sub leaf 1",
                          "parent": "../c58b92cf3f51404c9c6c654cc200d779/",
                          "position": 1
                        },
                        "../85956dae22f54240bd9451451d1de67d/": {
                          "name": "leaf 2",
                          "parent": "../",
                          "position": 0
                        },
                        "../c58b92cf3f51404c9c6c654cc200d779/": {
                          "name": "leaf 1",
                          "parent": "../",
                          "position": 2
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/4e01b6351b2b4e71a7d2f9463ea69fec/folders/parents/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "parent": {
                            "type": "string"
                          },
                          "position": {
                            "type": "integer"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersParentsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Folder parents",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/folders/parents/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFoldersParents = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/parents/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/datasets/{dataset_id}/folders/secure/": {
      "get": {
        "description": "The secure folder is a special-purpose folder that lives outside the regular variable folder tree.\n\nTo make variables secured from viewers\u2019 access, PATCH the secure folder\u2019s index with the URLs of the variables. A successful response returns 204 status.",
        "operationId": "get-datasets-dataset_id-folders-secure",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "name": "Secure"
                      },
                      "element": "shoji:catalog",
                      "graph": [],
                      "index": {},
                      "self": "https://app.crunch.io/api/datasets/d909a81c92004ffc90a4a0a2fa903708/folders/secure/",
                      "size": 0
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "graph": {
                      "items": {},
                      "type": "array"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersSecureGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersSecureGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "List secure elements",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/folders/secure/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFoldersSecure = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/secure/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Use this endpoint to move elements out of their existing folders into the secure folder.\n\nIn this folder, sub-folders and variables must be unique by name. Trying to move a folder or a variable that conflicts with the existing children of it will receive a 409 response.\n\nTo reorder the elements inside this folder, PATCH the folder\u2019s graph with a different order. The graph array must be a flat list and all the elements must be URLs that currently exist in the catalog\u2019s index. New elements cannot be included just by adding them on the graph, though the PATCH request may also include an index to add items, as described above.",
        "operationId": "patch-datasets-dataset_id-folders-secure",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "graph": [
                      "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/": {}
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "index": {
                    "additionalProperties": false,
                    "properties": {
                      "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/": {
                        "additionalProperties": false,
                        "title": "HTTPSAppCrunchIoAPIDatasets34164340840048Fd91D4737D1151F47FVariables6SVnszwcP4H9Q6ORvIWDdy000001",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Index",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersSecurePatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "summary": "Move elements to secure folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/folders/secure/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/\":\n{}\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idFoldersSecure = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/secure/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/\":\n{}\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Use this endpoint to create a variable folder. Post a folder representation to the URL of the folder in which you want the new folder to be created (that is, the new folder will be a subfolder of it).\n\nThe payload must must be a shoji entity containing a body member with only the name of the new subfolder. Note that all entities (variables and folders) collected in a folder must have unique names, but names do not need to be globally unique. If a duplicate folder name is found, the endpoint will return a 400 response.\n\nAdditionally, an index member can be included containing URLs of the variables or folders that will be children of the new folder. The tuples associated with each variable should be an empty object. These variables or folders will be moved into the new folder from their previous locations.\n\nAn optional graph member indicates the order of entities within the folder. If included, it must contain all the items that the index contains.",
        "operationId": "post-datasets-dataset_id-folders-secure",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "secure subfolder"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersSecurePostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "headers": {
              "Location": {
                "description": "URI of new folder",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Create secure sub-folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/folders/secure/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"secure subfolder\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idFoldersSecure = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/secure/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"secure subfolder\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/folders/trash/": {
      "delete": {
        "deprecated": true,
        "description": "This endpoint will empty all items from the trash, hard-deleting the folders, variables, and related data.\n",
        "operationId": "delete-datasets-dataset_id-folders-trash",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Empty the trash folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/folders/trash/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idFoldersTrash = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/trash/', {\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "deprecated": true,
        "description": "The trash folder is a special-purpose folder that lives outside the regular variable folders tree.\n\nYou can use the trash folder to **soft-delete** variables and folders.\n\nSub-folders and variables inside the trash folder are only visible to dataset editors.",
        "operationId": "get-datasets-dataset_id-folders-trash",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "name": "Trash"
                      },
                      "element": "shoji:catalog",
                      "graph": [
                        "../ed2b3495a4d249839301fcdaf43da613/"
                      ],
                      "index": {
                        "../ed2b3495a4d249839301fcdaf43da613/": {
                          "name": "sf",
                          "size": 0,
                          "type": "folder"
                        }
                      },
                      "self": "https://app.crunch.io/api/datasets/d0bb4943168c465582eba97abcb2c870/folders/trash/",
                      "size": 0
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "graph": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "../ed2b3495a4d249839301fcdaf43da613/": {
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "Ed2B3495A4D249839301Fcdaf43Da613",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersTrashGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersTrashGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "List contents of the trash folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/folders/trash/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFoldersTrash = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/trash/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "deprecated": true,
        "description": "Use this endpoint to move elements out of their existing folders into the trash folder.\n\nIn this folder, sub-folders and variables must be unique by name. Trying to move a folder or a variable that conflicts with the existing children of it will receive a 409 response.",
        "operationId": "patch-datasets-dataset_id-folders-secure",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "element": "shoji:catalog",
                    "graph": [
                      "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/": {}
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  },
                  "index": {
                    "additionalProperties": false,
                    "properties": {
                      "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/": {
                        "additionalProperties": false,
                        "title": "HTTPSAppCrunchIoAPIDatasets34164340840048Fd91D4737D1151F47FVariables6SVnszwcP4H9Q6ORvIWDdy000001",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Index",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersSecurePatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "summary": "Move elements to the trash",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/folders/trash/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"element\": \"shoji:catalog\",\n  \"graph\": [\n    \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/\"\n  ],\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/\":\n{}\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idFoldersSecure = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/trash/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"element\": \"shoji:catalog\",\n     \"graph\": [\n       \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/\"\n     ],\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000001/\":\n{}\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/datasets/{dataset_id}/folders/{folder_id}/": {
      "delete": {
        "description": "Performing a DELETE request on a folder will delete the dataset variables and the folder and all children permanently.",
        "operationId": "delete-datasets-dataset_id-folders-folder_id",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Folder deleted"
          }
        },
        "summary": "Delete sub-folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X DELETE https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const deleteDatasetsDataset_idFoldersFolder_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/',\n{\n   method: 'DELETE',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "get": {
        "description": "Sub-folder endpoints can be filtered by Variable Tags, so that only \u201ctagged\u201d variables are exposed.\n\nIn contrast with the normal behavior, empty Folders are not exposed when Variable Tags are applied.\n\nIn order to specify the tags to filter by, one or more `tag=<tag_name> ` query string parameters must be added to the Folder GET requests.\n\nThe following are examples of tag filtering:\n\n* `/datasets/{id}/folders/{subfolder_id}/?tag=tag1`\n* `/datasets/{id}/folders/{subfolder_id}/?tag=tag1&tag=tag2`\n\nWhen filtering by multiple tags, the set of tagged variables will be constructed using `AND` logic. That is, when filtering by `tag=tag1&tag=tag2`, only variables that are tagged both tag1 **and** tag2 will be exposed.\n\nThe structure of the filtered Folder endpoints is exactly the same as their unfiltered counterparts.\n\nIf one or more of the `tag=<tag_name>` parameters are invalid, the Folder endpoint returns a `400 Bad Request` response with a helpful message on the reason for the failure to apply the tag(s).",
        "operationId": "get-datasets-dataset_id-folders-folder_id",
        "parameters": [
          {
            "description": "tag",
            "in": "query",
            "name": "tag",
            "schema": {
              "default": "tag1",
              "example": "tag1",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "id": "fd536c3181104f4188e804eed7ed6545",
                        "name": "subfolder"
                      },
                      "catalogs": {
                        "folder": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/"
                      },
                      "element": "shoji:catalog",
                      "graph": [],
                      "index": {},
                      "self": "https://app.crunch.io/api/datasets/7411cd3e09044d879d4537d368e876a7/folders/fd536c3181104f4188e804eed7ed6545/",
                      "size": 0
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "folder": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "graph": {
                      "items": {},
                      "type": "array"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "size": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersFolderIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Nothing matches the given URI"
                      ],
                      "message": "Nothing matches the given URI",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DatasetsDatasetIDFoldersFolderIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "List sub-folder contents",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDatasetsDataset_idFoldersFolder_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/',\n{\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dataset you are working with",
          "in": "path",
          "name": "dataset_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Unique ID of the folder you are working with",
          "in": "path",
          "name": "folder_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Use this endpoint to move elements out of their existing folders into this sub-folder.\n\nIn this folder, sub-folders and variables must be unique by name. Trying to move a folder or a variable that conflicts with the existing children of it will receive a 409 response.\n\nTo reorder the elements inside this folder, PATCH the folder\u2019s graph with a different order. The graph array must be a flat list and all the elements must be URLs that currently exist in the catalog\u2019s index. New elements cannot be included just by adding them on the graph, though the PATCH request may also include an index to add items, as described above.",
        "operationId": "patch-datasets-dataset_id-folders-folder_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-2": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000007/": {}
                    }
                  }
                },
                "example-3": {
                  "value": {
                    "element": "shoji:catalog",
                    "graph": [
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000008/",
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000004/",
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000009/",
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000010/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000004/": {},
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000008/": {},
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000009/": {},
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000010/": {}
                    }
                  }
                },
                "example-4": {
                  "value": {
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000004/": {
                        "name": "driz"
                      },
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000008/": {
                        "name": "queue_sec"
                      },
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000009/": {
                        "name": "versus"
                      },
                      "https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000010/": {
                        "name": "weight"
                      }
                    }
                  }
                },
                "example-5": {
                  "value": {
                    "element": "shoji:catalog",
                    "graph": [
                      "https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000004/",
                      "https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000003/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000003/": {},
                      "https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000004/": {}
                    }
                  }
                },
                "example-6": {
                  "value": {
                    "body": {},
                    "element": "shoji:catalog",
                    "graph": [],
                    "index": {
                      "https://app.crunch.io/api/datasets/a40aec41f49d488691a06b798ca32ee6/variables/1bJpanbrFr1kS0l2BfpvhJ000000/": {}
                    }
                  }
                },
                "example-7": {
                  "value": {
                    "body": {
                      "name": "group1"
                    },
                    "element": "shoji:catalog"
                  }
                },
                "example-8": {
                  "value": {
                    "body": {
                      "name": "group1 nested"
                    },
                    "element": "shoji:catalog",
                    "graph": [
                      "https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000000/"
                    ],
                    "index": {
                      "https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000000/": {}
                    }
                  }
                },
                "example-9": {
                  "value": {
                    "body": {},
                    "element": "shoji:catalog",
                    "graph": [],
                    "index": {
                      "https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000000/": {}
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "graph": {
                    "items": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    },
                    "type": "array"
                  },
                  "index": {
                    "additionalProperties": false,
                    "properties": {
                      "variable_url": {
                        "additionalProperties": false,
                        "title": "HTTPSAppCrunchIoAPIDatasets",
                        "type": "object"
                      }
                    },
                    "title": "Index",
                    "type": "object"
                  }
                },
                "title": "DatasetsDatasetIDFoldersFolderIDPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          }
        },
        "summary": "Move elements into sub-folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"group1 nested\"\n  },\n  \"element\": \"shoji:catalog\",\n  \"graph\": [],\n  \"index\": {\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000004/\":\n{},\n    \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000005/\":\n{},\n    \"https://app.crunch.io/api/datasets/1dbab4cba24c465f9b28284cca957f3d/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/1dbab4cba24c465f9b28284cca957f3d/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/2b8ed5f47167490883b6f99fe0c2afb4/variables/3zjmj750UUdZtKt388UAiQ000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000004/\":\n{},\n    \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000005/\":\n{},\n    \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000004/\":\n{},\n    \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000004/\":\n{\n      \"name\": \"drizzat\"\n    },\n    \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000007/\":\n{},\n    \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000008/\":\n{\n      \"name\": \"queue_sec\"\n    },\n    \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000009/\":\n{\n      \"name\": \"versus\"\n    },\n    \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000010/\":\n{\n      \"name\": \"weight\"\n    },\n    \"https://app.crunch.io/api/datasets/6dc241bc18554d3e937690cc949a9db4/variables/2R5GZ0aFFoRVPl0Z2nx4RG000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/6dc241bc18554d3e937690cc949a9db4/variables/2R5GZ0aFFoRVPl0Z2nx4RG000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/9888eaeec71344d8b4cdb76f2fe8c1ad/variables/5Et5CU2UnvxGFUHqGNVKx1000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/9b3cacfb50d44de4832379fd23cb5ddf/variables/4C8cvLDIs1R2gb2xqqa8Nd000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/a40aec41f49d488691a06b798ca32ee6/variables/1bJpanbrFr1kS0l2BfpvhJ000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000001/\":\n{},\n    \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000002/\":\n{},\n    \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000003/\":\n{},\n    \"https://app.crunch.io/api/datasets/b32bb83d7fd2444db6c2fbdfc51e09b4/variables/5NU9pkdVi9Qa3zE0NYrreU000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/b837302b48c6481fabad5c02ac47d099/variables/4ZDx0Y2eDlr2LR2x3v9pp7000000/\":\n{},\n    \"https://app.crunch.io/api/datasets/d184cd8e29614b908a8f5a9b10ca9326/variables/11JAKK2CeIUnjbgq9lv0kb000000/\":\n{}\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDatasetsDataset_idFoldersFolder_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/',\n{\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"group1 nested\"\n     },\n     \"element\": \"shoji:catalog\",\n     \"graph\": [],\n     \"index\": {\n       \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000004/\":\n{},\n       \"https://app.crunch.io/api/datasets/06fc6b16bc814d3eb93d18a2376efcae/variables/4uyoLuNYdizcr7urXY5gag000005/\":\n{},\n       \"https://app.crunch.io/api/datasets/1dbab4cba24c465f9b28284cca957f3d/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/1dbab4cba24c465f9b28284cca957f3d/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/2b8ed5f47167490883b6f99fe0c2afb4/variables/3zjmj750UUdZtKt388UAiQ000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000004/\":\n{},\n       \"https://app.crunch.io/api/datasets/2cf892736fc74cc2b717297b5921be73/variables/4uyoLuNYdizcr7urXY5gag000005/\":\n{},\n       \"https://app.crunch.io/api/datasets/34164340840048fd91d4737d1151f47f/variables/6SVnszwcP4h9q6ORvIWDdy000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/41cbe8c8205e4b3e9f5b5216f751065a/variables/1DUOttAIrhICENmJF7bNp9000004/\":\n{},\n       \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000004/\":\n{\n         \"name\": \"drizzat\"\n       },\n       \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000007/\":\n{},\n       \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000008/\":\n{\n         \"name\": \"queue_sec\"\n       },\n       \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000009/\":\n{\n         \"name\": \"versus\"\n       },\n       \"https://app.crunch.io/api/datasets/67d397a45a54416da1e780748ae28898/variables/4q1KTEqhKN1fV01uQV8omw000010/\":\n{\n         \"name\": \"weight\"\n       },\n       \"https://app.crunch.io/api/datasets/6dc241bc18554d3e937690cc949a9db4/variables/2R5GZ0aFFoRVPl0Z2nx4RG000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/6dc241bc18554d3e937690cc949a9db4/variables/2R5GZ0aFFoRVPl0Z2nx4RG000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/9888eaeec71344d8b4cdb76f2fe8c1ad/variables/5Et5CU2UnvxGFUHqGNVKx1000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/9b3cacfb50d44de4832379fd23cb5ddf/variables/4C8cvLDIs1R2gb2xqqa8Nd000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/a40aec41f49d488691a06b798ca32ee6/variables/1bJpanbrFr1kS0l2BfpvhJ000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000001/\":\n{},\n       \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000002/\":\n{},\n       \"https://app.crunch.io/api/datasets/b062564ea4fa4020843ac5dac43a265a/variables/6O5VwW6Wz2Qs1efXErnG2v000003/\":\n{},\n       \"https://app.crunch.io/api/datasets/b32bb83d7fd2444db6c2fbdfc51e09b4/variables/5NU9pkdVi9Qa3zE0NYrreU000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/b837302b48c6481fabad5c02ac47d099/variables/4ZDx0Y2eDlr2LR2x3v9pp7000000/\":\n{},\n       \"https://app.crunch.io/api/datasets/d184cd8e29614b908a8f5a9b10ca9326/variables/11JAKK2CeIUnjbgq9lv0kb000000/\":\n{}\n     }\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      },
      "post": {
        "description": "Use this endpoint to create a variable folder. Post a folder representation to the URL of the folder in which you want the new folder to be created (that is, the new folder will be a subfolder of it).\n\nThe payload must must be a shoji entity containing a body member with only the name of the new subfolder. Note that all entities (variables and folders) collected in a folder must have unique names, but names do not need to be globally unique. If a duplicate folder name is found, the endpoint will return a 400 response.\n\nAdditionally, an index member can be included containing URLs of the variables or folders that will be children of the new folder. The tuples associated with each variable should be an empty object. These variables or folders will be moved into the new folder from their previous locations.\n\nAn optional graph member indicates the order of entities within the folder. If included, it must contain all the items that the index contains.",
        "operationId": "post-datasets-dataset_id-folders-folder_id",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "name": "Group 1.5"
                    },
                    "element": "shoji:catalog"
                  }
                },
                "example-2": {
                  "value": {
                    "body": {
                      "name": "sf3"
                    },
                    "element": "shoji:entity",
                    "index": {
                      "https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000002/": {}
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "index": {
                    "additionalProperties": false,
                    "properties": {
                      "https://app.crunch.io/api/datasets/8fe3424e9bab41a3b43c565193044bad/variables/3fRANVdL3xU8JLXivb6dCY000002/": {
                        "additionalProperties": false,
                        "title": "HTTPSAppCrunchIoAPIDatasets8Fe3424E9Bab41A3B43C565193044BadVariables3FRANVdL3XU8JLXivb6DCY000002",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "Index",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DatasetsDatasetIDFoldersFolderIDPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "headers": {
              "Location": {
                "description": "URI of new folder",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Create sub-folder",
        "tags": [
          "Variable Folders"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"name\": \"Group 1.5\"\n  },\n  \"element\": \"shoji:catalog\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDatasetsDataset_idFoldersFolder_id = await fetch(\n  'https://app.crunch.io/api/datasets/{dataset_id}/folders/{folder_id}/',\n{\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"name\": \"Group 1.5\"\n     },\n     \"element\": \"shoji:catalog\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/projects/shared/": {
      "get": {
        "description": "Returns a list of datasets other users have shared with the authenticated user.",
        "operationId": "get-projects-shared",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "access_time": null,
                        "description": "Items that other users have shared with you",
                        "modification_time": null,
                        "name": "Shared",
                        "owner": "https://app.crunch.io/api/users/c4ded60d11e245c1841ecd36bd5b8764/",
                        "owner_id": "https://app.crunch.io/api/users/c4ded60d11e245c1841ecd36bd5b8764/",
                        "permissions": {
                          "edit": false,
                          "view": true
                        }
                      },
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/datasets/20299cf436764a21bc2b96242cc63800/": {
                          "access_time": "1970-01-01T00:00:00+00:00",
                          "account": "https://app.crunch.io/api/accounts/6e211cae2ca446e2bfa349459c89d750/",
                          "archived": false,
                          "creation_time": "2020-05-20T19:04:50.332000+00:00",
                          "current_editor": "https://app.crunch.io/api/users/59ed91afa81843c68388e575c0267e7d/",
                          "current_editor_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "description": "",
                          "end_date": null,
                          "id": "20299cf436764a21bc2b96242cc63800",
                          "is_published": true,
                          "modification_time": null,
                          "name": "Dataset 1",
                          "owner_id": "https://app.crunch.io/api/projects/05dd0d6e20a24f75b5e4db4d10aea7a3/",
                          "owner_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "size": {
                            "columns": null,
                            "rows": null,
                            "unfiltered_rows": null
                          },
                          "start_date": null,
                          "streaming": "no",
                          "type": "dataset",
                          "view_of": null
                        },
                        "https://app.crunch.io/api/datasets/2ef557af7b0948caa3a52a65e207ed4b/": {
                          "access_time": "1970-01-01T00:00:00+00:00",
                          "account": "https://app.crunch.io/api/accounts/6e211cae2ca446e2bfa349459c89d750/",
                          "archived": false,
                          "creation_time": "2020-05-20T19:04:51.590000+00:00",
                          "current_editor": "https://app.crunch.io/api/users/59ed91afa81843c68388e575c0267e7d/",
                          "current_editor_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "description": "",
                          "end_date": null,
                          "id": "2ef557af7b0948caa3a52a65e207ed4b",
                          "is_published": true,
                          "modification_time": null,
                          "name": "Dataset 2",
                          "owner_id": "https://app.crunch.io/api/projects/05dd0d6e20a24f75b5e4db4d10aea7a3/",
                          "owner_name": "captain-c7ed3e3b2486ceef08eef0231fc6020cd4985e108df365c21fb5b9c156ea775e",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "size": {
                            "columns": null,
                            "rows": null,
                            "unfiltered_rows": null
                          },
                          "start_date": null,
                          "streaming": "no",
                          "type": "dataset",
                          "view_of": null
                        }
                      },
                      "self": "https://app.crunch.io/api/projects/shared/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "access_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "modification_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "owner": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "owner_id": {
                          "format": "uri",
                          "qt-uri-protocols": [
                            "https"
                          ],
                          "type": "string"
                        },
                        "permissions": {
                          "additionalProperties": false,
                          "properties": {
                            "edit": {
                              "type": "boolean"
                            },
                            "view": {
                              "type": "boolean"
                            }
                          },
                          "title": "Permissions",
                          "type": "object"
                        }
                      },
                      "title": "Body",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "access_time": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "account": {
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "type": "string"
                          },
                          "archived": {
                            "type": "boolean"
                          },
                          "creation_time": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "current_editor": {
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "type": "string"
                          },
                          "current_editor_name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "end_date": {
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "is_published": {
                            "type": "boolean"
                          },
                          "modification_time": {
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "owner_id": {
                            "format": "uri",
                            "type": "string"
                          },
                          "owner_name": {
                            "type": "string"
                          },
                          "permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Permissions",
                            "type": "object"
                          },
                          "size": {
                            "additionalProperties": false,
                            "properties": {
                              "columns": {
                                "nullable": true,
                                "type": "number"
                              },
                              "rows": {
                                "nullable": true,
                                "type": "number"
                              },
                              "unfiltered_rows": {
                                "nullable": true,
                                "type": "number"
                              }
                            },
                            "required": [],
                            "title": "Size",
                            "type": "object"
                          },
                          "start_date": {
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "streaming": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "view_of": {
                            "format": "uri",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ProjectsSharedGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Datasets shared with me",
        "tags": [
          "Users"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/projects/shared/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getProjectsShared = await fetch(\n  'https://app.crunch.io/api/projects/shared/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/dashboards/": {
      "get": {
        "description": "A dashboard is a deck that has been configured to be displayed in presentation mode by default. Dashboards can be accessed directly by a client URL where only the Deck ID is made available.\n\nThis endpoint works as a helper to obtain a direct reference to the deck without necessarily knowing under which Dataset it is located. It should be used to discover available dashboards that have been shared with you directly.\n\nTo discover a specific dashboard, it must be searched by ID via a query string parameter.\n\nDashboards that are available for searching are any of those that the user has view access to. These are the decks that are either public or shared through a team on any of the datasets the authenticated user has at least view permissions on.\n\nNote that when accessing a dashboard URL from the catalog, the server will 303 redirect to the associated deck entity. So it is safe for clients to guess the dashboard entity URL by appending the dashboard ID to the catalog URL.",
        "operationId": "get-dashboards",
        "parameters": [
          {
            "description": "Dashboard ID",
            "in": "query",
            "name": "id",
            "schema": {
              "default": "vy3",
              "example": "vy3",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {},
                      "self": "https://app.crunch.io/api/dashboards/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "qt-uri-protocols": [
                        "https"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DashboardsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "List dashboards",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/dashboards/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDashboards = await fetch(\n  'https://app.crunch.io/api/dashboards/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [],
      "post": {
        "description": "In order to create new dashboards for decks, clients need to issue a POST request to the dashboards catalog containing the desired deck in the body.\n\nThe server will return a Location header with the newly created Dashboard\u2019s URL.\n\nAfter creating a new dashboard, the deck will now contain two new keys on its payload, fragments.dashboard which points to the dashboard and body.dashboard_id which is the ID of the new dashboard, which can be used on the dashboards catalog to search for it.\n\nNote that decks can only have one single dashboard associated, trying to create multiple dashboards for a deck will raise 400 errors. The relationship is 1:1.\n\nWhen decks are deleted, the associated dashboard is also deleted.",
        "operationId": "post-dashboards",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "deck": "https://app.crunch.io/api/datasets/4d088db2d5a841b49879f0847e67d0cc/decks/d3cec6197eb94dcabc7c87a1baa0f2b1/"
                    },
                    "element": "shoji:entity"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "deck": {
                        "format": "uri",
                        "qt-uri-protocols": [
                          "https"
                        ],
                        "type": "string"
                      }
                    },
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-entity-element"
                  }
                },
                "title": "DashboardsPostRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "ValidationError: Invalid project URL\n"
                      ],
                      "message": "Invalid project URL",
                      "status": 400
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "DashboardsPostRequest",
                  "type": "object"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create dashboard",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X POST https://app.crunch.io/api/dashboards/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"deck\": \"https://app.crunch.io/api/datasets/4d088db2d5a841b49879f0847e67d0cc/decks/d3cec6197eb94dcabc7c87a1baa0f2b1/\"\n  },\n  \"element\": \"shoji:entity\"\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const postDashboards = await fetch(\n  'https://app.crunch.io/api/dashboards/', {\n   method: 'POST',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"deck\": \"https://app.crunch.io/api/datasets/4d088db2d5a841b49879f0847e67d0cc/decks/d3cec6197eb94dcabc7c87a1baa0f2b1/\"\n     },\n     \"element\": \"shoji:entity\"\n   })\n })",
            "syntaxLang": "javascript"
          }
        ]
      }
    },
    "/dashboards/{dashboard_id}/": {
      "get": {
        "description": "This endpoint provides all details about one dashboard.",
        "operationId": "get-dashboards-dashboard_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "body": {
                        "access_time": "1970-01-01T00:00:00+00:00",
                        "account": "https://app.crunch.io/api/accounts/6ca016ec3cea4759bbac33706d660f42/",
                        "creation_time": "2020-05-20T18:18:34.655000+00:00",
                        "id": "92dd5ec47123469d88a1b4a7597192a3",
                        "modification_time": "2020-05-20T18:18:34.655000+00:00",
                        "name": "Dashboard",
                        "permissions": {
                          "edit": true,
                          "view": true
                        }
                      },
                      "catalogs": {
                        "project": "https://app.crunch.io/api/projects/087ad27f4e3d4a8196d42c2c7d793185/",
                        "teams": "https://app.crunch.io/api/dashboards/92dd5ec47123469d88a1b4a7597192a3/teams/",
                        "users": "https://app.crunch.io/api/dashboards/92dd5ec47123469d88a1b4a7597192a3/users/"
                      },
                      "element": "shoji:entity",
                      "self": "https://app.crunch.io/api/dashboards/92dd5ec47123469d88a1b4a7597192a3/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "body": {
                      "additionalProperties": false,
                      "properties": {
                        "access_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "account": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "creation_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "modification_time": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "permissions": {
                          "additionalProperties": false,
                          "properties": {
                            "edit": {
                              "type": "boolean"
                            },
                            "view": {
                              "type": "boolean"
                            }
                          },
                          "required": [],
                          "title": "Permissions",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Body",
                      "type": "object"
                    },
                    "catalogs": {
                      "additionalProperties": false,
                      "properties": {
                        "project": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "teams": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        },
                        "users": {
                          "format": "uri",
                          "type": "string",
                          "x-qt-uri-protocols": [
                            "https"
                          ]
                        }
                      },
                      "required": [],
                      "title": "Catalogs",
                      "type": "object"
                    },
                    "element": {
                      "$ref": "#/components/schemas/Shoji-entity-element"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DashboardsDashboardIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "exception": [
                        "Dashboard not found"
                      ],
                      "message": "Dashboard not found",
                      "status": "404 Not Found"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "exception": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "DashboardsDashboardIDGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item not found"
          }
        },
        "summary": "Dashboard details",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/dashboards/{dashboard_id}/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDashboardsDashboard_id = await fetch(\n  'https://app.crunch.io/api/dashboards/{dashboard_id}/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.body)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dashboard you are working with",
          "in": "path",
          "name": "dashboard_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/dashboards/{dashboard_id}/teams/": {
      "get": {
        "description": "This endpoint retreives a list of teams that have access to the dashboard.",
        "operationId": "get-dashboards-dashboard_id-teams",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/teams/3ab8233a5e3948fbb32833bb14112efe/": {
                          "id": "3ab8233a5e3948fbb32833bb14112efe",
                          "name": "x",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "team": "https://app.crunch.io/api/teams/3ab8233a5e3948fbb32833bb14112efe/"
                        }
                      },
                      "self": "https://app.crunch.io/api/dashboards/dc9e23e25c794601b06a7e1bde171de9/teams/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "properties": {
                        "https://app.crunch.io/api/teams/3ab8233a5e3948fbb32833bb14112efe/": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "permissions": {
                              "additionalProperties": false,
                              "properties": {
                                "edit": {
                                  "type": "boolean"
                                },
                                "view": {
                                  "type": "boolean"
                                }
                              },
                              "required": [],
                              "title": "Permissions",
                              "type": "object"
                            },
                            "team": {
                              "format": "uri",
                              "type": "string",
                              "x-qt-uri-protocols": [
                                "https"
                              ]
                            }
                          },
                          "required": [],
                          "title": "HTTPSAppCrunchIoAPITeams3Ab8233A5E3948Fbb32833Bb14112Efe",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DashboardsDashboardIDTeamsGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Teams that have access",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/dashboards/{dashboard_id}/teams/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDashboardsDashboard_idTeams = await fetch(\n  'https://app.crunch.io/api/dashboards/{dashboard_id}/teams/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dashboard you are working with",
          "in": "path",
          "name": "dashboard_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/dashboards/{dashboard_id}/users/": {
      "get": {
        "description": "This endpoint retreives a list of users that have access to the dashboard.",
        "operationId": "get-dashboards-dashboard_id-users",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {
                        "https://app.crunch.io/api/users/0f4f9fea7a6042dd908bd8a51ebd2799/": {
                          "access_time": null,
                          "account_permissions": {
                            "admin_account": false,
                            "create_datasets": false
                          },
                          "collaborator": true,
                          "email": "c90b29f144a3626c52034c131eb9e1a6fddd9799d0857da3d4f60b9473851e3b@example.com",
                          "name": "c90b29f144a3626c52034c131eb9e1a6fddd9799d0857da3d4f60b9473851e3b@example.com",
                          "permissions": {
                            "edit": false,
                            "view": true
                          },
                          "user": "https://app.crunch.io/api/users/0f4f9fea7a6042dd908bd8a51ebd2799/"
                        },
                        "https://app.crunch.io/api/users/2ec7326462614434877ae2c403fdf4e7/": {
                          "access_time": null,
                          "account_permissions": {
                            "admin_account": true,
                            "create_datasets": true
                          },
                          "collaborator": false,
                          "email": "captain-cb17e67c0bee1b199f954d0391ae81a86ea3ef84097fd527d488aaeb674a7b18@example.com",
                          "name": "captain-cb17e67c0bee1b199f954d0391ae81a86ea3ef84097fd527d488aaeb674a7b18",
                          "permissions": {
                            "edit": true,
                            "view": true
                          },
                          "user": "https://app.crunch.io/api/users/2ec7326462614434877ae2c403fdf4e7/"
                        }
                      },
                      "self": "https://app.crunch.io/api/dashboards/92dd5ec47123469d88a1b4a7597192a3/users/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "properties": {
                          "access_time": {
                            "nullable": true
                          },
                          "account_permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "admin_account": {
                                "type": "boolean"
                              },
                              "create_datasets": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "AccountPermissions",
                            "type": "object"
                          },
                          "collaborator": {
                            "type": "boolean"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Permissions",
                            "type": "object"
                          },
                          "user": {
                            "format": "uri",
                            "type": "string",
                            "x-qt-uri-protocols": [
                              "https"
                            ]
                          }
                        },
                        "required": [],
                        "title": "Index",
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DashboardsDashboardIDUsersGetRequest",
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Users that have access",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X GET https://app.crunch.io/api/dashboards/{dashboard_id}/users/ \\\n  -H 'Authorization: Bearer 598d9e1105'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const getDashboardsDashboard_idUsers = await fetch(\n  'https://app.crunch.io/api/dashboards/{dashboard_id}/users/', {\n   method: 'GET',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105'\n   }\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique ID of the dashboard you are working with",
          "in": "path",
          "name": "dashboard_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Use this endpoint to change a user's permissions to this dashboard.",
        "operationId": "patch-dashboards-dashboard_id-users",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-1": {
                  "value": {
                    "body": {
                      "https://app.crunch.io/api/users/00002/": {
                        "permissions": {
                          "edit": false,
                          "view": true
                        }
                      },
                      "send_notification": false
                    },
                    "element": "shoji:catalog",
                    "index": {
                      "https://app.crunch.io/api/users/00002/": null
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "body": {
                    "additionalProperties": false,
                    "properties": {
                      "https://app.crunch.io/api/users/00002/": {
                        "additionalProperties": false,
                        "properties": {
                          "permissions": {
                            "additionalProperties": false,
                            "properties": {
                              "edit": {
                                "type": "boolean"
                              },
                              "view": {
                                "type": "boolean"
                              }
                            },
                            "required": [],
                            "title": "Permissions",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "HTTPSAppCrunchIoAPIUsers00002",
                        "type": "object"
                      },
                      "send_notification": {
                        "type": "boolean"
                      }
                    },
                    "required": [],
                    "title": "Body",
                    "type": "object"
                  },
                  "element": {
                    "$ref": "#/components/schemas/Shoji-catalog-element"
                  },
                  "index": {
                    "additionalProperties": false,
                    "properties": {
                      "https://app.crunch.io/api/users/00002/": {
                        "nullable": true
                      }
                    },
                    "required": [],
                    "title": "Index",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "DashboardsDashboardIDUsersPatchRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "example-1": {
                    "value": {
                      "element": "shoji:catalog",
                      "index": {},
                      "self": "https://app.crunch.io/api/dashboards/a89ec5c8a0d947eaa4db6c1a15992469/users/"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Shoji-catalog-element"
                    },
                    "index": {
                      "additionalProperties": false,
                      "title": "Index",
                      "type": "object"
                    },
                    "self": {
                      "format": "uri",
                      "type": "string",
                      "x-qt-uri-protocols": [
                        "https"
                      ]
                    }
                  },
                  "required": [],
                  "title": "DashboardsDashboardIDUsersPatchRequest",
                  "type": "object"
                }
              }
            },
            "description": "Item updated"
          }
        },
        "summary": "Change user's dashboard permissions",
        "tags": [
          "Dashboards"
        ],
        "x-code-samples": [
          {
            "lang": "SHELL",
            "source": "curl -X PATCH https://app.crunch.io/api/dashboards/{dashboard_id}/users/ \\\n  -H 'Authorization: Bearer 598d9e1105' \\\n  -H 'Content-Type: application/json' -d '\n{\n  \"body\": {\n    \"https://app.crunch.io/api/users/00002/\": {\n      \"permissions\": {\n        \"edit\": false,\n        \"view\": true\n      }\n    },\n    \"send_notification\": false\n  },\n  \"element\": \"shoji:catalog\",\n  \"index\": {\n    \"https://app.crunch.io/api/users/00002/\": null\n  }\n}\n'",
            "syntaxLang": "bash"
          },
          {
            "lang": "JAVASCRIPT",
            "source": "const patchDashboardsDashboard_idUsers = await fetch(\n  'https://app.crunch.io/api/dashboards/{dashboard_id}/users/', {\n   method: 'PATCH',\n   headers: {\n    'Authorization': 'Bearer 598d9e1105',\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify({\n     \"body\": {\n       \"https://app.crunch.io/api/users/00002/\": {\n         \"permissions\": {\n           \"edit\": false,\n           \"view\": true\n         }\n       },\n       \"send_notification\": false\n     },\n     \"element\": \"shoji:catalog\",\n     \"index\": {\n       \"https://app.crunch.io/api/users/00002/\": null\n     }\n   })\n })\n .then(response => response.json())\n .then(jsonResponse => jsonResponse.index)",
            "syntaxLang": "javascript"
          }
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Crunch API (local environment)",
      "url": "https://local.crunch.io:28443/api"
    },
    {
      "description": "Crunch API (testing sandbox 1)",
      "url": "https://alpha.crunch.io/api"
    },
    {
      "description": "Crunch API (testing sandbox 2)",
      "url": "https://stable.crunch.io/api"
    },
    {
      "description": "Crunch API (testing sandbox 3)",
      "url": "https://unstable.crunch.io/api"
    },
    {
      "description": "Crunch API (production). EXERCISE EXTREME CAUTION as all non-GET requests to this server can be destructive to real data.",
      "url": "https://app.crunch.io/api"
    }
  ],
  "security": [
    {
      "Access Token": []
    }
  ],
  "x-api-id": "crunch-api"
}