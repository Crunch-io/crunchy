info:
  contact:
    email: support@crunch.io
    name: Crunch Support
    url: 'https://help.crunch.io'
  description: |
    Developer API for Crunch.io

    # Viewing options
    * View this documentation [with navigation](https://crunch.io/api/reference)
    * View this documentation [without navigation](https://crunch.io/api/reference-nonav)
    * Download the [Crunch API OpenApi 3.0 Specification](https://crunch.io/oas/crunch-api.yaml)

    # API conventions

    The Crunch REST API follows some common conventions across all endpoints. You can assume these to be the case except where explicitly documented otherwise.

    ## Successful requests
    Successful GET requests return 200 (OK) status with Content-Type: application/json response content.

    PATCH is generally preferred for partial updating of resources, though some endpoints do support PUT. A successful request returns 204 (No Content) status.

    POST is used to create entities on the server. The URL to the created entity is returned in the Location response header, and the response status is either 201 (Created) or 202 (Accepted).

    202 (Accepted) is used for requests that continue to process outside of the request cycle; for example, import or export jobs that may be long running and benefit from reporting progress to clients. See Progress for how to handle the 202 response content. Requests that would otherwise return 201 (Location) will still include the Location header in the 202 response; requests that would otherwise return 204 (No Content) will have no additional response headers.

    ## Unsuccessful requests
    “Bad” requests returning with a 4xx status may contain JSON response content with an error message.

    Unauthenticated requests to non-public resources return 401 (Unauthorized).

    Authenticated but unauthorized responses return 404 (Not Found) rather than 403 (Forbidden) in cases where returning 403 would leak information about the existence of resources. The 403 response is reserved for cases when, for example, a user is authorized to GET a resource but not PATCH it.

    The 409 (Conflict) response is used when the request may be retried and may succeed if changes are first made at a different resource. Example: when a user who has edit privileges on a dataset but is not the “current editor” attempts to PATCH a dataset resource.

    ## Error responses
    To avoid duplicating error responses on every endpoint description, the most common responses are listed here and only any additional, endpoint-specific responses will be documented with each api endpoint.

    ### HTTP status codes
    | Status Code | Description |
    | :-: | :-- |
    | 400 | Bad request, invalid input |
    | 401 | Invalid access token |
    | 403 | Account locked - please contact Crunch support |

    ## Deprecated endpoints
    When API resources are deprecated, responses will contain a Warning header with a message about the deprecation and a recommendation for upgrading. Our client libraries look for this response header and will alert you to upgrade your version of the library if you receive a response with this header.

    Endpoints that have been removed respond with a 410 (Gone) status, optionally with a message instructing you where to look instead.

    # API response envelopes
    Crunch API endpoints do not return plain old javascript objects (POJOs) directly but instead deliver POJOs inside a property of machine-readable custom envelopes that facilitate endpoint exploration and traversal. Click here to read the [envelope spec](https://bitbucket.org/fumanchu/shoji/src/default/spec.txt).

    Using crunch api envelopes can be summarized like this:
    ```javascript
    let data = {}
    switch (response.element) {
      case 'shoji:entity':
        data = response.body
        break
      case 'shoji:catalog':
        data = response.index
        break
      case 'shoji:view':
        data = response.value
        break
    }
    ```

    ## ENTITY envelope
    A Shoji entity is identified by `element: "shoji:entity"`. Its principal attribute is the `body` key, which is an object containing the attributes that describe the entity.

    ## CATALOG envelope
    A catalog is identified by `element: "shoji:catalog"` with its principal attribute being `index` that contains an object keyed by the URLs of the entities it contains and for each key an object (tuple) with attributes from the referenced entity.

    Shoji catalogs are **not** ordered. For its ordered representations they may provide an `orders` set of Shoji order resources.

    ## VIEW envelope
    A Shoji view is identified by `element: "shoji:view"` with its principal attribute being `value`. This can contain any arbitrary JSON object.

    ## ORDER envelope
    Shoji orders are identified by `element: "shoji:order"`. The principal attribute is the `graph` key which is an array containing the order of present resources.

    A shoji order may be associated with a catalog. In such case it will contain a subset or totality of the entities present in the catalog. The catalog remains as the authoritative source of available entities.

    Any entity not present on the order but present in the catalog may be considered to belong at the bottom of the root of the graph in an arbitrary order, or may be excluded from view.
  title: Crunch API
  version: '1.1'
openapi: 3.0.3
security:
  - Access Token: []
servers:
  - description: Crunch API (testing sandbox 1)
    url: 'https://alpha.crunch.io/api'
  - description: Crunch API (testing sandbox 2)
    url: 'https://stable.crunch.io/api'
  - description: Crunch API (testing sandbox 3)
    url: 'https://unstable.crunch.io/api'
  - description: Crunch API (production). EXERCISE EXTREME CAUTION as all non-GET requests to this server can be destructive to real data.
    url: 'https://app.crunch.io/api'
x-api-id: crunch-api
components:
  schemas:
    Account:
      description: ''
      properties:
        id:
          description: Account ID
          type: string
        logo:
          properties:
            favicon:
              description: Url of favicon logo image
              type: string
            large:
              description: Url of large logo image
              type: string
            small:
              description: Url to small logo image
              type: string
          type: object
        name:
          description: Account name
          type: string
        palette:
          $ref: '#/components/schemas/Color-Palette'
        templates:
          properties:
            powerpoint:
              description: Url to custom powerpoint template
              type: string
          type: object
      title: Account
      type: object
      x-examples:
        example-1:
          body:
            id: '00001'
            logo:
              favicon: ''
              large: ''
              small: ''
            name: Crunch
            palette:
              analysis:
                - Black Hats are black:
                    default: false
                    palette:
                      - '#ffa299'
                      - '#9100bf'
                      - '#ff6f00'
                      - '#7f6702'
                - White Hats are not:
                    default: false
                    palette:
                      - '#9d7dc9'
                      - '#7f0a00'
                      - '#0074bf'
                      - '#005283'
                      - '#bf1001'
                      - '#ffac7f'
                      - '#ffac7f'
                      - '#bf1001'
                - Just blue:
                    default: false
                    palette:
                      - '#019cff'
                      - '#80cdff'
                - Not a new color palette:
                    default: true
                    palette:
                      - '#005283'
                      - '#bf1001'
                      - '#bf9a00'
                - New color palette:
                    default: false
                    palette:
                      - '#ff5900'
            templates:
              powerpoint: 'https://t.crunch.io/act_templates/account-crunch-jcfojm-powerpoint.pptx'
          catalogs:
            applications: 'https://app.crunch.io/api/account/applications/'
            users: 'https://app.crunch.io/api/account/users/'
          description: Details for an account
          element: 'shoji:entity'
          self: 'https://app.crunch.io/api/account/'
          views:
            logo: 'https://app.crunch.io/api/account/logo/'
            templates: 'https://app.crunch.io/api/account/templates/'
    Analysis-color-palette:
      properties:
        default:
          description: Is this the default color palette to use
          type: boolean
        palette:
          items:
            $ref: '#/components/schemas/Hex-color-code'
          type: array
      title: Analysis-color-palette
      type: object
    Brand-Palette:
      description: Brand custom colors
      properties:
        message:
          $ref: '#/components/schemas/Hex-color-code'
        primary:
          $ref: '#/components/schemas/Hex-color-code'
        secondary:
          $ref: '#/components/schemas/Hex-color-code'
      title: Brand palette
      type: object
      x-examples:
        example-1:
          message: '#BAA5E7'
          primary: '#FFAABB'
          secondary: '#G4EEBB'
    Color-Palette:
      description: ''
      properties:
        analysis:
          description: Colors for data display
          items:
            properties:
              Color palette name:
                $ref: '#/components/schemas/Analysis-color-palette'
            type: object
          type: array
        brand:
          $ref: '#/components/schemas/Brand-Palette'
      title: Color palette
      type: object
      x-examples:
        example-1:
          analysis:
            - Black Hats are black:
                default: false
                palette:
                  - '#ffa299'
                  - '#9100bf'
                  - '#ff6f00'
                  - '#7f6702'
            - White Hats are not:
                default: false
                palette:
                  - '#9d7dc9'
                  - '#7f0a00'
                  - '#0074bf'
                  - '#005283'
                  - '#bf1001'
                  - '#ffac7f'
                  - '#ffac7f'
                  - '#bf1001'
            - Just blue:
                default: false
                palette:
                  - '#019cff'
                  - '#80cdff'
          brand:
            message: '#BAA5E7'
            primary: '#FFAABB'
            secondary: '#G4EEBB'
    Dataset:
      properties:
        access_time:
          description: Datetime this dataset was last accessed
          type: string
        account:
          description: Url to the account this dataset belongs to
          type: string
        archived:
          description: This dataset has been archived
          type: boolean
        creation_time:
          description: Datetime dataset was created
          type: string
        current_editor:
          description: Url to user specified as the current editor
          type: string
        current_editor_name:
          description: Name of the user marked as the current dataset editor
          type: string
        description:
          description: Dataset description
          type: string
        end_date:
          type: string
        id:
          description: Dataset id
          type: string
        is_published:
          description: Has this dataset been published
          type: boolean
        midification_time:
          description: Datetime this dataset was last modified
          type: string
        name:
          description: Dataset name
          type: string
        owner_id:
          description: "Url to this dataset's parent project"
          type: string
        owner_name:
          description: "Name of this dataset's parent project"
          type: string
        permissions:
          properties:
            edit:
              description: Does authenticated user have the ability to edit this dataset
              type: boolean
            view:
              description: Does authenticated user have the ability to view this dataset
              type: boolean
          type: object
        size:
          properties:
            columns:
              description: Number of columns this dataset contains
              type: string
            rows:
              description: Number of rows this dataset contains
              type: string
            unfiltered_rows:
              description: Number of unfiltered rows this dataset contains
              type: string
          type: object
        start_date:
          type: string
        streaming:
          description: Is data being streamed into this dataset
          type: boolean
        type:
          description: 'Always &apos;dataset&apos; for this object type'
          example: dataset
          type: string
        view_of:
          type: string
      title: Dataset
      type: object
      x-examples:
        example-1:
          access_time: '2020-03-27T23:39:30.536000+00:00'
          account: 'https://app.crunch.io/api/accounts/8f04c13804e94ca8b3cf568f8da36cf0/'
          archived: false
          creation_time: '2020-03-25T20:36:10.238000+00:00'
          current_editor: 'https://app.crunch.io/api/users/df3e3c5f7ce74365960d1305373564f0/'
          current_editor_name: Crunch Support
          description: ''
          end_date: null
          id: 69ec37de2efe483fb81e910ec360b97c
          is_published: true
          modification_time: '2020-04-02T14:18:20.032000+00:00'
          name: Just Eat BX data
          owner_id: 'https://app.crunch.io/api/projects/70bc37797d734a868fb9bb641cbbcd80/'
          owner_name: Just Eat
          permissions:
            edit: false
            view: true
          size:
            columns: 6364
            rows: 10596
            unfiltered_rows: 10596
          start_date: null
          streaming: 'no'
          type: dataset
          view_of: null
    Dataset-list:
      properties:
        url to dataset A:
          $ref: '#/components/schemas/Dataset'
        url to dataset B:
          $ref: '#/components/schemas/Dataset'
      title: Dataset-list
      type: object
    Hex-color-code:
      description: Hex (RGB) color code
      example: '#7f0a00'
      title: Hex-color-code
      type: string
    Oauth-redirect:
      description: ''
      properties:
        authorize_url:
          example: 'https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=71778389871-ev84c1qhkfsg2fpqd7tv0hhkrsdtqdr5.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fapp.crunch.io%2Fapi%2Fpublic%2Foauth2redirect%2F&scope=openid+profile+email&state=YRR6SCtvzwbsG9gWmssOqD0VVq3QFA&nonce=6974180560616078291587000412&login_hint=fakeuser%40crunch.io&access_type=online'
          format: uri
          type: string
        email:
          example: fakeuser@gmail.com
          format: email
          type: string
        method:
          example: oauth
          type: string
      title: Oauth-redirect
      type: object
      x-tags:
        - Integrating Crunch
    Shoji-catalog:
      description: ''
      properties:
        body:
          $ref: '#/components/schemas/Shoji-catalog-body'
        catalogs:
          $ref: '#/components/schemas/Shoji-catalog-list'
        description:
          description: Catalog description
          type: string
        element:
          $ref: '#/components/schemas/Shoji-catalog-element'
        index:
          properties:
            list item A url:
              description: POJO of item A contained in this catalog
              type: object
            list item B url:
              description: POJO of item A contained in this catalog
              type: object
          type: object
        self:
          description: Url to this api endpoint
          format: uri
          title: Shoji self
          type: string
        urls:
          $ref: '#/components/schemas/Shoji-url-list'
        views:
          $ref: '#/components/schemas/Shoji-view-list'
      title: Shoji catalog
      type: object
      x-examples: {}
    Shoji-catalog-body:
      properties:
        access_time:
          description: Time catalog was last accessed
          type: string
        description:
          description: Catalog description
          type: string
        modification_time:
          description: Datetime catalog was last modified
          type: string
        name:
          description: Catalog name
          type: string
        owner:
          description: "Url to catalog owner's user details"
          type: string
        owner_id:
          description: "Url to catalog owner's user details"
          format: uri
          type: string
        permissions:
          properties:
            edit:
              description: Is authenticated user allowed to edit catalog
              type: boolean
            view:
              description: Is authenticated user allowed to view catalog
              type: boolean
          type: object
      title: Shoji catalog body
      type: object
    Shoji-catalog-element:
      description: 'Always &apos;shoji:catalog&apos; for this object'
      title: Shoji catalog element
      type: string
      x-examples:
        example-1: 'shoji:catalog'
    Shoji-catalog-list:
      properties:
        sub-catalog A url:
          description: Url to this sub-catalog
          format: uri
          type: string
        sub-catalog B url:
          description: Url to this sub-catalog
          format: uri
          type: string
      title: Shoji catalog list
      type: object
    Shoji-entity:
      properties:
        body:
          description: A plain-old javascript object (POJO) containing the contents of this entity
          type: object
        element:
          default: shoji-entity
          description: Type of shoji element this is
          type: string
        self:
          description: Url for this entity
          type: string
      required:
        - element
        - self
        - body
      title: Shoji entity
      type: object
      x-tags:
        - Shoji
    Shoji-entity-element:
      description: 'Always &apos;shoji:entity&apos; for this object'
      title: Shoji entity element
      type: string
      x-examples:
        example-1: 'shoji:entity'
    Shoji-self:
      description: Url to this api endpoint
      format: uri
      title: Shoji self
      type: string
    Shoji-url-list:
      properties:
        name of url A:
          description: Url A
          format: uri
          type: string
        name of url B:
          description: Url B
          format: uri
          type: string
      title: Shoji url list
      type: object
    Shoji-view-element:
      description: 'Always &apos;shoji:view&apos; for this object'
      title: Shoji view element
      type: string
      x-examples:
        example-1: 'shoji:view'
    Shoji-view-list:
      properties:
        url to view A:
          description: Url to this view
          format: uri
          type: string
        url to view B:
          description: Url to this view
          format: uri
          type: string
      title: Shoji view list
      type: object
    User:
      enum:
        - pwhash
        - oauth
      example: pwhash
      properties:
        account_permissions:
          properties:
            admin_account:
              description: Is user an account administrator
              type: boolean
            alter_users:
              description: Can user edit other users
              type: boolean
            create_datasets:
              description: Can user create datasets
              type: boolean
            create_users:
              description: Can user create other users
              type: boolean
          type: object
        creation_time:
          description: Datetime user was created
          type: string
        email:
          description: "User's email address"
          format: email
          type: string
        id:
          description: User ID
          type: string
        id_method:
          description: Authentication method for this user
          type: string
        id_provider:
          description: 'If user has oauth authentication, which oauth provider to use'
          type: string
        name:
          description: "User's full name"
          type: string
        preferences:
          description: User preferences
          properties:
            datasetDisplaySettings:
              type: object
            displaySettings:
              type: object
            dsVisibleProps:
              type: object
            features:
              type: object
            notificationsReadDate:
              format: date-time
              type: string
            notificationsSnoozeDate:
              format: date-time
              type: string
            openedDecks:
              type: object
            projectBrowser:
              type: object
            projectId:
              format: uri
              type: string
            search_settings:
              type: object
            varCardSettings:
              type: string
          type:
            - string
            - object
      title: User
      type: object
      x-examples:
        example-1:
          account_permissions:
            admin_account: false
            alter_users: false
            create_datasets: true
            create_users: false
          creation_time: '2019-06-19T15:29:06+00:00'
          email: sim-editor-1@crunch.io
          id: f94d0f8486f14689b1c9fdd982d51700
          id_method: pwhash
          id_provider: null
          name: Sim Editor 1
          preferences:
            datasetDisplaySettings:
              displayArchivedDatasets: true
            displaySettings:
              columnSignificance: null
              countsOrPercents: percent
              decimalPlaces: 0
              geoChart: true
              percentageDirection: colPct
              populationMagnitude: 3
              separateOrCombined: separate
              showCategoriesSubtotals: both
              showDescription: true
              showEmpty: false
              showMean: false
              showSignif: false
              showValueLabels: false
              showVisualization: true
              simpleOrExtended: simple
            dsVisibleProps:
              access_time: true
              modification_time: true
              name: true
            features: {}
            notificationsReadDate: '2020-04-16T20:04:05.281Z'
            notificationsSnoozeDate: null
            openedDecks:
              018ca6872e0e4b5b9cdc0745f4b11ef8: 'https://app.crunch.io/api/datasets/018ca6872e0e4b5b9cdc0745f4b11ef8/decks/d333732f3aed4f95ac3e8a27cdcf03af/'
              0700211987ee4599a9fa0924a58c9af0: 'https://app.crunch.io/api/datasets/0700211987ee4599a9fa0924a58c9af0/decks/2b5ec4e80fcb42358d3e4e764b1319cb/'
              0be895b02a054e0e9e742b95ebdcfca0: 'https://app.crunch.io/api/datasets/0be895b02a054e0e9e742b95ebdcfca0/decks/c3a7ca0a71904afeb9624fb713dad354/'
              2ff0e33046984f838a4cb330291d2edb: 'https://app.crunch.io/api/datasets/2ff0e33046984f838a4cb330291d2edb/decks/26887165af584599a98ba51cb12a6811/'
              4c44283be4b24942ad11e8363e054cc3: 'https://app.crunch.io/api/datasets/4c44283be4b24942ad11e8363e054cc3/decks/27572276d8d848bbaaeef361fe6fc123/'
              6284ae2013ae4f6bbb0fc8eaa606d7e3: 'https://app.crunch.io/api/datasets/6284ae2013ae4f6bbb0fc8eaa606d7e3/decks/7bccfa13b3ff42a29a1be7032f7f4d2c/'
              68f6997042ed4f19b536fa7b6daf1e2f: 'https://app.crunch.io/api/datasets/68f6997042ed4f19b536fa7b6daf1e2f/decks/c658efaf87c945d892b68ee950881a4f/'
              a2223646a2854fbf98495f6dc3e264b4: 'https://app.crunch.io/api/datasets/a2223646a2854fbf98495f6dc3e264b4/decks/f42eac179f6d47ecb698f758e49895c5/'
              d682f3f648c6473ea0b79fb2b23d4acb: 'https://app.crunch.io/api/datasets/d682f3f648c6473ea0b79fb2b23d4acb/decks/59e851c6a5e84da0b473ef95695795a7/'
              eb4ea0e51e5e45caabebdb75c5147db4: 'https://app.crunch.io/api/datasets/eb4ea0e51e5e45caabebdb75c5147db4/decks/c3a7ca0a71904afeb9624fb713dad354/'
            projectBrowser: {}
            projectId: 'https://app.crunch.io/api/projects/d22b37e0258a4986b29598fc79ccc24f/'
            search_settings:
              grouping: datasets
              matchMode: any-terms
              scope: null
              timeCriteria: null
              timeRange: null
              view: ranked
            varCardSettings: {}
    subdomain-configuration:
      description: subdomain configuration
      properties:
        logo:
          properties:
            favicon:
              description: Url of favicon image
              type: string
            large:
              description: Url of large logo image
              type: string
            small:
              description: Url of small logo image
              type: string
          type: object
        manifest:
          type: object
        name:
          description: Company name
          type: string
        oauth_redirect:
          description: User logging into this subdomain will use oauth authentication
          type: boolean
        palette:
          description: Custom color palette
          type: object
      title: Subdomain configuration
      type: object
      x-examples:
        example-1:
          logo:
            favicon: 'https://s.crunch.io/act_app_icons/mycompany-kyzdnb-favicon.ico'
            large: 'https://s.crunch.io/act_app_icons/mycompany-wcaran-large.png'
            small: 'https://s.crunch.io/act_app_icons/mycompany-nchvcz-small.png'
          manifest: {}
          name: My Company
          oauth_redirect: true
          palette: {}
      x-tags:
        - OEM
  securitySchemes:
    Access Token:
      description: 'Enter Crunch access token received from login api endpont:'
      scheme: bearer
      type: http
paths:
  /:
    get:
      description: Lists root urls available to authenticated requests.
      operationId: get
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    catalogs:
                      dashboards: 'https://app.crunch.io/api/dashboards/'
                      datasets: 'https://app.crunch.io/api/datasets/'
                      datasets_by_name: 'https://app.crunch.io/api/datasets/by_name/{name}/'
                      geodata: 'https://app.crunch.io/api/geodata/'
                      integrations: 'https://app.crunch.io/api/integrations/'
                      lobs: 'https://app.crunch.io/api/lobs/'
                      projects: 'https://app.crunch.io/api/projects/'
                      public: 'https://app.crunch.io/api/public/'
                      roles: 'https://app.crunch.io/api/roles/'
                      sources: 'https://app.crunch.io/api/sources/'
                      teams: 'https://app.crunch.io/api/teams/'
                      users: 'https://app.crunch.io/api/users/'
                    description: The API root. GET user_url to access your Crunch resources. GET logout_url to sign out.
                    element: 'shoji:catalog'
                    self: 'https://app.crunch.io/api/'
                    urls:
                      account_roles_url: 'https://app.crunch.io/api/roles/accounts/'
                      account_url: 'https://app.crunch.io/api/account/'
                      logout_url: 'https://app.crunch.io/api/logout/'
                      notebook_url: 'https://jupyter.crunch.io/'
                      user_url: 'https://app.crunch.io/api/users/1db4a48a481f420caf72c966f9a2b948/'
                    views:
                      account: 'https://app.crunch.io/api/account/'
                      feature_flag: 'https://app.crunch.io/api/feature_flag/'
                      migration: 'https://app.crunch.io/api/migration/'
                      progress: 'https://app.crunch.io/api/progress/'
                      search: 'https://app.crunch.io/api/search/'
                      user: 'https://app.crunch.io/api/users/1db4a48a481f420caf72c966f9a2b948/'
              schema:
                description: ''
                type: object
                properties:
                  catalogs:
                    type: object
                    properties:
                      dashboards:
                        type: string
                        minLength: 1
                      datasets:
                        type: string
                        minLength: 1
                      datasets_by_name:
                        type: string
                        minLength: 1
                      geodata:
                        type: string
                        minLength: 1
                      integrations:
                        type: string
                        minLength: 1
                      lobs:
                        type: string
                        minLength: 1
                      projects:
                        type: string
                        minLength: 1
                      public:
                        type: string
                        minLength: 1
                      roles:
                        type: string
                        minLength: 1
                      sources:
                        type: string
                        minLength: 1
                      teams:
                        type: string
                        minLength: 1
                      users:
                        type: string
                        minLength: 1
                    required:
                      - dashboards
                      - datasets
                      - datasets_by_name
                      - geodata
                      - integrations
                      - lobs
                      - projects
                      - public
                      - roles
                      - sources
                      - teams
                      - users
                  description:
                    type: string
                    minLength: 1
                  element:
                    type: string
                    minLength: 1
                  self:
                    type: string
                    minLength: 1
                  urls:
                    type: object
                    properties:
                      account_roles_url:
                        type: string
                        minLength: 1
                      account_url:
                        type: string
                        minLength: 1
                      logout_url:
                        type: string
                        minLength: 1
                      notebook_url:
                        type: string
                        minLength: 1
                      user_url:
                        type: string
                        minLength: 1
                    required:
                      - account_roles_url
                      - account_url
                      - logout_url
                      - notebook_url
                      - user_url
                  views:
                    type: object
                    properties:
                      account:
                        type: string
                        minLength: 1
                      feature_flag:
                        type: string
                        minLength: 1
                      migration:
                        type: string
                        minLength: 1
                      progress:
                        type: string
                        minLength: 1
                      search:
                        type: string
                        minLength: 1
                      user:
                        type: string
                        minLength: 1
                    required:
                      - account
                      - feature_flag
                      - migration
                      - progress
                      - search
                      - user
                required:
                  - catalogs
                  - description
                  - element
                  - self
                  - urls
                  - views
          description: Success
        '401':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    exception:
                      - You must be authenticated to access this resource. Please login at /public/login/
                    status: 401 Unauthorized
                    urls:
                      collect_inquires: 'https://app.crunch.io/api/public/inquire/'
                      email_change_url: 'https://app.crunch.io/api/public/change_email/'
                      login_url: 'https://app.crunch.io/api/public/login/'
                      password_change_url: 'https://app.crunch.io/api/public/password_change/'
                      password_reset_url: 'https://app.crunch.io/api/public/password_reset/'
                      public_url: 'https://app.crunch.io/api/public/'
              schema:
                description: ''
                type: object
                properties:
                  exception:
                    type: array
                    items:
                      required: []
                      properties: {}
                  status:
                    type: string
                    minLength: 1
                  urls:
                    type: object
                    properties:
                      collect_inquires:
                        type: string
                        minLength: 1
                      email_change_url:
                        type: string
                        minLength: 1
                      login_url:
                        type: string
                        minLength: 1
                      password_change_url:
                        type: string
                        minLength: 1
                      password_reset_url:
                        type: string
                        minLength: 1
                      public_url:
                        type: string
                        minLength: 1
                    required:
                      - collect_inquires
                      - email_change_url
                      - login_url
                      - password_change_url
                      - password_reset_url
                      - public_url
                required:
                  - exception
                  - status
                  - urls
          description: Unauthorized
      summary: Root urls
      tags:
        - Catalogs
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const { catalogs, urls, views } = await fetch(
              &apos;https://app.crunch.io/api/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
               }
              })
             .then(response => response.json())
          syntaxLang: javascript
    parameters: []
  /account/:
    get:
      description: |-
        All users belong to one and only one account. Accounts provide an organization-level scope for Crunch.io customers. This endpoint returns information for the authenticated user's account including branding configuration.
        ## What are account managers?
        Account managers can administer their various users and entities and have visibility on them. A user is an account manager if their `account_permissions.admin_account=true`.
      operationId: get-account
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    body:
                      id: cd6f4fb6b5e848818916c11d61a37a29
                      logo:
                        favicon: ''
                        large: ''
                        small: ''
                      name: Account created for fakeuser@gmail.com
                      palette: {}
                      templates:
                        powerpoint: ''
                    catalogs:
                      applications: 'https://app.crunch.io/api/account/applications/'
                      users: 'https://app.crunch.io/api/account/users/'
                    description: Details for an account
                    element: 'shoji:entity'
                    self: 'https://app.crunch.io/api/account/'
                    views:
                      logo: 'https://app.crunch.io/api/account/logo/'
                      templates: 'https://app.crunch.io/api/account/templates/'
              schema:
                properties:
                  body:
                    $ref: '#/components/schemas/Account'
                  catalogs:
                    $ref: '#/components/schemas/Shoji-catalog-list'
                  description:
                    type: string
                  element:
                    $ref: '#/components/schemas/Shoji-entity-element'
                  self:
                    $ref: '#/components/schemas/Shoji-self'
                  views:
                    $ref: '#/components/schemas/Shoji-view-list'
                type: object
          description: OK
        '401':
          description: Unauthorized
      summary: Account details
      tags:
        - Account
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/account/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const account = await fetch(
              &apos;https://app.crunch.io/api/account/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
               }
              })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.body);
          syntaxLang: javascript
    patch:
      description: "Update the brand color palette for the user's account. Only account admins are authorized to do this."
      operationId: patch-account
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  body:
                    palette:
                      analysis: []
                      brand:
                        message: '#722580'
                        primary: '#0064a4'
                        secondary: '#107f64'
                  element: 'shoji:entity'
            schema:
              properties:
                body:
                  type: object
                  default: {}
                  examples:
                    - palette:
                        brand:
                          primary: '#0064a4'
                          secondary: '#107f64'
                          message: '#722580'
                        analysis: []
                  required:
                    - palette
                  properties:
                    palette:
                      type: object
                      default: {}
                      examples:
                        - analysis: []
                          brand:
                            primary: '#0064a4'
                            secondary: '#107f64'
                            message: '#722580'
                      required:
                        - analysis
                        - brand
                      properties:
                        analysis:
                          type: array
                          default: []
                          examples:
                            - []
                        brand:
                          type: object
                          default: {}
                          examples:
                            - primary: '#0064a4'
                              secondary: '#107f64'
                              message: '#722580'
                          required:
                            - message
                            - primary
                            - secondary
                          properties:
                            message:
                              type: string
                              default: ''
                              examples:
                                - '#722580'
                            primary:
                              type: string
                              default: ''
                              examples:
                                - '#0064a4'
                            secondary:
                              type: string
                              default: ''
                              examples:
                                - '#107f64'
                element:
                  $ref: '#/components/schemas/Shoji-entity-element'
              type: object
      responses:
        '204':
          description: No Content
      summary: Change color palette
      tags:
        - Account
      x-code-samples:
        - lang: SHELL
          source: "curl -X PATCH https://app.crunch.io/api/account/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"palette\": {\n      \"analysis\": [],\n      \"brand\": {\n        \"primary\": \"#0064a4\",\n        \"secondary\": \"#107f64\",\n        \"message\": \"#722580\"\n      }\n    }\n  }\n}\n&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const patchAccount = await fetch(
              &apos;https://app.crunch.io/api/account/&apos;, {
               method: &apos;PATCH&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
                &apos;Content-Type&apos;: &apos;application/json&apos;
               },
               body: JSON.stringify({
                "element": "shoji:entity",
                "body": {
                  "palette": {
                    "analysis": [],
                    "brand": {
                      "primary": "#0064a4",
                      "secondary": "#107f64",
                      "message": "#722580"
                    }
                  }
                }
               })
             })
          syntaxLang: javascript
  /account/applications/:
    get:
      description: "List subdomains configured for user's account."
      operationId: get-account-applications
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    element: 'shoji:catalog'
                    index:
                      'https://app.crunch.io/api/account/applications/heyenrique/':
                        name: Crunch.io
                        subdomain: heyenrique
                      'https://app.crunch.io/api/account/applications/local/':
                        name: Localhost development
                        subdomain: local
                    self: 'https://app.crunch.io/api/account/applications/'
              schema:
                properties:
                  element:
                    $ref: '#/components/schemas/Shoji-catalog-element'
                  index:
                    properties:
                      subdomain A:
                        properties:
                          name:
                            description: Name of subdomain
                            type: string
                          subdomain:
                            description: Subdomain prefix
                            type: string
                        type: object
                      subdomain B:
                        properties:
                          name:
                            description: Name of subdomain
                            type: string
                          subdomain:
                            description: Subdomain prefix
                            type: string
                        type: object
                    type: object
                  self:
                    $ref: '#/components/schemas/Shoji-self'
                type: object
          description: OK
      summary: List subdomains
      tags:
        - Account subdomains
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/account/applications/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const subdomains = await fetch(
              &apos;https://app.crunch.io/api/account/applications/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
               }
              })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.index);
          syntaxLang: javascript
    parameters: []
    post:
      description: |-
        Create a new subdomain for the user's account.

        The subdomain:

        * must be unique system-wide, case insensitive
        * can only contain letters, numbers, and - (dash)
        * must be between 3 and 32 characters in length
        * cannot start with - or a number

        If the requested subdomain is unavailable or invalid, the server will return a 400 response.

        Attributes `name` and `subdomain` are required; `palette` and `manifest` are optional. Note that you cannot specify logos in the this request. Use the created entity’s logo/ endpoint to upload the image files to the subdomain.
      operationId: post-account-applications
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  element: 'shoji:entity'
                  body:
                    name: fakeuser subdomain
                    subdomain: joe
            schema:
              properties:
                element:
                  type: string
                  default: 'shoji:entity'
                  examples:
                    - 'shoji:entity'
                body:
                  type: object
                  default: {}
                  examples:
                    - name: fakeuser subdomain
                      subdomain: joe1
                  required:
                    - name
                    - subdomain
                  properties:
                    name:
                      type: string
                      default: ''
                      examples:
                        - fakeuser subdomain
                    subdomain:
                      type: string
                      default: ''
                      examples:
                        - joe1
              type: object
      responses:
        '201':
          description: Created
      summary: Create subdomain
      tags:
        - Account subdomains
      x-code-samples:
        - lang: SHELL
          source: "curl -X POST https://app.crunch.io/api/account/applications/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:entity\",\n  \"body\": {\n    \"name\": \"fakeuser subdomain\",\n    \"subdomain\": \"joe1\"\n  }\n}\n&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const postSubdomain = await fetch(
              &apos;https://app.crunch.io/api/account/applications/&apos;, {
               method: &apos;POST&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
                &apos;Content-Type&apos;: &apos;application/json&apos;
               },
               body: JSON.stringify({
                "element": "shoji:entity",
                "body": {
                  "name": "fakeuser subdomain",
                  "subdomain": "joe1"
                }
               })
             })
          syntaxLang: javascript
  '/account/applications/{applicationId}/logo/':
    get:
      description: ''
      operationId: get-account-applications-applicationId-logo
      parameters: []
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    element: 'shoji:view'
                    self: 'https://app.crunch.io/api/account/applications/testsetuplogos/logo/'
                    value:
                      favicon: ''
                      large: ''
                      small: ''
              schema:
                description: ''
                type: object
                properties:
                  element:
                    type: string
                    minLength: 1
                  self:
                    type: string
                    minLength: 1
                  value:
                    type: object
                    properties:
                      favicon:
                        type: string
                      large:
                        type: string
                      small:
                        type: string
                    required:
                      - favicon
                      - large
                      - small
                required:
                  - element
                  - self
                  - value
          description: Success
      summary: List subdomain logos
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/account/applications/testsetuplogos/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const getAccountApplicationsApplicationIdLogo = await fetch(
              &apos;https://app.crunch.io/api/account/applications/testsetuplogos/logo/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;
               }
             })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.value)
          syntaxLang: javascript
      tags:
        - Account subdomains
    parameters:
      - description: Unique ID of the application you are working with
        in: path
        name: applicationId
        required: true
        schema:
          type: string
    post:
      description: |-
        To set/change an application’s logo, you can make a multipart/form-data request containing either or all of the large, small and favicon fields with the desired image files to use. GIF, JPEG, PNG and ICO image files are supported.

        Only account admins are authorized to change subdomain logos.
      operationId: post-account-applications-applicationId-logo
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                favicon:
                  description: 16x16 pixel logo image
                  format: binary
                  type: string
                large:
                  description: Large logo image
                  format: binary
                  type: string
                small:
                  description: Small logo image
                  format: binary
                  type: string
              type: object
      parameters: []
      responses:
        '202':
          description: Item created
        '400':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    exception:
                      - Invalid image file
                    message: Invalid image file
                    status: 400 Bad Request
              schema:
                description: ''
                type: object
                properties:
                  exception:
                    type: array
                    items:
                      required: []
                      properties: {}
                  message:
                    type: string
                    minLength: 1
                  status:
                    type: string
                    minLength: 1
                required:
                  - exception
                  - message
                  - status
          description: Bad request
      summary: Change subdomain logo
      x-code-samples:
        - lang: SHELL
          source: "curl -X POST https://app.crunch.io/api/account/applications/testsetuplogos/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const postAccountApplicationsApplicationIdLogo = await fetch(
              &apos;https://app.crunch.io/api/account/applications/testsetuplogos/logo/&apos;, {
               method: &apos;POST&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;
               }
             })
          syntaxLang: javascript
      tags:
        - Account subdomains
    patch:
      summary: Remove subdomain logo
      operationId: patch-account-applications-applicationId-logo
      responses:
        '200':
          description: OK
      description: 'It is possible to remove the logos that have been set up. To do so, PATCH back the contents of the logo/ resource with the specific logos that need to be removed set to the null value.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                element:
                  type: string
                value:
                  type: object
                  properties:
                    large:
                      type: string
                    small:
                      type: string
                    favicon:
                      type: string
            examples:
              example-1:
                value:
                  element: 'shoji:view'
                  value:
                    large: null
                    small: null
                    favicon: null
      tags:
        - Account subdomains
  /account/datasets/:
    get:
      description: |-
        Only account managers have access to this catalog. It is a read only shoji catalog containing all the datasets that users of this account have created (potentially very large catalog).

        Account managers have implicit editor access to all the account datasets.
      operationId: get-account-datasets
      parameters: []
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    element: 'shoji:catalog'
                    index:
                      'https://app.crunch.io/api/datasets/12da1cd3659a4b4c9bb4b33a73fb7f8e/':
                        access_time: '1970-01-01T00:00:00+00:00'
                        account: 'https://app.crunch.io/api/accounts/5b960e63aabf40f5bb1a92240fd16fb3/'
                        archived: false
                        creation_time: '2020-05-20T19:06:26.003000+00:00'
                        current_editor: null
                        current_editor_name: Missing user
                        description: ''
                        end_date: null
                        id: 12da1cd3659a4b4c9bb4b33a73fb7f8e
                        is_published: true
                        modification_time: '2020-05-20T19:06:25.303000+00:00'
                        name: Dataset
                        owner_id: 'https://app.crunch.io/api/users/29d2c9dee6964f6f89e99b791af8e913/'
                        owner_name: a272d8541574d7b16fec2f5216e3ad3a76b5b5118082c02a115b93ab50e872df@example.com
                        size:
                          columns: null
                          rows: null
                          unfiltered_rows: null
                        start_date: null
                        streaming: 'no'
                        view_of: null
                    self: 'https://app.crunch.io/api/account/datasets/'
              schema:
                description: ''
                type: object
                properties:
                  element:
                    type: string
                    minLength: 1
                  index:
                    type: object
                    properties:
                      'https://app.crunch.io/api/datasets/12da1cd3659a4b4c9bb4b33a73fb7f8e/':
                        type: object
                        properties:
                          access_time:
                            type: string
                            minLength: 1
                          account:
                            type: string
                            minLength: 1
                          archived:
                            type: boolean
                          creation_time:
                            type: string
                            minLength: 1
                          current_editor: {}
                          current_editor_name:
                            type: string
                            minLength: 1
                          description:
                            type: string
                          end_date: {}
                          id:
                            type: string
                            minLength: 1
                          is_published:
                            type: boolean
                          modification_time:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          owner_id:
                            type: string
                            minLength: 1
                          owner_name:
                            type: string
                            minLength: 1
                          size:
                            type: object
                            properties:
                              columns: {}
                              rows: {}
                              unfiltered_rows: {}
                            required: []
                          start_date: {}
                          streaming:
                            type: string
                            minLength: 1
                          view_of: {}
                        required:
                          - access_time
                          - account
                          - archived
                          - creation_time
                          - current_editor_name
                          - description
                          - id
                          - is_published
                          - modification_time
                          - name
                          - owner_id
                          - owner_name
                          - size
                          - streaming
                    required:
                      - 'https://app.crunch.io/api/datasets/12da1cd3659a4b4c9bb4b33a73fb7f8e/'
                  self:
                    type: string
                    minLength: 1
                required:
                  - element
                  - index
                  - self
          description: Success
      summary: List all account datasets
      tags:
        - Accounts
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/account/datasets/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const getAccountDatasets = await fetch(
              &apos;https://app.crunch.io/api/account/datasets/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;
               }
             })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.index)
          syntaxLang: javascript
    parameters: []
  /account/logo/:
    parameters: []
    patch:
      description: 'To remove any logos that have been set up, submit one more more image names with a null value.'
      operationId: patch-account-logo
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  element: 'shoji:view'
                  value:
                    favicon: null
                    large: null
                    small: null
            schema:
              properties:
                element:
                  $ref: '#/components/schemas/Shoji-view-element'
                value:
                  properties:
                    favicon:
                      description: This will remove the favicon logo
                      type: 'null'
                    large:
                      description: This will remove the large log
                      type: 'null'
                    small:
                      description: This will remove the small logo
                      type: 'null'
                  type: object
              type: object
      responses:
        '204':
          description: No Content
      summary: Remove logos
      tags:
        - Account
      x-code-samples:
        - lang: SHELL
          source: "curl -X PATCH https://app.crunch.io/api/account/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"large\": null,\n    \"small\": null,\n    \"favicon\": null\n  }\n}\n&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const removeLogo = await fetch(
              &apos;https://app.crunch.io/api/account/logo/&apos;, {
               method: &apos;PATCH&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
                &apos;Content-Type&apos;: &apos;application/json&apos;
               },
               body: JSON.stringify({
                "element": "shoji:view",
                "value": {
                  "large": null,
                  "small": null,
                  "favicon": null
                }
               })
             })
          syntaxLang: javascript
    post:
      description: "Update the logos for the user's account. Only account admins are authorized to do this. Valid file extensions are GIF, JPEG, PNG and ICO image files."
      operationId: post-account-logo
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                favicon:
                  description: 16x16 pixel logo image
                  format: binary
                  type: string
                large:
                  description: Large logo image
                  format: binary
                  type: string
                small:
                  description: Small logo image
                  format: binary
                  type: string
              type: object
      responses:
        '204':
          description: No Content
      summary: Change logos
      tags:
        - Account
      x-code-samples:
        - lang: SHELL
          source: "curl -X POST https://app.crunch.io/api/account/logo/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos; \\\n  -H &apos;Content-Type: multipart/form-data&apos; \\\n  -F &apos;large=@6r7bkQxR5u6X5KEv4DsJ.png&apos; \\\n  -F &apos;favicon=@favicon.ico&apos; \\\n  -F &apos;small=@6r7bkQxR5u6X5KEv4DsJ.png&apos;"
          syntaxLang: bash
  /account/projects/:
    get:
      description: This catalog is available for account managers and lists all the projects that the users have created. Account managers have implicit edit access on all projects.
      operationId: get-account-projects
      parameters: []
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    element: 'shoji:catalog'
                    index:
                      'https://app.crunch.io/api/projects/8ebf23a3d45144ce810f900bb52abf11/':
                        description: ''
                        id: 8ebf23a3d45144ce810f900bb52abf11
                        name: __users__
                      'https://app.crunch.io/api/projects/b63cafbbf4f94b34935eb4858f394102/':
                        description: ''
                        id: b63cafbbf4f94b34935eb4858f394102
                        name: Project
                    self: 'https://app.crunch.io/api/account/projects/'
              schema:
                description: ''
                type: object
                properties:
                  element:
                    type: string
                    minLength: 1
                  index:
                    type: object
                    properties:
                      'https://app.crunch.io/api/projects/8ebf23a3d45144ce810f900bb52abf11/':
                        type: object
                        properties:
                          description:
                            type: string
                          id:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                        required:
                          - description
                          - id
                          - name
                      'https://app.crunch.io/api/projects/b63cafbbf4f94b34935eb4858f394102/':
                        type: object
                        properties:
                          description:
                            type: string
                          id:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                        required:
                          - description
                          - id
                          - name
                    required:
                      - 'https://app.crunch.io/api/projects/8ebf23a3d45144ce810f900bb52abf11/'
                      - 'https://app.crunch.io/api/projects/b63cafbbf4f94b34935eb4858f394102/'
                  self:
                    type: string
                    minLength: 1
                required:
                  - element
                  - index
                  - self
          description: Success
      summary: List all account projects
      tags:
        - Accounts
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/account/projects/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const getAccountProjects = await fetch(
              &apos;https://app.crunch.io/api/account/projects/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;
               }
             })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.index)
          syntaxLang: javascript
    parameters: []
  /account/templates/:
    parameters: []
    patch:
      description: 'To remove a Powerpoint template that has been set up, submit this with a null value.'
      operationId: patch-account-templates
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  element: 'shoji:view'
                  value:
                    powerpoint: null
            schema:
              properties:
                element:
                  $ref: '#/components/schemas/Shoji-view-element'
                value:
                  properties:
                    powerpoint:
                      description: This will remove the Powerpoint template
                      type: 'null'
                  type: object
              type: object
      responses:
        '204':
          description: No Content
      summary: Remove Powerpoint template
      tags:
        - Account
      x-code-samples:
        - lang: SHELL
          source: "curl -X PATCH https://app.crunch.io/api/account/templates/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos; \\\n  -H &apos;Content-Type: application/json&apos; -d &apos;\n{\n  \"element\": \"shoji:view\",\n  \"value\": {\n    \"powerpoint\": null\n  }\n}\n&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const removeTemplate = await fetch(
              &apos;https://app.crunch.io/api/account/templates/&apos;, {
               method: &apos;PATCH&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
                &apos;Content-Type&apos;: &apos;application/json&apos;
               },
               body: JSON.stringify({
                "element": "shoji:view",
                "value": {
                  "powerpoint": null
                }
               })
             })
          syntaxLang: javascript
    post:
      description: "Update the PowerPoint template for the user's account. Only account admins are authorized to do this. Must be a valid Microsoft PowerPoint file."
      operationId: post-account-templates
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                powerpoint:
                  description: Valid Powerpoint template file
                  format: binary
                  type: string
              type: object
      responses:
        '204':
          description: No Content
      summary: Change Powerpoint template
      tags:
        - Account
      x-code-samples:
        - lang: SHELL
          source: "curl -X POST https://app.crunch.io/api/account/templates/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos; \\\n  -H &apos;Content-Type: multipart/form-data&apos; \\\n  -F &apos;powerpoint=@PowerpointTemplate.pptx&apos;"
          syntaxLang: bash
  /feature_flag/:
    get:
      description: Crunch uses feature flags to enable and disable system-wide features under development. This api endpoint returns the application features the authenticated user has access to.
      operationId: get-feature_flag
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    description: Indicates the status of a given feature
                    element: 'shoji:view'
                    self: 'https://app.crunch.io/api/feature_flag/'
                    value:
                      labs: []
                      'off':
                        - dataset_history
                        - labs
                        - dashboards
                        - public_widget
                        - data_cats
                        - variable-folders
                        - variable-folders-ui
                        - old_projects_order
                        - automatic_frame_collapsing
                        - skip_folders_integrity_checking
                      'on':
                        - html_emails
                        - private_variables
                        - dataset_search_index
                        - variable_search_index
                        - tabbooks
                        - projects
                        - variable_folders
                        - crosstab_upgrade
              schema:
                description: ''
                type: object
                properties:
                  description:
                    type: string
                    minLength: 1
                  element:
                    type: string
                    minLength: 1
                  self:
                    type: string
                    minLength: 1
                  value:
                    type: object
                    properties:
                      labs:
                        type: array
                        items:
                          required: []
                          properties: {}
                      'off':
                        type: array
                        items:
                          required: []
                          properties: {}
                      'on':
                        type: array
                        items:
                          required: []
                          properties: {}
                    required:
                      - labs
                      - 'off'
                      - 'on'
                required:
                  - description
                  - element
                  - self
                  - value
          description: Success
      security:
        - Access Token: []
      summary: Feature flags
      tags:
        - Users
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/feature_flag/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const featureFlags = await fetch(
              &apos;https://app.crunch.io/api/feature_flag/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
               }
              })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.value);
          syntaxLang: javascript
  /logout/:
    get:
      description: Log user out and expire access token
      operationId: get-logout
      responses:
        '204':
          description: Logged off successfully
      summary: Log out
      tags:
        - Authentication
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/logout/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const logout = await fetch(
              &apos;https://app.crunch.io/api/logout/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
               }
              })
          syntaxLang: javascript
  /projects/shared/:
    get:
      description: Returns a list of datasets other users have shared with the authenticated user.
      operationId: get-projects-shared
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    body:
                      access_time: '2020-04-02T14:18:20.032000'
                      description: Items that other users have shared with you
                      modification_time: '2020-04-07T21:50:10.029000'
                      name: Shared
                      owner: 'https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/'
                      owner_id: 'https://app.crunch.io/api/users/1168fb80e331419e9e0b2695714b32b3/'
                      permissions:
                        edit: false
                        view: true
                    element: 'shoji:catalog'
                    index:
                      'https://app.crunch.io/api/datasets/69ec37de2efe483fb81e910ec360b97c/':
                        access_time: '2020-03-27T23:39:30.536000+00:00'
                        account: 'https://app.crunch.io/api/accounts/8f04c13804e94ca8b3cf568f8da36cf0/'
                        archived: false
                        creation_time: '2020-03-25T20:36:10.238000+00:00'
                        current_editor: 'https://app.crunch.io/api/users/df3e3c5f7ce74365960d1305373564f0/'
                        current_editor_name: Crunch Support
                        description: ''
                        end_date: null
                        id: 69ec37de2efe483fb81e910ec360b97c
                        is_published: true
                        modification_time: '2020-04-02T14:18:20.032000+00:00'
                        name: Just Eat BX data
                        owner_id: 'https://app.crunch.io/api/projects/70bc37797d734a868fb9bb641cbbcd80/'
                        owner_name: Just Eat
                        permissions:
                          edit: false
                          view: true
                        size:
                          columns: 6364
                          rows: 10596
                          unfiltered_rows: 10596
                        start_date: null
                        streaming: 'no'
                        type: dataset
                        view_of: null
                      'https://app.crunch.io/api/datasets/9f1f51ac5b70492c9e573288e9e6bed6/':
                        access_time: '2020-04-07T21:50:10.029000+00:00'
                        account: 'https://app.crunch.io/api/accounts/00001/'
                        archived: false
                        creation_time: '2019-04-19T16:49:56.831000+00:00'
                        current_editor: 'https://app.crunch.io/api/users/5187f95407a7d83fe485396c/'
                        current_editor_name: Mike Malecki
                        description: ''
                        end_date: '2019-04-16T00:00:00+00:00'
                        id: 9f1f51ac5b70492c9e573288e9e6bed6
                        is_published: true
                        modification_time: '2020-03-12T20:24:34.770000+00:00'
                        name: 'Political Attitudes | Week of 2019-04-15'
                        owner_id: 'https://app.crunch.io/api/projects/f28cb95815894f6fbdffbd4598c82fc9/'
                        owner_name: Example datasets
                        permissions:
                          edit: false
                          view: true
                        size:
                          columns: 949
                          rows: 1500
                          unfiltered_rows: 1866
                        start_date: '2019-04-13T00:00:00+00:00'
                        streaming: 'no'
                        type: dataset
                        view_of: null
                    self: 'https://app.crunch.io/api/projects/shared/'
              schema:
                properties:
                  body:
                    $ref: '#/components/schemas/Shoji-catalog-body'
                  element:
                    $ref: '#/components/schemas/Shoji-catalog-element'
                  index:
                    $ref: '#/components/schemas/Dataset-list'
                  self:
                    $ref: '#/components/schemas/Shoji-self'
                type: object
          description: OK
      summary: Datasets shared with me
      tags:
        - Projects
      x-code-samples:
        - lang: SHELL
          source: "curl -X GET https://app.crunch.io/api/projects/shared/ \\\n  -H &apos;Authorization: Bearer 598d9e1105ad96dac7ab528f0928996e&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const sharedProjects = await fetch(
              &apos;https://app.crunch.io/api/projects/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
               }
              })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.index);
  /public/:
    get:
      description: Lists all the options available to non authenticated requests.
      operationId: get
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    config: 'https://app.crunch.io/api/public/config/'
                    description: Lists all the options available to non authenticated requests
                    element: 'shoji:catalog'
                    self: 'https://app.crunch.io/api/public/'
                    urls:
                      config_url: 'https://app.crunch.io/api/public/config/'
                    views:
                      change_email: 'https://app.crunch.io/api/public/change_email/'
                      inquire: 'https://app.crunch.io/api/public/inquire/'
                      login: 'https://app.crunch.io/api/public/login/'
                      oauth2redirect: 'https://app.crunch.io/api/public/oauth2redirect/'
                      password_change: 'https://app.crunch.io/api/public/password_change/'
                      password_reset: 'https://app.crunch.io/api/public/password_reset/'
                      signup: 'https://app.crunch.io/api/public/signup/'
                      signup_resend: 'https://app.crunch.io/api/public/signup_resend/'
              schema:
                $ref: '#/components/schemas/Shoji-catalog'
          description: OK
      summary: Unauthenticated urls
      tags:
        - Catalogs
      x-code-samples:
        - lang: SHELL
          source: 'curl -X GET https://app.crunch.io/api/public/'
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const { urls, views } = await fetch(
              &apos;https://app.crunch.io/api/public/&apos;, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;,
               }
              })
             .then(response => response.json())
          syntaxLang: javascript
  /public/config/:
    get:
      description: |-
        Returns a subdomain's configuration, if configured. If none exists, the body will be empty.

        **NOTE**: This api request is designed to run against a **company subdomain** not against `app.crunch.io`.

        `https://yougov.crunch.io/api/public/config/`

        API response.body contains the subdomain’s current configuration. if no configuration exists, response.body will be an empty object.
      operationId: get-public-config
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    element: 'shoji:entity'
                    self: 'https://app.crunch.io/api/public/config/'
                    body:
                      logo:
                        favicon: 'https://s.crunch.io/act_app_icons/mycompany-kyzdnb-favicon.ico'
                        large: 'https://s.crunch.io/act_app_icons/mycompany-wcaran-large.png'
                        small: 'https://s.crunch.io/act_app_icons/mycompany-nchvcz-small.png'
                      manifest: {}
                      name: My Company
                      oauth_redirect: true
                      palette: {}
              schema:
                type: object
                default: {}
                properties:
                  element:
                    type: string
                    default: ''
                    examples:
                      - 'shoji:entity'
                  self:
                    type: string
                    default: ''
                    examples:
                      - 'https://yougov.crunch.io/api/public/config/'
                  body:
                    type: object
                    default: {}
                    examples:
                      - oauth_redirect: true
                        palette: {}
                        manifest: {}
                        logo:
                          favicon: 'https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico'
                          large: 'https://s.crunch.io/act_app_icons/yougov-wcaran-large.png'
                          small: 'https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png'
                        name: YouGov
                    properties:
                      logo:
                        type: object
                        default: {}
                        examples:
                          - favicon: 'https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico'
                            large: 'https://s.crunch.io/act_app_icons/yougov-wcaran-large.png'
                            small: 'https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png'
                        properties:
                          large:
                            type: string
                            default: ''
                            examples:
                              - 'https://s.crunch.io/act_app_icons/yougov-wcaran-large.png'
                          small:
                            type: string
                            default: ''
                            examples:
                              - 'https://s.crunch.io/act_app_icons/yougov-nchvcz-small.png'
                          favicon:
                            type: string
                            default: ''
                            examples:
                              - 'https://s.crunch.io/act_app_icons/yougov-kyzdnb-favicon.ico'
                      palette:
                        type: object
                        default: {}
                        examples:
                          - {}
                        properties: null
                      name:
                        type: string
                        default: ''
                        examples:
                          - YouGov
                      oauth_redirect:
                        type: boolean
                        default: false
                        examples:
                          - true
                      manifest:
                        type: object
                        default: {}
                        examples:
                          - {}
                        properties: null
          description: OK
      security: []
      summary: Company configuration
      tags:
        - Integrating Crunch
      x-code-samples:
        - lang: SHELL
          source: 'curl -X GET https://yougov.crunch.io/api/public/config/'
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const companyConfiguration = await fetch(
              &apos;https://yougov.crunch.io/api/public/config/&apos;, {
               method: &apos;GET&apos;
              })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.body);
          syntaxLang: javascript
  /public/crunchbox/preview/:
    parameters: []
    post:
      description: |-
        The preview endpoint is used to preemptively initiate rendering a given CrunchBox configuration to a raster image. This image will be requested by social network platform crawlers during construction of the post share preview. The preview-rendering process can be time-consuming. Therefore, it is preferable to initiate it as soon as is reasonable before a request for the image data.

        This endpoint returns no data.
      operationId: post-crunchbox-preview
      parameters:
        - description: Url to Crunchbox widget
          in: query
          name: data
          schema:
            default: 'https://s.crunch.io/widget/index.html#/ds/a1b2c3d4e5f6g7h8/row/000001/column/000000'
            example: ''
            format: uri
            type: string
      requestBody:
        description: ''
      responses:
        '202':
          description: Accepted
          headers: {}
      security: []
      summary: Generate Crunchbox preview
      tags:
        - Crunchbox
      x-code-samples:
        - lang: SHELL
          source: "curl -X POST https://app.crunch.io/api/public/crunchbox/preview/?data=https%3A%2F%2Fs.crunch.io%2Fwidget%2Findex.html%23%2Fds%2Fa1b2c3d4e5f6g7h8%2Frow%2F000001%2Fcolumn%2F000000 \\\n  -d &apos;&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const url = new URL(&apos;https://app.crunch.io/api/public/crunchbox/preview/&apos;)
            url.search = new URLSearchParams({
              data: &apos;https://s.crunch.io/widget/index.html#/ds/a1b2c3d4e5f6g7h8/row/000001/column/000000&apos;
            })
            const generateCrunchboxPreview = fetch(url, {
                method: &apos;POST&apos;
              })
             .then(response => response.status)
          syntaxLang: javascript
  /public/crunchbox/share/:
    get:
      description: |-
        Generates the HTML markup for the crunchbox sharing page containing all of the metadata necessary to satisfy the requirements of social platform crawlers to result in a rich sharing content preview. This preview is necessarily constructed as part of the request as to avoid javascript processing which will be ignored by these crawlers.

        See: https://developers.facebook.com/docs/sharing/webmasters/crawler.

        # Endpoint usage in HTML file
        ```html
        <html>
        <head>
            <title>Link to CrunchBox</title>
        </head>
        <body>
        Click here to
        <a target=&apos;_blank&apos;
           href=&apos;https://app.crunch.io/api/public/crunchbox/share/?data=%2F%2Fs.crunch.io%2Fwidget%2Findex.html%23%2Fds%2F72c27f64a12028b887d7cae248143b6b%2Frow%2F000886%2Fcolumn%2F000480%3Fviz%3DstackedBarPlot%26amp%3Bcp%3Dpercent%26amp%3Bdp%3D0%26amp%3Bgrp%3Dstack&ref=https%3A%2F%2Fwww.whitehouse.gov/&apos;>view
            CrunchBox</a>.
        </body>
        </html>
        ```
      operationId: get-crunchbox-share
      parameters:
        - description: CrunchBox widget url
          in: query
          name: data
          required: true
          schema:
            default: '//s.crunch.io/widget/index.html#/ds/d4b2945f727f4eccbc31544ddabf9fa4?viz=groupedBarPlot&cp=percent&dp=0&grp=stack'
            type: string
        - description: Url to use inside the CrunchBox to link user back to referring webpage
          in: query
          name: ref
          schema:
            default: 'https://google.com'
            type: string
      responses:
        '200':
          content:
            text/html:
              examples:
                example-1:
                  value: '<html><head>...</head><body>...</body></html>'
              schema:
                type: string
          description: OK
          headers: {}
      security: []
      summary: Share Crunchbox html
      tags:
        - Crunchbox
      x-code-samples:
        - lang: SHELL
          source: 'curl -X GET https://app.crunch.io/api/public/crunchbox/share/?data=%2F%2Fs.crunch.io%2Fwidget%2Findex.html%23%2Fds%2Fd4b2945f727f4eccbc31544ddabf9fa4%3Fviz%3DgroupedBarPlot%26cp%3Dpercent%26dp%3D0%26grp%3Dstack&ref=https%3A%2F%2Fgoogle.com'
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const getCrunchboxUrl = new URL(&apos;https://app.crunch.io/api/public/crunchbox/share/&apos;)
            getCrunchboxUrl.search = new URLSearchParams({
              data: &apos;//s.crunch.io/widget/index.html#/ds/d4b2945f727f4eccbc31544ddabf9fa4?viz=groupedBarPlot&cp=percent&dp=0&grp=stack&apos;,
              ref: &apos;https://google.com&apos;
            })
            const getCrunchboxShare = await fetch(
              getCrunchboxUrl, {
               method: &apos;GET&apos;,
               headers: {
                &apos;Authorization&apos;: &apos;Bearer 598d9e1105ad96dac7ab528f0928996e&apos;
               }
             })
             .then(response => response.json())
          syntaxLang: javascript
    parameters: []
  /public/login/:
    get:
      description: |-
        Every crunch user account authenticates with the crunch api via a username/password combination or via one of many customer single-signon oauth providers that Crunch integrates with.
        This endpoint receives a crunch account username/email and returns which authentication method is required for that user account.
      operationId: get-public-login
      parameters:
        - description: Crunch username
          in: query
          name: email
          required: true
          schema:
            default: fakeuser@gmail.com
            example: fakeuser@gmail.com
            format: email
            type: string
        - description: Crunch app url to redirect user to after oauth login
          in: query
          name: redirect_uri
          schema:
            default: 'https://app.crunch.io/shared'
            format: uri
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth-redirect'
          description: OK
      security: []
      summary: Look up authorization method
      tags:
        - Users
      x-code-samples:
        - lang: SHELL
          source: 'curl -X GET https://app.crunch.io/api/public/login/?email=fakeuser%40crunch.io&redirect_uri=https%3A%2F%2Fapp.crunch.io%2Fshared'
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const url = new URL(&apos;https://app.crunch.io/api/public/login/&apos;)
            url.search = new URLSearchParams({
              email: &apos;joe@gmail.com&apos;,
              redirect_uri: &apos;https://app.crunch.io/shared&apos;,
            })
            const authorizationMethod = await fetch(url, {
                method: &apos;GET&apos;
              })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.value)
          syntaxLang: javascript
    post:
      description: |-
        Log user in and receive an access token to be used on subsequent api requests. Nearly all interactions with the Crunch API need to be authenticated. The authentication method involves POSTing login credentials and receiving an access token. The api client should then store the access token returned and pass it in on each subsequent request in the Authorization HTTP header like this.

        Example header variable: `Authorization: Bearer 796f025f019ad8299337ba7b0924afbf`

        **TODO** the python code on https://docs.crunch.io/feature-guide/feature-authentication.html is wrong. What is the right code?
      operationId: post-public-login
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              Login example:
                summary: Login example
                value:
                  email: fakeuser@gmail.com
                  password: '^IsR49LC5!%'
                  token: true
            schema:
              properties:
                email:
                  description: Crunch username
                  example: joe@gmail.com
                  format: email
                  type: string
                password:
                  description: Crunch password
                  example: '^IsR49LC5!%'
                  format: password
                  type: string
                token:
                  default: 'false'
                  description: True results in the access token coming back in the response body for api use. False results in api server setting access token inside httpOnly cookie for browser use.
                  example: 'true'
                  type: boolean
              required:
                - email
                - password
              type: object
        description: ''
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    access_token: 0650012b49b643b8d5a60fb209ce74a9
                    token_type: Bearer
              schema:
                properties:
                  access_token:
                    default: f1e0b74c79e85b7158e721e831f1c853
                    type: string
                  token_type:
                    default: Bearer
                    type: string
                type: object
          description: OK
      security: []
      summary: Log in
      tags:
        - Authentication
      x-code-samples:
        - lang: SHELL
          source: "curl -X POST https://app.crunch.io/api/public/login/ \\\n  -H &apos;Content-type: application/json&apos; -d &apos;\n{\n  \"email\": \"fake.user@example.com\",\n  \"password\": \"password\",\n  \"token\": true\n}\n&apos;"
          syntaxLang: bash
        - lang: JAVASCRIPT
          source: |-
            const bearerToken = await fetch(
              &apos;https://app.crunch.io/api/public/login/&apos;, {
               method: &apos;POST&apos;,
               body: JSON.stringify({
                     email: &apos;joe@gmail.com&apos;,
                     password: &apos;^IsR49LC5!%&apos;,
                     token: true
               })
              })
             .then(response => response.json())
             .then(jsonResponse => jsonResponse.access_token);
          syntaxLang: javascript
        - lang: RCRUNCH SDK
          source: |-
            library(crunch)
            login(&apos;fake.user@example.com&apos;, &apos;password&apos;)
            # See ?login for options, including how to store your credentials
            # in your .Rprofile
